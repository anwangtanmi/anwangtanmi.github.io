<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>人工智能 on 暗网探秘</title>
    <link>https://anwangtanmi.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</link>
    <description>Recent content in 人工智能 on 暗网探秘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 23 Jul 2019 15:50:45 +0800</lastBuildDate>
    <atom:link href="https://anwangtanmi.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>deeplabv3&#43;二：详细代码解读 data generator 数据生成器</title>
      <link>https://anwangtanmi.github.io/posts/4310a146a50aee08ba69e6cfd56cbca3/</link>
      <pubDate>Tue, 23 Jul 2019 15:50:45 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/4310a146a50aee08ba69e6cfd56cbca3/</guid>
      <description>3+支持三种数据库，voc2012，cityscapes，ade20k，&#xA;代码文件夹&#xA;-deeplab&#xA;-datasets&#xA;-data_generator.py&#xA;在开始之前，始终记住，网络模型的输入是非常简单的image，规格化到[-1,1]或[0,1]，或者数据扩增(水平翻转，随机裁剪，明暗变化，模糊)，以及一个实施了相同数据扩增的label（毕竟需要pixel对上），test的话只需要一个image。是非常简单的数据格式，也许程序员会为了存储的压缩量以及读取处理的速度（指的就是使用tf.example 与 tf.record）写复杂的代码，但是最终的结果始终都是很简单的。&#xA;觉得自己一定要先搞清楚tf.example 与tf.record:https://zhuanlan.zhihu.com/p/33223782&#xA;目录&#xA;数据库分析&#xA;代码重点类Dataset&#xA;1.方法_parse_function()&#xA;2. 方法_preprocess_image()&#xA;2.1 input_preprocess的preprocess_image_and_label方法介绍&#xA;3.方法 _get_all_files(self):&#xA;4.方法 get_one_shot_iterator(self)&#xA;Class TFRecordDataset&#xA;代码使用是在train.py里面：&#xA;代码：先放代码，你可以尝试自己看，看得懂就不用往下翻浪费时间了。&#xA;# Copyright 2018 The TensorFlow Authors All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.</description>
    </item>
    <item>
      <title>Graph Convolutional Neural Networks for Web-Scale Recommender Systems（用于Web级推荐系统的图形卷积神经网络）</title>
      <link>https://anwangtanmi.github.io/posts/c63629bfc04e210195eb67afbaba6cf1/</link>
      <pubDate>Sun, 07 Jul 2019 09:52:26 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/c63629bfc04e210195eb67afbaba6cf1/</guid>
      <description>Graph Convolutional Neural Networks for Web-Scale Recommender Systems 用于Web级推荐系统的图形卷积神经网络 ABSTRACT Recent advancements in deep neural networks for graph-structured data have led to state-of-the-art performance on recommender system benchmarks. However, making these methods practical and scalable to web-scale recommendation tasks with billions of items and hundreds of millions of users remains a challenge.&#xA;Here we describe a large-scale deep recommendation engine that we developed and deployed at Pinterest. We develop a data-efficient Graph Convolutional Network (GCN) algorithm PinSage, which combines efficient random walks and graph convolutions to generate embeddings of nodes (i.</description>
    </item>
    <item>
      <title>2019年上半年收集到的人工智能GAN干货文章</title>
      <link>https://anwangtanmi.github.io/posts/a2b7e85d3ed20e0e61b8f2effe8a48aa/</link>
      <pubDate>Wed, 26 Jun 2019 08:38:27 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/a2b7e85d3ed20e0e61b8f2effe8a48aa/</guid>
      <description>2019年上半年收集到的人工智能GAN干货文章&#xA;GAN简介及其常见应用&#xA;训练GAN，你应该知道的二三事&#xA;了解生成对抗网络（GAN）&#xA;CosmoGAN：训练GAN，让AI寻找宇宙中的暗物质&#xA;关于GAN的七个问题：谷歌大脑工程师带你梳理生成对抗网络&#xA;Ian GoodFellow最新演讲：对抗机器学习的进展与挑战&#xA;GANs和ODEs：数学建模的终结？&#xA;了解GAN背后的设计，训练，损失函数和算法&#xA;GANs笔记(1) – 初步了解 GANs&#xA;史上最强GAN被谷歌超越！标注数据少用90%，造假效果却更逼真&#xA;GAN最新进展：8大技巧提高稳定性&#xA;CNN，GAN，AE和VAE概述&#xA;史上最强GAN被谷歌超越！标注数据少用90%，造假效果却更逼真&#xA;为什么说GAN很快就要替代现有摄影技术了？&#xA;了解GAN背后的设计，训练，损失函数和算法&#xA;一文读懂对抗生成网络的3种模型&#xA;2019-06-23 写于苏州市</description>
    </item>
    <item>
      <title>暗网世界，黑客可能用AI再造了一个“你”</title>
      <link>https://anwangtanmi.github.io/posts/433cd6b2d5a41b7cffc4624ae47ba8b5/</link>
      <pubDate>Fri, 24 May 2019 15:45:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/433cd6b2d5a41b7cffc4624ae47ba8b5/</guid>
      <description>大数据文摘出品&#xA;编辑：曹培信、张强&#xA;今年2月，卡巴斯基实验室的欺诈侦查小组捣毁了一个名为“创世纪”(Genesis)的暗网市场。该市场出售“数字身份”（互联网用户的电子身份信息），每条信息起价5美元，最高可达200美元。&#xA;出价取决于所购买信息的价值——例如，一个包含用户银行登录信息完整配置文件的数字掩码，会比一个浏览器指纹的价格要高的多。&#xA;*数字掩码是指用户设备指纹(设备ID、硬件、操作系统、IP地址、屏幕分辨率、固件版本、浏览器、浏览器插件、时区、GPU信息、WebRTCIPs、Tcp/IP指纹、cookie等)及其个人行为属性(在特定网上商店花费的时间、与兴趣相关的行为、鼠标/触摸屏行为等)的唯一组合。&#xA;黑客们通常会用恶意软件攻击他人电脑，并且找到并复制这些个人数据以及其他个人身份识别信息。&#xA;用AI在暗网再造一个“你”&#xA;“在这一点上，黑客们已经能够收集、管理和维护他们所侵入的用户的大量数据，”一家基于机器学习的技术公司的产品经理ImranMalek说，“这意味着，如果你的笔记本电脑被黑客入侵，黑客的战利品不一定是被入侵的电脑，而是你电脑上的所有数据，包括所有的身份识别信息。”&#xA;有了这些信息，通过特定浏览器和代理服务器来模仿真实用户的活动。再加上盗取的互联网用户的帐户信息，攻击者就可以自由地以该用户的名义进行新的、可信的交易——包括使用信用卡消费。&#xA;卡巴斯基实验室(KasperskyLab)全球研究与分析团队(Global Research&amp;amp;Analysis Team)高级安全研究员SergeyLozhkin表示:“我们看到了一个明显的趋势，全球范围内的信用卡欺诈行为日益增多，尽管该行业在反欺诈措施方面投入了大量资金，但这种数字孪生（Digital Twins）很难被发现。”&#xA;图片来自Kaspersky Lab&#xA;用AI对抗AI&#xA;在打击“暗网”犯罪的过程中，人工智能正成为一把利器。&#xA;MIT在今年5月13日的一篇文章指出，暗网犯罪有一些特点可以被追踪。&#xA;消失速度极快是“暗网”犯罪的一大特征，因为它们可能遭到其他黑客攻击、安全部门突击搜查，或者本身就是被设计成一个“退出骗局”——顾客为未完成的订单付费后，该网站会故意关闭。&#xA;林肯实验室(MIT Lincoln Laboratory)人工智能技术与系统集团(Artificial Intelligence Technology and Systems Group)研究员CharlieDagli就表示：“暗网交易市场的‘弹出式’特性使得跟踪参与者及其活动变得极其困难。”&#xA;图片来自mit.edu&#xA;卖家和买家在网络的多个层面(从表面到黑暗)以及在黑暗网络论坛上进行联系。“这种网站之间的不断切换现在已经成为暗网市场运作方式的既定组成部分。”Dagli说。针对这一情况，林肯实验室正在开发新的人工智能软件工具来分析表面和暗网数据，他们训练机器学习算法来计算不同论坛上用户之间的相似度，自动形成人物角色链接。&#xA;该算法首先从一个论坛a的用户那里获取数据，并为每个用户创建一个著作权模型。然后，将论坛b上用户的数据与论坛a上的所有用户模型进行对比，该算法寻找简单的线索，比如在两个论坛中一个叫“sergeygork”，另一个叫“sergeygorkin”，或者把“joenightmare”拼写为“joeknight”等等。&#xA;算法关注的另一个特性是内容相似性。&#xA;“因为很多内容都是复制粘贴的，所以类似的话可能会来自同一个用户，”Dagli说。然后，系统查找用户网络中的相似点，即用户交叉的区域，以及用户讨论的主题。然后将配置文件、内容和网络特性融合为一个输出：两个论坛中的两个人物角色代表同一个现实生活中的人物的概率，这个匹配正确率高达95%。&#xA;这个项目在实际应用中取得了很好的效果，林肯实验室参与开发了美国国防部高级研究计划局(DARPA)的Memex，曼哈顿地区检察官Cyrus Vance jr.在一份提交给美国众议院的书面证词中称，仅在2017年，他的办公室就使用Memex工具搜索出超过6000名人口贩卖嫌疑人。&#xA;Memex&#xA;黑客利用机器学习进行对抗性训练&#xA;安全部门及相关公司利用机器学习打击“暗网”犯罪的同时，黑客也开始利用机器学习进行对抗和犯罪。&#xA;比如上文中提及的“创世纪”，黑客利用“数字孪生”作为数字面具模仿真实的用户，并选择网络安全技术来通过欺诈检测协议。“如果一边是机器学习，那么另一边也是机器学习，”Malek说，“现在，黑客和坏蛋们正在实施他们自己的方案，作为一种对抗性的机器学习训练。”&#xA;另外，早在2017年的DEFCON大会上，安全公司Endgame也披露了OpenAI框架可以被用来定制恶意软件，用以创建安全引擎无法检测到的恶意软件。其原理是自动改变一部分被认为是恶意的二进制文件，使其在杀毒软件中看起来是值得信赖的。&#xA;同样还有网络犯罪自动化（Cyber crime Automation），有一种叫做Hivenet的智能僵尸网络。他们就像寄生虫一样潜伏在人们的设备中，自动决定谁是下一个使用受害者资源的人。&#xA;而这类似于这种恶意欺诈和攻击的软件，多数是在暗网中发布的。根据英国虚拟专用网络（VPN）比较服务发布的暗网价格指数，从用于攻击知名品牌的即时钓鱼网页到密码破解工具、WiFi网络黑客程序，以及各种功能的黑客工具，有一些只需要2美元就可以买到，其中就包括一些用人工智能生成的定制恶意软件。&#xA;结语&#xA;人工智能作为一项技术本无善恶之分，但是正如互联网除了我们日常可以接触到的表面，还存在一个“暗网”一样，人工智能也可能被心怀不轨的人利用，作为一个犯罪工具。&#xA;而对于AI从业者来说，也许以后在进行开发时，不仅需要考虑技术本身，还需要评估是否存在随之而来的负效应，以决定这项成果是否适合发布或者开源。&#xA;相关报道：&#xA;http://news.mit.edu/2019/lincoln-laboratory-artificial-intelligence-helping-investigators-fight-dark-web-crime-0513&#xA;实习/全职编辑记者招聘ing&#xA;加入我们，亲身体验一家专业科技媒体采写的每个细节，在最有前景的行业，和一群遍布全球最优秀的人一起成长。坐标北京·清华东门，在大数据文摘主页对话页回复“招聘”了解详情。简历请直接发送至[email protected]</description>
    </item>
    <item>
      <title>利用dlib库进行人脸识别</title>
      <link>https://anwangtanmi.github.io/posts/f2865535a143bbd2a8338a344a427dfe/</link>
      <pubDate>Wed, 27 Mar 2019 09:37:19 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/f2865535a143bbd2a8338a344a427dfe/</guid>
      <description>现如今人脸识别的技术已经十分先进了，识别率很高，dlib也是人脸识别常用的一个库，可以检测出人脸上的68个点，并且进行标注，当我们准备自己的人脸数据时，常常用dlib进行数据提取。&#xA;首先需要在python中安装dlib&#xA;pip install dlib==19.6.1 如果提示无法编译的错误，则需要在python环境中安装cmake，之后再安装dlib就能够成功&#xA;dlib人脸检测使用分为两种，一种是对人脸检测后提取整个人脸区域，一种是在人脸上标注特征点&#xA;人脸区域&#xA;import cv2 import numpy as np import time import os from matplotlib import pyplot as plt import dlib detector = dlib.get_frontal_face_detector() img = cv2.imread(&#39;E:\\private\\deeplearning\\dlib\\timg.jpg&#39;) img_gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY) faces = detector(img_gray, 1) for index, face in enumerate(faces): left = face.left() top = face.top() right = face.right() bottom = face.bottom() cv2.rectangle(img, (left, top), (right, bottom), (0, 255, 0)) cv2.imwrite(&#39;E:\\private\\deeplearning\\dlib\\timg1.jpg&#39;, img) 女神镇楼&#xA;import cv2 import numpy as np import time import os from matplotlib import pyplot as plt import dlib detector = dlib.</description>
    </item>
    <item>
      <title>【信息泄露】12306恐中招！400万数据遭泄露，请尽快更改密码！</title>
      <link>https://anwangtanmi.github.io/posts/72c4089b0b4e2fcddc13f3d28b3c48e5/</link>
      <pubDate>Fri, 28 Dec 2018 17:40:29 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/72c4089b0b4e2fcddc13f3d28b3c48e5/</guid>
      <description>春节临近，相信大多数人都已经将买火车票提上了日程。然而，近日12306的账号信息疑似遭到泄露。&#xA;今日，网络上有微信公众号(wstart)爆出12306数据已遭泄露，暗网有人兜售60万账号及410万联系人信息，且目前已有2人购买。并提供了如下截图：&#xA;爆料人称：账号基本为真，且和以往的撞库不一样是，这次泄漏非常的详细，有:&#xA;主账号的所有信息&#xA;明文密码&#xA;密码问题以及密码问题答案&#xA;联系人以及联系人身份证&#xA;该网友推测，这意味着很可能是某些抢票APP或者站点被黑客攻陷导致。&#xA;这不是12306第一次被爆出数据泄露的问题。&#xA;早在2014年乌云平台便有人爆出 12306用户数据泄漏的消息，大约有13万条真实的用户信息完全泄漏，包括姓名、身份证号码、邮箱、手机和密码等重要隐私信息。&#xA;12306随即发布了公告，澄清此次敏感信息泄漏和自身无关，并警告用户谨慎使用第三方抢票软件，并暗示第三方抢票软件很可能是信息泄漏的源头。&#xA;很快，360、猎豹等抢票插件也纷纷表示“趟枪”，泄漏事件和自己无关，表示大家可以放心使用抢票软件。&#xA;后来证明，此次12306是由于撞库被攻击导致用户数据泄漏，因为很多用户在不同网站使用的是相同的账号密码，所以黑客可以通过获取用户在其他网站的账户密码从而成功登陆12306。&#xA;而今年更是各种数据泄露事件扎堆的一年，前有AcFun受黑客攻击，近千万条用户数据外泄，后脚华住集团5亿开房信息遭到泄露。搞得人心惶惶。&#xA;针对此次数据泄露事件，有人提出了自己的质疑：12306的数据绝对不止400万，为何黑客只放出了400万？还有人称此次数据为上一次数据泄露之后的遗存。&#xA;此次12306事件，不知是真是假，但为了保险起见，还是建议大家：&#xA;1. 请尽快修改密码&#xA;2. 及时修改跟12306同密码的相关网站密码，防止被撞库造成二次伤害&#xA;3. 开通手机短信认证提醒，避免被别人撞库 4. 不要使用不明来源的抢票软件购票，尽量使用12306官方网站购票&#xA;原文：https://mp.weixin.qq.com/s/tMoMgcv7ylF_vmSKt_DIDA</description>
    </item>
    <item>
      <title>低照度增强相关算法</title>
      <link>https://anwangtanmi.github.io/posts/795d86afe606562996a4a3db87f60181/</link>
      <pubDate>Mon, 03 Dec 2018 10:37:25 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/795d86afe606562996a4a3db87f60181/</guid>
      <description>低照度增强调研情况 目前使用的低照度增强方法主要包括四种：基于直方图均衡化的方法（HE）；基于Retinex理论的方法；基于去雾模型的方法以及基于深度学习的方法。这些方法都是基本的方法，对于其他的一些方法大都是基于这些方法进行改进得到的。&#xA;基于直方图均衡的方法 直方图均衡化的思想就是将图像的灰度直方图从较为集中的某灰度区间拉伸至全部灰度范围内，用以扩大图像灰度值的范围，提升图像对比度并突出部分细节效果。对于一副图片来说其直方图可以用来表示灰度值的分布。其中如果大部分像素集中在低灰度区间则图片整体较暗，相反则图片较亮。所以我们可以对于灰度分布图采用均衡化的方法将其灰度的分布范围在整个区域平均化，这样就相当于减少了低灰度的像素个数，整个图片就会变亮一些。&#xA;基于Retinex的方法 Retinex方法主要是基于人类的视觉系统可以不受光源强度和照射不均匀等不确定因素的干扰而准确感知物体的颜色和亮度这一理论提出的。提出这一理论主要是基于真实世界中物体的颜色由光与物体的相互作用产生的，其本身是无颜色的；构成颜色的基本单元是红、绿、蓝三原色光波、单位区域的颜色由红绿蓝三原色光波决定这几个理论。&#xA;根据上述理论，我们可以得出物体的颜色不受反射光强和非均匀光照的影响仅有物体的反射光线决定。基于此，我们假设如下公式：，其中表示视觉系统最终的图片（人看到的图片），表示物体特有的性质称为物体的反射特性，表示入射光的影响。根据公式我们需要的是，已知的是，需要估计的是。&#xA;为了简化计算，我们对上式两边同时取对数（乘除变加减）则可以得到：&#xA;由上式可知，我们只需要估计出就可以得到对应的。对于的估计采用高斯卷积函数进行：&#xA;其中表示的是高斯函数，*表示卷积运算。的表达式为：&#xA;表示的是一个尺度，表示高斯函数的尺度选择，其满足。该式中是需要求的。因此对于一个彩色通道的图片，其某一通道对应的图像变换后为：&#xA;然后在利用就可以求出每一个通道的值。最终就得到了每个通道处理后的值进而得到处理后的图片。&#xA;上述方法采用了一个高斯核，因此一般被称为单尺度Retinex方法（SSR）。现在假设整个过程采用了个高斯核，则每个在评估的时候就会出现个不同的值，如果把这些值综合起来就行成了多尺度的Retinex方法（MSR），其具体公式如下：表示权重。&#xA;由于MSR会存在色差，有人提出来在通道上加入调节因子来消除色差，其具体如下：&#xA;表示的是调节因子，其对应的取值方式不同往往会产生不同的效果。现在常用的有基于其各通道的均值 ，方差计算出最小值和最大值，然后用最小值和最大值进行归一化。&#xA;其中取值越小，增强效果越明显，一般取2-3最适宜。&#xA;基于去雾模型的图片增强 去雾模型一般是针对雾霾或者大雾天气，考虑到空气中的悬浮物导致的图片效果不佳时需要采用的方法。该方法假设：&#xA;其中表示待去雾的图像，表示无雾图像，表示全球大气光成分，表示折射率（大气传递系数）。在使用过程中是要求的，为输入的，和是需要通过暗通道先验来进行估计的。&#xA;暗通道先验规律是指每一个图片的局部区域都很有可能有至少一个颜色通道有很低的值。根据这个规律我们定义了暗通道的值如下：&#xA;通过上式可以看出，求暗通道的值首先是求出通道的最小值。在根据通道最小值求出区域内的最小值。&#xA;根据暗通道的值我们可以估计大气折射率：&#xA;根据暗通道的值估计大气光：&#xA;（1）：选取暗通道图像中暗通道最亮的0.1%。&#xA;（2）：在取出的位置中，对应到原图找出最高亮度点的值作为大气光。&#xA;然后回带到开始的式子中就可以求出对应的去雾图：&#xA;基于深度学习 使用卷积神经网络来进行低照度增强的资料较少，目前只发现了一种方式，并且也没有固定的官方模型，只是一个简单的7层卷积网络，由于图片增强的目的是把亮度低的地方亮度变高，所以该模型要求输出的大小和原来的相同，因此该网络没有池化层。其具体结构如下：&#xA;上述就是采用的网络结构，由于图片增强的目的只是为了提高亮度，同时并不希望色彩方面的值发生改变而引起不必要的色彩差异。因此本次采用的是将RGB色彩空间转化为HSI空间，然后再对I分量进行卷积处理，最后再转换成RGB空间合成最后的图片。其具体流程如下：&#xA;各方法的优劣 上述方法是最近看到的低照度增强使用较多的方法，其各有优缺。现在将其总结如下：&#xA;直方图法可以有效的提高对比度，并且处理速度快。但是容易出现色差并且灰度级的合并会丢失细节信息。&#xA;SSR方法假设光照是缓慢变化的，但是真是情况下光照是不平滑的，因此采用这种方法在亮度差异大的区域会产生光晕。&#xA;MSR方法能够较好的提高图片的对比度和亮度，但是图片边缘锐化不足，容易出现光晕或者图片泛白。&#xA;去雾模型虽然能够在一定程度上提高视觉质量，但是增强后的图像往往不符合场景，因为我们的场景是光线不够导致的图像变暗，而不是由于悬浮物遮挡导致的。&#xA;基于深度学习的方法能够避免传统方法的参数调节问题，也能够使色彩更加协调，但是缺乏训练样本，在训练时我们必须要给出同样场景只有照度不同的图片，因此该方法也比较难实现。&#xA;参考文献&#xA;《基于深度卷积神经网络的低照度图像增强》马红强1 ，马时平1，许悦雷1,2，朱明明1；&#xA;《基于卷积神经网络的水下图像增强算法研究》 丁雪研</description>
    </item>
    <item>
      <title>深度 | IBM长文解读人工智能、机器学习和认知计算</title>
      <link>https://anwangtanmi.github.io/posts/7694842dc57ef335c3d7651e46647d4d/</link>
      <pubDate>Fri, 26 Oct 2018 10:33:56 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/7694842dc57ef335c3d7651e46647d4d/</guid>
      <description>人工智能的发展曾经经历过几次起起伏伏，近来在深度学习技术的推动下又迎来了一波新的前所未有的高潮。近日，IBM 官网发表了一篇概述文章，对人工智能技术的发展过程进行了简单梳理，同时还图文并茂地介绍了感知器、聚类算法、基于规则的系统、机器学习、深度学习、神经网络等技术的概念和原理。&#xA;人类对如何创造智能机器的思考从来没有中断过。期间，人工智能的发展起起伏伏，有成功，也有失败，以及其中暗藏的潜力。今天，有太多的新闻报道是关于机器学习算法的应用问题，从癌症检查预测到图像理解、自然语言处理，人工智能正在赋能并改变着这个世界。&#xA;现代人工智能的历史具备成为一部伟大戏剧的所有元素。在最开始的 1950 年代，人工智能的发展紧紧围绕着思考机器和焦点人物比如艾伦·图灵、冯·诺伊曼，迎来了其第一次春天。经过数十年的繁荣与衰败，以及难以置信的高期望，人工智能及其先驱们再次携手来到一个新境界。现在，人工智能正展现着其真正的潜力，深度学习、认知计算等新技术不断涌现，且不乏应用指向。&#xA;本文探讨了人工智能及其子领域的一些重要方面。下面就先从人工智能发展的时间线开始，并逐个剖析其中的所有元素。&#xA;现代人工智能的时间线&#xA;1950 年代初期，人工智能聚焦在所谓的强人工智能，希望机器可以像人一样完成任何智力任务。强人工智能的发展止步不前，导致了弱人工智能的出现，即把人工智能技术应用于更窄领域的问题。1980 年代之前，人工智能的研究一直被这两种范式分割着，两营相对。但是，1980 年左右，机器学习开始成为主流，它的目的是让计算机具备学习和构建模型的能力，从而它们可在特定领域做出预测等行为。很多初学者，对大数据的概念都是模糊不清的，大数据是什么，能做什么，学的时候，该按照什么线路去学习，学完往哪方面发展，想深入了解，想学习的同学欢迎加入大数据学习扣群：805127855，有大量干货（零基础以及进阶的经典实战）分享给大家，并且有清华大学毕业的资深大数据讲师给大家免费授课，给大家分享目前国内最完整的大数据高端实战实用学习流程体系&#xA;图 1：现代人工智能发展的时间线&#xA;在人工智能和机器学习研究的基础之上，深度学习在 2000 年左右应运而生。计算机科学家在多层神经网络之中使用了新的拓扑学和学习方法。最终，神经网络的进化成功解决了多个领域的棘手问题。&#xA;在过去的十年中，认知计算（Cognitive computing）也出现了，其目标是打造可以学习并与人类自然交互的系统。通过成功地击败 Jeopardy 游戏的世界级选手，IBM Watson 证明了认知计算的价值。&#xA;在本文中，我将逐一探索上述的所有领域，并对一些关键算法作出解释。&#xA;基础性人工智能&#xA;1950 年之前的研究提出了大脑是由电脉冲网络组成的想法，正是脉冲之间的交互产生了人类思想与意识。艾伦·图灵表明一切计算皆是数字，那么，打造一台能够模拟人脑的机器也就并非遥不可及。&#xA;上文说过，早期的研究很多是强人工智能，但是也提出了一些基本概念，被机器学习和深度学习沿用至今。&#xA;图 2：1950 – 1980 年间人工智能方法的时间线&#xA;人工智能搜索引擎&#xA;人工智能中的很多问题可以通过强力搜索（brute-force search）得到解决。然而，考虑到中等问题的搜索空间，基本搜索很快就受影响。人工智能搜索的最早期例子之一是跳棋程序的开发。亚瑟·塞缪尔（Arthur Samuel）在 IBM 701 电子数据处理机器上打造了第一款跳棋程序，实现了对搜索树（alpha-beta 剪枝）的优化；这个程序也记录并奖励具体行动，允许应用学习每一个玩过的游戏（这是首个自我学习的程序）。为了提升程序的学习率，塞缪尔将其编程为自我游戏，以提升其游戏和学习的能力。&#xA;尽管你可以成功地把搜索应用到很多简单问题上，但是当选择的数量增加时，这一方法很快就会失效。以简单的一字棋游戏为例，游戏一开始，有 9 步可能的走棋，每 1 个走棋有 8 个可能的相反走棋，依次类推。一字棋的完整走棋树包含 362,880 个节点。如果你继续将这一想法扩展到国际象棋或者围棋，很快你就会发展搜索的劣势。&#xA;感知器&#xA;感知器是单层神经网络的一个早期监督学习算法。给定一个输入特征向量，感知器可对输入进行具体分类。通过使用训练集，网络的权重和偏差可为线性分类而更新。感知器的首次实现是 IBM 704，接着在自定义硬件上用于图像识别。&#xA;图 3：感知器与线性分类&#xA;作为一个线性分类器，感知器有能力解决线性分离问题。感知器局限性的典型实例是它无法学习专属的 OR （XOR） 函数。多层感知器解决了这一问题，并为更复杂的算法、网络拓扑学、深度学习奠定了基础。&#xA;聚类算法&#xA;使用感知器的方法是有监督的。用户提供数据来训练网络，然后在新数据上对该网络进行测试。聚类算法则是一种无监督学习（unsupervised learning）方法。在这种模型中，算法会根据数据的一个或多个属性将一组特征向量组织成聚类。&#xA;图 4：在一个二维特征空间中的聚类&#xA;你可以使用少量代码就能实现的最简单的聚类算法是 k-均值（k-means）。其中，k 表示你为样本分配的聚类的数量。你可以使用一个随机特征向量来对一个聚类进行初始化，然后将其它样本添加到其最近邻的聚类（假定每个样本都能表示一个特征向量，并且可以使用 Euclidean distance 来确定「距离」）。随着你往一个聚类添加的样本越来越多，其形心（centroid，即聚类的中心）就会重新计算。然后该算法会重新检查一次样本，以确保它们都在最近邻的聚类中，最后直到没有样本需要改变所属聚类。</description>
    </item>
    <item>
      <title>深度学习（五）</title>
      <link>https://anwangtanmi.github.io/posts/3b62d053958e2a5f46c046deb4f8524b/</link>
      <pubDate>Sun, 05 Aug 2018 09:30:02 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3b62d053958e2a5f46c046deb4f8524b/</guid>
      <description>卷积神经网络 边缘检测 适用的滤波核为：&#xA;用于检测垂直边缘，经过卷积之后，会将从亮变暗的边缘检测出来，结果显示高亮&#xA;水平边缘检测器：&#xA;padding 1、单纯使用卷积时，根据公式最终结果是&#xA;(&#xA;n&#xA;−&#xA;f&#xA;+&#xA;1&#xA;)&#xA;∗&#xA;(&#xA;n&#xA;−&#xA;f&#xA;+&#xA;1&#xA;)&#xA;(n – f + 1)*(n – f + 1)&#xA;(n−f+1)∗(n−f+1) ，图像的大小会缩小，边缘信息也会缺失，这时可以进行填充操作，在矩阵外补零来避免，这也就是平常所用的卷积，卷积核中心遍历所有的元素&#xA;2、填充共分两种类型：一种是valid，即输入输出尺寸不一致，大小为&#xA;(&#xA;n&#xA;−&#xA;f&#xA;+&#xA;1&#xA;)&#xA;∗&#xA;(&#xA;n&#xA;−&#xA;f&#xA;+&#xA;1&#xA;)&#xA;(n – f + 1)*(n – f + 1)&#xA;(n−f+1)∗(n−f+1)，另一种为same，输入与输出大小一致，padding为(f-1)/2&#xA;步长 如果步长变化，卷积之后结果为&#xA;(&#xA;n&#xA;+&#xA;2&#xA;p&#xA;−&#xA;f&#xA;s</description>
    </item>
    <item>
      <title>反卷积神经网络介绍</title>
      <link>https://anwangtanmi.github.io/posts/67576deee1ea8eb6a0d2d978d2c94edd/</link>
      <pubDate>Sun, 13 May 2018 11:29:09 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/67576deee1ea8eb6a0d2d978d2c94edd/</guid>
      <description> 反卷积是指：通过测量输出和已经输入重构未知输入的过程。在神经网络中，反卷积过程并不具备学习的能力，仅仅是用于可视化一个已经训练好的卷积网络模型，没有学习训练的过程。 下图所示为VGG 16反卷积神经网络的结构，展示了一个卷积网络和反卷积网络结合的过程。VGG 16是一个深度神经网络模型。它的反卷积就是将中间的数据，按照前面卷积、池化等变化的过程，完全相反地做一遍，从而得到类似原始输入的数据。 反卷积神经网络的应用场景 由于反卷积网络的特性，导致它有许多特别的应用，一般可以用于信道均衡、图像恢复、语音识别、地震学、无损探伤等未知输入估计和过程辨识方便的问题。 在神经网络的研究中，反卷积更多的是充当可视化作用。对于一个复杂的深度卷积网络，通过每层若干个卷积核的变换，我们无法知道每个卷积核关注的是什么，变换后的特征是什么样子。通过反卷积的还原，可以对这些问题有个清晰的可视化，以各层得到的特征图作为输入，进行反卷积，得到反卷积结果，用以验证显示各层提取到的特征图。 参考： https://www.cnblogs.com/zyly/p/8991412.html </description>
    </item>
    <item>
      <title>百度开源移动端深度学习框架mobile-deep-learning</title>
      <link>https://anwangtanmi.github.io/posts/4841daa65010b2c313444c3d46e9ddfc/</link>
      <pubDate>Tue, 26 Sep 2017 13:07:41 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/4841daa65010b2c313444c3d46e9ddfc/</guid>
      <description>2017 年 9 月 25 日，百度在 GitHub 开源了移动端深度学习框架 mobile-deep-learning（MDL）的全部代码以及脚本，希望这个项目在社区的带动下能够更好地发展。&#xA;写在前面 深度学习技术已经在互联网的诸多方向产生影响，每天科技新闻中关于深度学习和神经网络的讨论越来越多。深度学习技术在近两年飞速发展，各种互联网产品都争相应用深度学习技术，产品对深度学习的引入也将进一步影响人们的生活。随着移动设备的广泛使用，在移动互联网产品应用深度学习和神经网络技术已经成为必然趋势。&#xA;与深度学习紧密联系在一起的图像技术同样在业界广泛应用。传统计算机视觉和深度学习的结合使图像技术得以快速发展。&#xA;GitHub 地址：https://github.com/baidu/mobile-deep-learning&#xA;移动端深度学习技术应用 百度应用案例&#xA;在移动端应用深度学习技术比较典型的就是 CNN（Convolutional Neural Network）技术，即常被人提起的卷积神经网络。mobile-deep-learning（MDL）是一个基于卷积神经网络实现的移动端框架。&#xA;MDL 在移动端主要有哪些应用场景呢？比较常见的如分辨出一张图片中的物体是什么，也就是 分类；或者识别出一张图片中的物体在哪、有多大，也就是 主体识别。&#xA;下面这个 App 叫拾相，可以在 Android 平台的应用宝中找到。它可以自动为用户将照片分类，对于拥有大量照片的用户来讲，这个功能很有吸引力。&#xA;另外，在手机百度搜索框右侧可以打开图像搜索，打开图像搜索后的界面效果如下图。当用户在通用垂直类别下开启自动拍开关（图中下方标注）时，手停稳它就会自动找到物体进行框选，并无需拍照直接发起图像搜索。整个过程可以给用户带来流畅的体验，无需用户手动拍照。图片中的框体应用的就是典型的深度学习主体识别技术，使用的就是 mobile-deep-learning（MDL）框架。MDL 目前在手机百度中稳定运行了多个版本，经过数次迭代后可靠性大幅提升。&#xA;业界其他案例&#xA;互联网行业在移动端应用神经网络的案例已经越来越多。&#xA;目前的流派主要有两种，其一是完全在客户端运行神经网络，这种方式的优点显而易见，那就是不需要经过网络，如果能保证运行速度，用户体验会非常流畅。如果能保证移动端高效运行神经网络，可以使用户感觉不到加载过程。使用完全脱离互联网网络在移动端运算神经网络的 App 已经举例，如前述拾相和手机百度中的图像搜索。&#xA;其二是另一种，运算神经网络过程依赖互联网网络，客户端只负责 UI 展示。在客户端神经网络落地之前，绝大部分 App 都使用了这种运算在服务端、展示在客户端的方式。这种方式的优点是实现相对容易，开发成本更低。&#xA;为了更好理解上述两种神经网络的实现方法，下面展示两个识别植物花卉的例子，分别用到了识花和形色两个 App。这两款 App 都使用了典型分类方法，都可以在 iOS 平台的 App Store 中找到。下图是一张莲花图片，这张图片使用识花和形色两个 App 分类都能得到较好的分类结果。你可以尝试安装这两款 App 并根据使用效果来判断它们分别使用了上述哪一种方法。&#xA;识花&#xA;近一年来涌现出很多花卉识别的 App。微软「识花」是微软亚洲研究院推出的一款用于识别花卉的 App，用户可以在拍摄后选择花卉，App 会给出该类花卉的相关信息。精准的花卉分类是其对外宣传的一大亮点。&#xA;形色&#xA;这款「形色」App，只需要对准植物 (花、草、树) 拍照，就能快速给出植物的名字，还有不少有趣的植物知识，如这个植物还有什么别名、植物的花语、相关古诗词、植物文化、趣味故事以及养护方法，看完收获不少。&#xA;移动端应用深度学习的难点 一直以来由于技术门槛和硬件条件的限制，在移动端应用深度学习的成功案例不多。传统移动端 UI 工程师在编写神经网络代码时，可以查阅到的移动端深度学习资料也很少。另一方面，时下的互联网竞争又颇为激烈，先入咸阳者王，可以率先将深度学习技术在移动端应用起来，就可以更早地把握时代先机。&#xA;移动端设备的运算能力相对 PC 端非常弱小。由于移动端的 CPU 要将功耗指标维持在很低的水平，制约了性能指标的提升。在 App 中做神经网络运算会使 CPU 运算量猛增。如何协调好用户功耗指标和性能指标就显得至关重要。</description>
    </item>
    <item>
      <title>[April]总结和规划</title>
      <link>https://anwangtanmi.github.io/posts/d41882dc7be50dad3ed75372c4afd68f/</link>
      <pubDate>Wed, 30 Apr 2014 15:53:52 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/d41882dc7be50dad3ed75372c4afd68f/</guid>
      <description>[April]总结和规划 四月份是平淡的一个月，貌似没发生多少大事，所以我就简单总结下。&#xA;四月份清明节放假，寻思着趁放假把图书馆借的《批判性思维》和《暗时间》看完，没想到一直拖到前几天才看完。不过细嚼慢咽效果还是不错的，收获不少，接下去准备看《学会提问》。&#xA;四月各种网络上的比赛都开始了，像携程，GCJ，编程之美什么的，我倒是有去混一混，不过是打酱油的。 四月份没怎么刷题的样子，因为各种网络赛，还有个院内的比赛，另外被侠”姐”拖去打各种比赛，狠欢乐..&#xA;越来越感觉时间的不够用，这个月开始使用wunderlist+发条番茄钟进行事情的计划和执行。托它们的福，感觉我的生活丰富了许多。但是还不够，我希望能花更多的时间来做我喜欢的事情，于是我仿照@编程菜菜 巨巨的方法，开始了#8 tomatoes a day#的计划，今天才day 4，希望能坚持下去(ง •̀_•́)ง。&#xA;上个月记得说过要整理博客来着，于是今天就整理了一下，还写了个简单Python来爬标题，后来发现爬完标题后发现在本地文本进行分类效率实在太慢，于是就在线整理了，今天就整理了一半。后面留着过几天有空再说吧。&#xA;明天开始就是五一劳动节了，又是假期…准备出去好好玩一下，于是这几天估计不会学习╮(￣▽￣)╭，tomatoes计划也尽量完成吧。。&#xA;下个月准备复习数学，感觉以前数学学的不深，而且差不多忘了，需要好好地补一下了。已经借了概率论和微积分来看了ˊ&amp;gt;ˋ，希望能看完一半。 然后这个月又开始上起了Coursera的课程，是复旦的《大数据与信息传播》，跟舍友一起学的(:з」∠)_，另外又出了个国内的学堂在线，体验非常棒，准备去学几门～希望不要跟丢了.. 另外如果有时间的话想去重温下Python…又快忘了…</description>
    </item>
  </channel>
</rss>
