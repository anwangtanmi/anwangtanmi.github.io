<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on 暗网探秘</title>
    <link>https://anwangtanmi.github.io/categories/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on 暗网探秘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 12 Aug 2019 15:37:18 +0800</lastBuildDate>
    <atom:link href="https://anwangtanmi.github.io/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>本体技术视点 | 长安望楼？这只是中国古代密码学应用的一角</title>
      <link>https://anwangtanmi.github.io/posts/5903246a252e53e3b0bcdf48555d66d0/</link>
      <pubDate>Mon, 12 Aug 2019 15:37:18 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/5903246a252e53e3b0bcdf48555d66d0/</guid>
      <description>注：本文部分图片及文字来源于网络，仅供交流学习使用，不具有任何商业用途。&#xA;封面图来源：https://107cine.com/stream/112883&#xA;01 引言&#xA;天保三载，元月十四日，巳正。长安城一百零八坊沐浴在上午灿烂的阳光中。西市署署吏站在望楼上宣布西市开市，长安城暂停宵禁，全城沸腾。在这盛事背景下，长安城中暗藏的杀机开始显现，突厥狼卫伺机而动，一场惊心动魄的反恐行动就此展开。&#xA;图 | 网络&#xA;张小敬能够在追击狼卫的过程中处处取得先机得益于望楼及其通信系统。长安城中每一坊都设有二到三栋耸立的望楼，实时监视着城中异样，并用紫白色方格加以不同的组合，将消息快速传递给张小敬以及情报中心靖安司，以便他们快速作出决策。&#xA;图 | 网络&#xA;望楼上的武侯掌握着一套密码通信系统，这是消息能较为安全传送的保证。简单来说，经过精心训练的坊间望楼武侯首先将要传递的消息按照既定的密码本将消息编码成算筹表示的数字，再用紫白色方格将数字表示并传递出去。接收到消息的靖安司大望楼武侯把颜色方格再转回数字，并将消息解码出来。&#xA;图 | 中国科学技术馆所展示的算筹&#xA;值得一提的是，中国古代在春秋战国时期就开始采用算筹计数法，在数学史上留下了一个个辉煌的记录，古代大将更是“运筹帷幄”，决胜千里之外。&#xA;02 中国古代的密码应用&#xA;今天，密码被广泛应用在生活中，银行卡刷卡、社交通信以及区块链交易等生活的方方面面都无时不刻在使用密码学保护金融安全和通信安全等。而在古代以及近代，无论是中国还是外国，密码一般都用于军事活动中。古罗马军事统帅凯撒在军队中使用替换加密技术来传递消息，而 Enigma 密码机的破译则加速了二战的结束，中国古代也有很多关于密码应用的记载。&#xA;2.1 阴符阴书通密语&#xA;公元前一千多年，姜子牙凭着满腹韬略辅佐周武王兴周灭商，为中国历史上存在时间最长朝代的建立创下了坚实的基础。据传为姜子牙所著的《六韬》更被被誉为是兵家权谋类的始祖。在这其中，姜子牙提出了采用阴符和阴书来进行保密通信。&#xA;姜子牙以八种不同长短的阴符分别表示八种战局结果，如长一尺的阴符表示大获全胜。只有君王和主将才明白这八种阴符代表的意义，这样敌人就较难识破它。可以看到，阴符可以传递的消息比较少，如果两军要配合出军作战，则可以使用阴书来进行联络军机要情。两军联络时，军情被拆分成三份，三个传令兵各持一份传递，只有合起来才能了解整个军情。阴书可以看作是较为典型的秘密分享方案原型。&#xA;2.2 虎符相合令千军&#xA;1973年，西安出土了一枚秦朝虎形兵符——秦杜虎符。作为国宝级的珍贵文物，该虎符现存于陕西历史博物馆中。虎符分为两半，右半符掌握在国君手中，左半符在将军手中。平时，将军持左半符可以命令五十人以下的士兵采取军事措施。凡要调动五十人以上的士兵，就要求左符和右符相合才能行动。但在紧急情况下，如狼烟起，将军亦可持半符便宜行事。&#xA;图 | 陕历史博物馆的秦杜虎符&#xA;我们可以看到，现代在密码学中的认证也继承着这种精神，并把“我拥有什么”这样的认证进一步发展成“我知道什么”以及“天然的属性是什么”等多样化的认证方式。&#xA;2.3青鹅字拆宰相亡&#xA;公元684年，武则天废唐中宗李哲，开启则天朝的时代。徐敬业在扬州起兵反对武则天，同时由骆宾王主笔著名的《为徐敬业讨武曌檄》以号召天下勤王救国。此时，时任宰相裴炎和徐敬业的一封信被武则天获得，这封书信上并没有其它东西，只是上书“青鵝”两字。武则天破译了其中的密码规律，即把“青鵝”两字拆开，就变成“十二月，我自与”，这是相约时间做内应的意思。于是，裴炎被武则天当场拿下。&#xA;值得一提的是，在《资治通鉴》和《唐史》等正史均未有记载该青鹅事件。另外，骆宾王正是初唐四杰之一，于七岁成五言古诗《咏鹅》的唐代著名诗人。&#xA;2.4 太子梦破矾书显&#xA;白矾，是由明矾石经加工提炼而成。将白矾溶于水中，毛笔蘸着白矾水写字晾干后字迹会消失，重新浸于水中字迹就会重现。白矾水是中国古代军事和政治活动中应用较为广泛的一种隐写术。严格意义来说，隐写书并不属于密码学，但常用来进行秘密通信。&#xA;清康熙晚年，西北战事起。废太子胤礽想出征并领大将军的职务，并以此复出。于是胤礽托人用矾书代为传信，请人保举自己作为领兵大将。后来他人发现了该矾书，并向康熙告发。至此，胤礽恢复皇太子身份的计划彻底失败。&#xA;03 后记&#xA;古典密码学在古代和近代军事等活动中发挥了重大作用。如今，现代密码学在日常生活中展示着它的强大魅力，更是区块链技术的一个重要组成部分。本体技术团队将对相关密码学技术，如门限技术、零知识证明以及聚合签名等进行研究分析，为区块链安全以及区块链的广泛应用提供重要技术支撑。&#xA;本文的完成参考了包括国家密码管理局网站以及陕西历史博物馆网站等大量资料，受篇幅所限，并不一一列出，在此一并感谢。</description>
    </item>
    <item>
      <title>Python爬虫-代理篇-TOR</title>
      <link>https://anwangtanmi.github.io/posts/287f3ff4c76f744f5f4d4bc1e0e52401/</link>
      <pubDate>Mon, 01 Jul 2019 14:49:16 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/287f3ff4c76f744f5f4d4bc1e0e52401/</guid>
      <description>Tor介绍 TOR是全球有名的匿名网络，具有很高的匿名性，简单点说，Tor网络利用流量转发的方式，达到隐藏真实请求端(客户端)的目的，是目前比较受欢迎也比较有名气的的匿名工具。其原理图如下&#xA;由于出口IP随机轮换，且具有很强的匿名性，因此我们可以使用Tor网络作为爬虫代理，用来解决一些网站的IP封禁问题。&#xA;Tor的安装和使用 Tor安装 sudo apt-get install tor&#xA;重启 sudo /etc/init.d/tor restart&#xA;生成密码 tor –hash-password mypassword&#xA;这个操作会生成一个Hash串&#xA;修改配置文件 命令 vim /etc/tor/torrc&#xA;ControlPort 9051 HashedControlPassword 16:872860B76453A77D60CA2BB8C1A7042072093276A3D701AD684053EC4C Python使用Tor Python2 sudo pip install requests&#xA;sudo pip install requesocks&#xA;#!/usr/bin/python #coding:utf-8 import os import requesocks import socks import socket import requests import time import sys reload(sys) sys.setdefaultencoding(&#39;utf-8&#39;) url = &#39;http://api.ipify.org?format=json&#39; def getip_requests(url): print &#34;(+) Sending request with plain requests...&#34; r = requests.get(url) print &#34;</description>
    </item>
    <item>
      <title>【基础篇】————23、隐匿攻击之Tor Fronting</title>
      <link>https://anwangtanmi.github.io/posts/9d0dd8da633fca8f7e1bd2eecfe9a095/</link>
      <pubDate>Mon, 27 May 2019 14:54:07 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9d0dd8da633fca8f7e1bd2eecfe9a095/</guid>
      <description>0x01 简介 学习完Domain Fronting之后，又从@vysecurity的文章里学会了一个新的姿势–Tor Fronting,使用Tor Fronting&#xA;同样能在攻击中隐藏自己，并且更加容易实现，此文就来介绍一下这个新的姿势。&#xA;0x02 Tor Hidden Services Tor是互联网上用于保护您隐私最有力的工具之一，而Tor Hidden Services则是为了隐藏自己的网站或者其他服务的一个服务。通过此服务，我们可以获取到一个通过Tor Browser来访问的Hostname，此Hostname唯一且匿名，所以我们完全可以使用这个Hostname来为我们转发流量从而达到隐匿的目的。&#xA;怎样搭建Tor Hidden Services可以参考此wiki，下面介绍一下我测试环境的搭建过程。&#xA;环境为：Ubuntu 12.04&#xA;搭建过程如下：&#xA;查看系统信息:&#xA;lsb_release -a&#xA;可以看到Codename为precise，所以在这里选择deb类型如下：&#xA;之后按照官方wiki修改更新源，我的源路径为/etc/apt/sources.list，有的系统更新源路径可能在/etc/apt/sources.list.d/，在源中添加以下条目：&#xA;deb http://deb.torproject.org/torproject.org precise main&#xA;deb-src http://deb.torproject.org/torproject.org precise main&#xA;之后执行以下命令:&#xA;gpg –keyserver keys.gnupg.net –recv A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89&#xA;gpg –export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | sudo apt-key add –&#xA;安装：&#xA;$ sudo apt-get update&#xA;$ sudo apt-get install tor deb.torproject.org-keyring&#xA;执行完成以后，就成功安装了，如果出现问题，可以查看一下wiki。&#xA;之后要对tor进行一下配置，编辑配置文件/etc/tor/torrc，将以下两个参数前的注释去掉。&#xA;HiddenServiceDir /var/lib/tor/hidden_service/&#xA;HiddenServicePort 80 127.0.0.1:8080&#xA;HiddenServicePort为代理的端口，将本地的8080端口服务转发到80端口。&#xA;配置完成以后对Tor服务进行重启：&#xA;sudo service tor restart 查看获取到的hostname:</description>
    </item>
    <item>
      <title>centos7.x搭建Tor私人网桥</title>
      <link>https://anwangtanmi.github.io/posts/5c5c5bc14ae32383d43fdd9ff83709ca/</link>
      <pubDate>Mon, 13 May 2019 15:21:24 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/5c5c5bc14ae32383d43fdd9ff83709ca/</guid>
      <description>1. 下载并安装 Tor yum install tor -y 2. 安装 obfs4 通过python进行编译安装：&#xA;（1）安装 所需依赖软件模块： yum install make automake gcc python-pip python-devel libyaml-devel （2）安装 obfs4proxy： pip install obfsproxy 通过go进行编译安装：&#xA;（1）下载go的obfs4项目： git clone http://www.github.com/Yawning/obfs4 （2）进入obfs4目录进行编译：&#xA;go build -o obfs4proxy/obfs4proxy ./obfs4proxy （3）复制bofs4proxy到系统工作目录下： cp ./obfs4proxy/obfs4proxy /usr/bin/obfs4proxy 3. 配置 Tor Bridges 编辑 /etc/tor/torrc： vim /etc/tor/torrc 定义一个 ORPort，不作为出口节点，设置成 Bridge： Log notice file /var/log/tor/notices.log RunAsDaemon 1 ORPort 4443 Exitpolicy reject *:* BridgeRelay 1 ServerTransportPlugin obfs4 exec /usr/bin/obfs4proxy ExtORPort auto PublishServerDescriptor 0 重启tor服务： systemctl restart tor 查看tor服务状态</description>
    </item>
    <item>
      <title>惠普暗影精灵2 Mojave（几乎完美黑苹果）</title>
      <link>https://anwangtanmi.github.io/posts/a407b1cd745414699bd8bf6e50e682e2/</link>
      <pubDate>Sun, 05 May 2019 10:21:39 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/a407b1cd745414699bd8bf6e50e682e2/</guid>
      <description> 惠普暗影精灵2 Mojave 新的改变 已知BUG Bug修复 1. 电池修复 2. 亮度调节修复正常 **Mac os（Mojave）的镜像百度即可！** Github开源地址 ====传送地址: [Mojave 暗影精灵2](https://github.com/Arecall/-Mac-os).==== 新的改变 2018年6月5日，在2018苹果全球开发者大会上，苹果发布了mac OS Mojave系统。&#xA;夜间模式 ，MacOS Mojave的夜间模式，不仅使UI变暗，&#xA;还切换壁纸，窗口边框和窗口内容，此外，XCode同样也支持夜间模式。用户可以自行设置夜晚模式，也可以由系统决定随时间自动启动。 桌面堆积，可以通过类型、日期、标签等进行分类，侧栏底部的新快速操作，可快速执行旋转图像等操作。几乎可以在任何文件视图中使用侧边栏。如果选择多个文件，它可以对所有文件执行操作，例如将它们组装成PDF。 画廊视图（Gallery View），可预览图片、视频、PPT、表格、PDF等，侧边栏支持完整元数据，右下角增加快捷工具栏可执行旋转等操作，侧边栏可以在几乎任何文件视图中使用，选择多个文件后可以执行整体操作如生成PDF。 截屏，功能非常丰富，就像在iOS上截图时角落里会出现大拇指图标，点击就会出现快速标记工具。 iOS应用登陆桌面 ，Apple News苹果新闻、Stock股票、Voice Memos语音备忘录、Home家庭都会来到macOS，基本上可以视为iPad版本，为此苹果从iOS上移植过来了一些关键框架。 HomeKit，可以在Mac上添加和管理HomeKit设备，依然支持Siri语音控制。 Quick Look，加入Markup，可以直接把签名拖拽到文档内。 Continuity Camera，可以直接将iPhone里已有或者拍摄的照片直接导入桌面文档，还可以扫描手机上的文档并发送结果。 安全和隐私，任何应用都默认受到保护。Safari减少对用户数据的追踪。网页信息追踪保护默认关闭。加强硬件指纹识别安全等级（iOS 12/macOS Mojave同步）。 应用商店，界面重新设计像iOS商店看齐，增加新的分类包括发现、创建、工作、游戏、开发、分类、更新，增加关于应用的故事（Stories）。&#xA;已知BUG WIFI模块不可用&#xA;2. 电池DDST有问题，未修复&#xA;3. 亮度调节需要外接键盘，使用Fn+亮度调节经行第一次矫正，以后直接使用后电脑键盘deFn+亮度调节。 Bug修复 1. 电池修复 2. 亮度调节修复正常 Mac os（Mojave）的镜像百度即可！ Github开源地址 传送地址: Mojave 暗影精灵2. </description>
    </item>
    <item>
      <title>比特币配置洋葱tor服务</title>
      <link>https://anwangtanmi.github.io/posts/b1e8010faa0f6ad3722603d365f43ee6/</link>
      <pubDate>Thu, 28 Mar 2019 18:49:57 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/b1e8010faa0f6ad3722603d365f43ee6/</guid>
      <description>注意权限问题，我就是在本地很快成功（root用户），在服务其上用的其它用户（权限问题），因为权限问题折腾了好几个小时╭( T □ T )╮&#xA;我是在服务器和我本地环境都做了验证&#xA;1、下载tor(2)，目前比特币不支持tor3&#xA;sudo apt-get install tor&#xA;2、配置/etc/tor/torrc&#xA;ControlPort 9051&#xA;CookieAuthentication 1&#xA;CookieAuthFileGroupReadable 1&#xA;3 查看bitcoind运行的用户和组信息&#xA;ps -eo user,group,comm | grep bitcoind 这个就可以了&#xA;4 添加bitcoind的用户到组中&#xA;sudo usermod -a -G BITCOIN_GROUP BITCOIN_USER&#xA;5、配置bitcoin.conf&#xA;proxy=127.0.0.1:9050&#xA;listen=1&#xA;bind=127.0.0.1&#xA;onlynet=onion #设置比特币节点只连接到tor hidden services&#xA;6、重新启动tor&#xA;/etc/ini.d/tor restart&#xA;7、重新启动bitcoind&#xA;成功标志：&#xA;debug.log 中：&#xA;tor: Got service ID XXXXXXXXXXX, advertising service XXXXXXXXXXX.onion:8333&#xA;或testnet3/regtest下有此文件（此文件删除会自动生成）&#xA;onion_private_key 参照：&#xA;https://en.bitcoin.it/wiki/Setting_up_a_Tor_hidden_service</description>
    </item>
    <item>
      <title>高频交易（二）浅谈高频交易中比较成熟的一些交易策略</title>
      <link>https://anwangtanmi.github.io/posts/cc6e4bf878ba9038977b249fdc1a49d1/</link>
      <pubDate>Tue, 19 Feb 2019 16:19:10 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/cc6e4bf878ba9038977b249fdc1a49d1/</guid>
      <description>今天我们谈谈高频交易中比较成熟的一些交易策略，应用于数字货币市场。&#xA;引言：&#xA;高频交易是自动化交易的一种形式，以速度见长，利用计算机系统加入人工智能算法，以智能化方式，快速，稳健的短线持仓执行交易。其中，国际金融领域比较流行的交易策略有：&#xA;1、市场微观结构交易策略；&#xA;2、统计套利策略；&#xA;3、事件交易策略；&#xA;4、流动性交易策略。&#xA;高频交易是量化投资领域，金融市场一颗璀璨的明星，是金融科技发展到一定程度的产物。更是国际金融炒家常用的金融工具。欧洲证券监管委员会给出这样的定义：高频交易是自动化交易的一种形式，以速度见长，它利用复杂的计算机技术和系统，以毫秒级的速度执行交易，并且日内短暂持仓。现在再加入人工智能方式，来创建合理的高频交易模型。&#xA;高频交易都有哪些关键特征：&#xA;1、处理分笔交易数据和算法交易&#xA;处理分笔交易数据和算法交易是高频交易的重要流程，高频交易通过对市场分笔交易数据进行采集、处理，分析市场在微观上潜在的交易机会，一旦确认交易机会，通过算法交易及时下单进场，获利后快速平仓离场的一种交易策略。&#xA;2、高资金周转率和日内交易&#xA;高资金周转率和日内交易也是高频交易的特点，交易过程中，资金快速进场出场，一秒钟内可以发生多次下单、撤单的动作。资金在整个交易过程中高速流转，提高了市场流动性。同时，日内交易也回避了隔夜风险。&#xA;国际金融市场有以下几种比较成熟的交易策略：&#xA;1、市场微观结构交易策略&#xA;市场微观结构交易策略主要是通过分析市场中即时的盘口数据，在短时间内，对选定的交易对，根据交易对买卖订单流不平衡原理进行短暂交易的策略。比如EOS当天涨幅12%，ETH涨幅3%，这样的策略在短时间就产生较大的套利空间。市场中即时的买卖订单流中潜藏着很多交易机会，通过系统统计可见的交易订单及其他参数变化，分析未来极短时间内是卖单流主导还是买单流主导。在卖单流主导的市场中，价格将下跌；在买单流主导的市场中，价格将上涨。根据市场变化进行操作。&#xA;利用市场微观结构交易策略，系统通过对比分析交易订单中买卖单量，抢先交易，并快速平仓。前提条件是需要获取真实的交易订单数据，防止干扰数据。因此这种交易策略还需要配合其他交易策略，交易参数一起分析，做出正确的分析判断。&#xA;这种交易策略应用比较广泛应用在期货交易市场，通过观察盘口信息，寻找机会，快速下单，快速平仓，高频交易，获利不小。&#xA;这种交易方式以速度见长，人工操作几乎很少，都是通过系统分析，快速操作完成。&#xA;2、统计套利策略&#xA;统计套利策略是寻找具有长期统计关系的交易对，根据长期的数据统计结果，在交易对价差发生偏差时进行套利的一种交易策略。这种交易策略也非常适合于数字货币交易市场。&#xA;3、事件交易策略&#xA;事件交易策略是指利用市场对事件的反应进行交易的策略。事件可以是影响广泛的经济事件，也可以是行业相关事件。每个事件对市场产生影响的时间差异很大，高频事件交易策略就是利用事件在极短时间内的影响自动进行交易，赚取利润。&#xA;该策略中有两个环节比较关键。&#xA;1）确定什么时间可以产生影响的事件。这就需要信息搜集部门配合，挖掘最近事件，及事件对市场的影响。快速反应。快速交易。&#xA;2）确定事件的影响时间和方向。这需要不断地对历史数据进行统计挖掘。&#xA;4、流动性交易策略&#xA;流动性交易策略是为市场提供流动性来获取利润的交易策略。做市商们为市场提供不同价位层次的订单，为头寸接受者提供流动性，因此被称为流动性交易策略。做市商为市场的流动性做出了贡献，很多非活跃市场由于做市商的存在，流动性显著提高，交易成本大为降低。&#xA;做市商策略的理论基础是存货模型与信息模型&#xA;1）买卖价差实际上是有组织的市场为交易的即时性提供的补偿。&#xA;2）买卖价差是由于市场信息不对称性造成的。&#xA;做市商们通过对订单统计分析、对波动性等市场微结构进行研究，提高了市场流动性，同时也从市场中获利。&#xA;总结：&#xA;不是一种交易策略都是万能的，往往在实际操作过程中，几种策略同时运用，取长补短，综合分析，在合适的时间点，选取合适的策略组合进行操作。这就需要计算机系统与人工智能综合运用起来。对统计数据不断分析，根据模型预警为操作者建议合适的交易策略。操作者再根据自己的经验，参考模型分析，理性的做出合理的判断。&#xA;2019年12月19日整理于深圳</description>
    </item>
    <item>
      <title>隐藏网，怎么进入深网</title>
      <link>https://anwangtanmi.github.io/posts/b17d294f750309364bb58a728d8d221d/</link>
      <pubDate>Tue, 04 Dec 2018 15:34:01 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/b17d294f750309364bb58a728d8d221d/</guid>
      <description>an网（不可见网，隐藏网）是指那些储存在网络数据库里、不能通过超链接访问而需要通过动态网页技术访问的资源集合，不属于那些可以被标准搜索引擎索引的表面网络。最近没啥事，对暗网一直是久闻其名，这不正好好奇进去看看，毕竟有的时候越是朦胧越好奇，真正进去了才发现也就那样。&#xA;我总结了下，进入暗网首先要三步：&#xA;1.首先要有VPN，国内的墙厉害，不翻墙是进不去暗网的，我这边用的一个叫魔法集中营的翻墙软件，20块钱一个月，其实这种翻墙的VPN自己搭建也行，只需要有墙外的服务器资源，比方说阿里云，能够翻墙之后，连接youtube。&#xA;2.其次要有Tor Browser浏览器，国内称洋葱浏览器，是为了无痕处理，毕竟法外之境，需要无痕处理等，打开Tor Browser&#xA;点击连接，进入此页面。&#xA;连接成功后和正常浏览器一般使用即可&#xA;3.第三步，你需要了解暗网的地址，暗网中的大部分网站都是以onion为后缀名的网站，当然也有些像not Evil的搜索网站，但不太会用，暗网毕竟是法外之地，色情暴力血腥都是赤裸裸的，这边只是介绍一下让人知道，能不进去还是别进了，心向大海，春暖花开。&#xA;完成以上三步就可以进入暗网了</description>
    </item>
    <item>
      <title>dom节点生成图片</title>
      <link>https://anwangtanmi.github.io/posts/7e39620d478bed752363de50c6685281/</link>
      <pubDate>Fri, 14 Sep 2018 13:35:11 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/7e39620d478bed752363de50c6685281/</guid>
      <description>1，业务要求将dom节点生成图片，注意点，移动端dom节点不可以使用%，rem等布局。要是用px来布局，并且使用640的设计稿，适配320px的手机屏幕。要在服务器上才可以，我是用node+express搭建的服务器环境。如果有自己的环境可以直接引用下面代码&#xA;2依赖的js:html2canvas.js和canvas2image.js,为了省事我引入jq。&#xA;1dom绘制成为canvas————–html2canvas /* html2canvas 0.5.0-beta3 Copyright (c) 2016 Niklas von Hertzen Released under License */ !function(e){if(&#34;object&#34;==typeof exports&amp;amp;&amp;amp;&#34;undefined&#34;!=typeof module)module.exports=e();else if(&#34;function&#34;==typeof define&amp;amp;&amp;amp;define.amd)define([],e);else{var f;&#34;undefined&#34;!=typeof window?f=window:&#34;undefined&#34;!=typeof global?f=global:&#34;undefined&#34;!=typeof self&amp;amp;&amp;amp;(f=self),f.html2canvas=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==&#34;function&#34;&amp;amp;&amp;amp;require;if(!u&amp;amp;&amp;amp;a)return a(o,!0);if(i)return i(o,!0);var f=new Error(&#34;Cannot find module &#39;&#34;+o+&#34;&#39;&#34;);throw f.code=&#34;MODULE_NOT_FOUND&#34;,f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==&#34;function&#34;&amp;amp;&amp;amp;require;for(var o=0;o= 0x80 (not a basic code point)&#39;, &#39;invalid-input&#39;: &#39;Invalid input&#39; }, /** Convenience shortcuts */ baseMinusTMin = base - tMin, floor = Math.floor, stringFromCharCode = String.</description>
    </item>
    <item>
      <title>webview夜间模式适配小结</title>
      <link>https://anwangtanmi.github.io/posts/8e92fec2c77b957d5787c006a1dfc41e/</link>
      <pubDate>Fri, 29 Dec 2017 18:46:25 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/8e92fec2c77b957d5787c006a1dfc41e/</guid>
      <description>做webview的夜间模式，来来回回折腾了好几天，基本上都是copy网上的各种css代码。&#xA;1. 一般实现webview夜间模式，要么就是内核自己实现了这个功能，一个api就能搞定（像uc内核：目前没有实现真正的开放；腾讯x5内核：开放，不知道能不能自定义夜间模式的颜色值之类的）；&#xA;2. 要么就是自定义一个html模板，从后台获取json数据，把数据解析出来，把各个节点的数据通过js写入到这个模板中，相当于自己在本地组装了一个新的html，丢到webview里面，这样web加载起来也比较快，因为都是一些本地的数据；&#xA;3. 再者就是像我这样很无奈的，需要通过js代码向原来的web中注入css代码来改变网页的风格了，说白了就是从后台拿到一个url网页地址，把这个url丢给webview，然后在webview加载完成后注入css代码来改变网页的风格。&#xA;用3这种方式最主要的问题就是这个css代码都有些啥，世界上的网页多种多样，要尽可能的适配各种标签，但是也未必能覆盖得全面。对于一个从来没有接触过html，js， css的我来说，着实着急了一把。但是最终还是勉勉强强的实现了这个功能。在这里记录一下新路历程。&#xA;首先，去网上搜罗了一堆css代码：&#xA;Android webview设置字体大小，适配屏幕，夜间模式 这篇文章，对主要的标签节点都配置了背景色，这里贴出具体的css代码，注入方法且看原文：&#xA;html,body,header,div,a,span,table,tr,td,th,tbody,p,form,input,ul,ol,li,dl,dt,dd,section,footer,nav,h1,h2,h3,h4,h5,h6,em,pre { background: #333 !important; color: #616161!important; border-color: #454530!important; text-shadow: 0!important; -webkit-text-fill-color: none!important; } html a,html a * { color: #5a8498!important; text-decoration: underline!important; } html a:visited,html a:visited *,html a:active,html a:active * { color: #505f64!important; } html a:hover,html a:hover * { color: #cef!important; } html input,html select,html button,html textarea { background: #4d4c40!important; border: 1px solid #5c5a46!important; border-top-color: #494533!</description>
    </item>
    <item>
      <title>Stanford CS224n: Natural Language Processing with Deep Learning 课程笔记</title>
      <link>https://anwangtanmi.github.io/posts/d3ef4c6bf0844825d87677d1f1169ce5/</link>
      <pubDate>Sat, 03 Jun 2017 11:21:01 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/d3ef4c6bf0844825d87677d1f1169ce5/</guid>
      <description>Stanford CS224n: Natural Language Processing with Deep Learning 课程主页：http://web.stanford.edu/class/cs224n/&#xA;已完成的课程作业代码：https://github.com/xingjian-f/Standford-cs224n-assignments&#xA;一些笔记：&#xA;lec1 1 什么是自然语言处理？ 让机器能够“理解”自然语言，从而能够做一些有意义的任务。 2 人类语言有什么特点？ 语言不是大自然的产物，是人造的，所以处理它和处理视觉、声音会有很多不同。 语言是离散的。但人类传递语言的载体，图像、语音是连续的。不同的载体对应的语言含义却是不变的。 3 自然语言处理为什么很难？ nlp的难点在于歧义性和，需要推理性（人类说话有时不是完整的表达，而需要听者的推理） 4 （词汇形态学，语法，语义，篇章）各个层级的表示形式？ 向量&#xA;lec2 1 怎样表示一个词的含义？ （1）使用分类学的方法，例如WordNet。离散表示，one-hot。 （2）分布式表示&#xA;lec3 1 Word2Vec 和 Glove 训练后，都得到了两组词向量，这两组要怎么用呢？ 经验主义，把它们叠加。不过最好先自己试一试各种情况。&#xA;2 怎么评估词向量？ 词的相似度，类比性，之类的测试集，或者作为下游任务的输入，评估下游任务的好坏。 后者更“实际”，但评估消耗时间更长。&#xA;lec8 1 RNN中为什么梯度消失或爆炸会带来问题？ 爆炸导致导数无法评估，clip解决。 消失导致“远”一点的参数几乎不更新，对角线初始化，relu，LSTM，GRU解决。&#xA;2 神经翻译模型中使用RNN有哪些trick？ 1 encoder 和 decoder 的参数不共享。 2 decoder中，把上一个隐层，encoder最后一层，上一个输出结果都最为当前隐层的输入。 3 多层RNN。 4 双向RNN。 （以上都是想办法增加参数） 5 GRU 和 LSTM&#xA;lec11 1 LSTM 和 RNN记忆力的比较 RNN最多记8-10步，LSTM可以到100步。（实验性结论）</description>
    </item>
    <item>
      <title>好玩的API调用之—天气预报的API调用与爬虫</title>
      <link>https://anwangtanmi.github.io/posts/3f8542536cf21a470187c605f8565533/</link>
      <pubDate>Wed, 26 Apr 2017 08:53:56 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3f8542536cf21a470187c605f8565533/</guid>
      <description>更多技术文章请访问我的个人博客http://www.rain1024.com&#xA;好玩的API调用之—天气预报的API调用与爬虫 平时写程序经常需要用到一些服务，像翻译，天气预报，星座什么的，我一般都是用Python写个爬虫去提供这些服务的网站爬数据，但是有些网站对爬虫有很多限制，一些关键字会定时更改，就像中国天气网经常变更HTML标签的class值，这就需要时常维护爬虫，而聚合数据API只对普通用户提供一个免费API接口，简直垃圾，而网上的一些网站其实有开放的API供开发者调用，所以我想着把自己发现的好玩的API和自己写的爬虫写个博客专题供大家参考，我会继续补充和维护。 第四个专题是关于天气预报的API调用与爬虫，聚合数据里的天气预报接口还收费，真是lj，我一开始用爬虫爬中国天气网里的数据进行分析，后来发现了和风天气这个良心网站，不仅提供免费的接口，而且天气预报数据也很多很丰富。今天就写中国天气网的爬虫和和风天气的api调用。 1.中国天气网的网址http://www.weather.com.cn/，先在里面找到自己的城市，然后把网址复制下来，就像我的是呼和浩特市http://www.weather.com.cn/weather1d/101080101.shtml，就是下图这样的。 下面是我爬虫的代码，就不做详细解释。 #-*- coding=utf8 -*- import sys reload(sys) sys.setdefaultencoding( &#34;utf-8&#34; ) import urllib2 from bs4 import BeautifulSoup import time def download(url,headers): try: request = urllib2.Request(url,headers=headers) html = urllib2.urlopen(request).read() # html = urllib2.urlopen(url).read() except urllib2.URLError as e: print &#34;error&#34; print e.code #可以打印出来错误代号如404。 print e.reason #可以捕获异常 html = None return html def save(html): f = open(&#39;thefile.txt&#39;, &#39;w&#39;) f.write(html) f.close() def read_file(): f = open(&#39;thefile.txt&#39;, &#39;r&#39;) html = f.</description>
    </item>
    <item>
      <title>Tor–anonymity network介绍(PPT)</title>
      <link>https://anwangtanmi.github.io/posts/3e4a09c3dc2e3071edb96974af2379e0/</link>
      <pubDate>Mon, 24 Oct 2016 11:05:42 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3e4a09c3dc2e3071edb96974af2379e0/</guid>
      <description>最近有人向我了解Tor， 于是突然想到了以前自己专门做过一份介绍Tor的PPT，顺便拿出来共享下啦……&#xA;三言两语介绍 摘自维基百科和FREEBUF&#xA;Tor是互联网上用于保护您隐私最有力的工具之一，但是时至今日仍有许多人往往认为Tor是一个终端加密工具。事实上，Tor是用来匿名浏览网页和邮件发送（并非是邮件内容加密）的。 Tor（The Onion Router，洋葱路由器）是实现匿名通信的自由软件。通过Tor可以在因特网上进行匿名交流。最初该项目由美国海军研究实验室赞助。2004年后期，Tor成为电子前哨基金会（EFF）的一个项目。2005年后期，EFF不再赞助Tor项目，但他们继续维持Tor的官方网站。 PPT随机截图 PPT共享下载 PPT是15年12月底做的，个别统计数据未更新百度网盘下载地址 提供的是pdf版本下载，需要PPT的请私信或邮件!</description>
    </item>
    <item>
      <title>搞笑–网络小说-紫川 高考题-(附答案)</title>
      <link>https://anwangtanmi.github.io/posts/a60afa9cce11551b394080e827707ac0/</link>
      <pubDate>Fri, 20 Jan 2012 11:30:14 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/a60afa9cce11551b394080e827707ac0/</guid>
      <description>搞笑–网络小说-紫川 高考题-(附答案)&#xA;2010年01月10日&#xA;西川大陆高考试卷。（共 47题 200 分）&#xA;友情提示：书写分 5分 请各位考生注意书写工整&#xA;卷面整洁&#xA;（另还有3分只要著名即可得到 阿门）&#xA;出题人：紫川暗影&#xA;印刷：帝都”白菜青蛙萝卜薯片我还要吃”复印&#xA;社兼小吃店&#xA;考试复习资料友情提供：看紫川不下二十遍 紫川&#xA;编年史&#xA;一、选择题。&#xA;1.紫川秀大败流风西山在哪一年？&#xA;A.帝国历七七零年&#xA;B.帝国历七七一年&#xA;C.帝国历七七二年&#xA;D.帝国历七七八年&#xA;2.远东军校内谁是前无古人的大流氓头子？&#xA;A.紫川秀&#xA;B.帝林&#xA;C.斯特林&#xA;D.沙布罗&#xA;3.帝林用来战胜斯特林和紫川秀的武器是什么？&#xA;A.洗月刀&#xA;B.光华剑&#xA;C.101宪兵弩&#xA;D.灌了水银和磁铁的筛子&#xA;4.下面那一只部队不算是紫川三杰的部下？&#xA;A.101特种部队&#xA;B.秀字营&#xA;C.十字军&#xA;D.不死营&#xA;5.副旗本和小旗之间的官衔是什么？&#xA;A.副统领&#xA;B.小旗武士&#xA;C.上尉&#xA;D.红衣小旗&#xA;6.下列那一位不是魔族军团长？&#xA;A.黑纱&#xA;B.云浅雪&#xA;C.裴玛&#xA;D.780年的鲁帝&#xA;7.秀字营官兵来自家族哪一地区？&#xA;A.西南地区&#xA;B.东南地区&#xA;C.远东地区&#xA;D.帝都&#xA;8.长老会罢免总长必须出席多少人？通过多少选&#xA;票？&#xA;A.4000人，65%&#xA;B.4000人，75%&#xA;C.3000人，65%&#xA;D.4000人，75%&#xA;9.帝国历七七八年俘虏卡丹的会战是第几次恒川&#xA;会战？&#xA;A.第二次&#xA;B.第三次&#xA;C.第四次&#xA;D.第五次&#xA;10.帝林在第一次大征讨中率部多少万远东军？&#xA;A.五万</description>
    </item>
    <item>
      <title>3D版四国军棋 – 概要设计</title>
      <link>https://anwangtanmi.github.io/posts/607b637aad12a07896fd0f4437564ccb/</link>
      <pubDate>Fri, 19 Nov 2010 11:02:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/607b637aad12a07896fd0f4437564ccb/</guid>
      <description>军棋是群众喜爱的一种棋类。因为它规则简单但又不乏趣味性。传统军棋由两人对战，有翻棋和暗棋两种下法。二十世纪后，社会分工已经深入人心。勤劳智慧的老百姓在伟大的二人对战军棋的基础上研制出了四国团战军棋。四国军棋大大丰富的军棋的战术技巧和趣味性，是军棋发展史上的一个重要里程碑，也是中华民族的智慧结晶。&#xA;棋盘 规则 （还在调试中。。。。。）&#xA;因为网络支持在后期才能完成，所以前期只能玩翻棋。&#xA;翻棋规则：&#xA;对家结盟，任何一家坚持到最后就是胜利&#xA;连横合纵Both OK；或者不结盟，或者中立，或者易织，或者。。。&#xA;Tips：&#xA;因为棋盘是3D的，所以可以在两个表面下，要不每个国家都有一次“翻盘”机会？&#xA;编程语言 曾经好一段时间我们都纠结于WPF与SilverLight。经过大量调研之后，我们作了一个艰难的决定：&#xA;使用SilverLight，卸载WPF。因为，&#xA;一、SilverLight作为一种网络媒介，能让我们艰辛研究的3D版四国军棋走得更远，传得更广，给分更多&#xA;二、SilverLight程序比WPF程序小&#xA;三、邹老师更看好SilverLight&#xA;四、小林老师手把手教我们SilverLight&#xA;可惜的是，&#xA;我们希望四国军棋运行在本地，并能在局域网组队团战。WPF貌似能提供更多支持。我们查阅了相关文档，SilverLight支持Socket。这是说明SilverLight有网络通信的能力。。。但给力太少了&#xA;在3D编程方面，貌似SilverLight也很复杂啊~大牛们给把牛刀？&#xA;开发环境 正版VS2010（经常重启，为什么？）+ SilverLight插件&#xA;Blend只是玩玩而已&#xA;计划 今天：棋盘棋子&#xA;明天：翻棋、3D&#xA;后天：联网、暗棋&#xA;之后：发布、测试、改进&#xA;欢迎拍砖~&#xA;MicroTeam Hui</description>
    </item>
    <item>
      <title>各种网址登录入口</title>
      <link>https://anwangtanmi.github.io/posts/0702cf2caf3ca3e224df5ad3a706b7dd/</link>
      <pubDate>Tue, 01 Jun 2010 15:01:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/0702cf2caf3ca3e224df5ad3a706b7dd/</guid>
      <description> http://www.baidu.com/search/url_submit.html” target=_blank&amp;gt;百度登录入口 http://www.google.com/intl/zh-CN/add_url.html” target=_blank&amp;gt;Google登录入口 http://search.help.cn.yahoo.com/h4_4.html” target=_blank&amp;gt;Yahoo登录入口 http://search.msn.com/docs/submit.aspx” target=_blank&amp;gt;Live登录入口 http://www.dmoz.org/World/Chinese_Simplified/” target=_blank&amp;gt;Dmoz登录入口 http://www.alexa.com/site/help/webmasters” target=_blank&amp;gt;Alexa登录入口 http://ads.zhongsou.com/register/page.jsp” target=_blank&amp;gt;中搜登录入口 http://iask.com/guest/add_url.php” target=_blank&amp;gt;爱问登录入口 </description>
    </item>
    <item>
      <title>使用Manual for UrlRewriteFilter美化适合google的URL</title>
      <link>https://anwangtanmi.github.io/posts/97f2f74774a0572688f29b335416bc0a/</link>
      <pubDate>Thu, 27 Jan 2005 13:30:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/97f2f74774a0572688f29b335416bc0a/</guid>
      <description> 最近准备做一个自己的blog,浏览了一下现在比较红火的个人blog,大多数都是用的&#xA;Movable工具做的，Movable是使用cgi的方式，Movable的使用比较简单，还有详细的&#xA;Movable Type 完全手册，手册中对blog的特点作了描述，其中一条就是：&#xA;静态链结&#xA;这些文章必须公开于网络之上，并且能够让其它读者藉由某个固定、不变的网址链结而直接读取得到；这暗指著这些文章的存取会是直接而公开的。&#xA;所以基于动态的url http://aaa.com/aa.jsp?id=1&amp;amp;id2=44应该美化成http://aaa.com/1_44.html静态网页的方式。&#xA;apche的mod_rewrite模块具有此功能，但是对于租用虚拟主机的用户来说就比较麻烦。有一个解决方法，通过&#xA;Manual for UrlRewriteFilter来美化url.你可以将它直接应用到你的web应用中，不管你用的是jsp+javabean还是struts.&#xA;下面是使用方法：&#xA;1、下载&#xA;urlrewritefilter-1.1.zip (about 500kb) ,解压缩后将文件考到相应的web-inf/lib和web-inf下。&#xA;2、配置web.xml&#xA;UrlRewriteFilter&#xA;org.tuckey.web.filters.urlrewrite.UrlRewriteFilter&#xA;UrlRewriteFilter&#xA;/*&#xA;根据自己的需要，将相应目录下的url转给UrlRewriteFilter来处理。&#xA;3、配置urlwrite规则文件WEB-INF/urlrewrite.xml&#xA;添加自己的urlwrite规则，如将&#xA;http://localhost/aaa/bbb.jsp?id=99&amp;amp;name=abc&#xA;表现为：&#xA;http://localhost/aaa/bbb/99_abc.html&#xA;配置如下：&#xA;/aaa/bbb/([0-9]+)_([a-z]+).html&#xA;/../aaa/bbb.jsp?id=$1&amp;amp;name=$2&#xA;注意：有多个参数时，中的连接符号&amp;amp;应该是&amp;amp; 更多的配置可以参照&#xA;Manual for UrlRewriteFilter 1.1。&#xA;DD&#xA;下载地址&#xA;Url Rewrite Filter。 </description>
    </item>
  </channel>
</rss>
