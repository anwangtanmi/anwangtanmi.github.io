<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据分析 on 暗网探秘</title>
    <link>https://anwangtanmi.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</link>
    <description>Recent content in 数据分析 on 暗网探秘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 02 Jun 2018 08:36:16 +0800</lastBuildDate>
    <atom:link href="https://anwangtanmi.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>POJ3417 Network – 树上差分 – lca</title>
      <link>https://anwangtanmi.github.io/posts/e682c54bca2c878dbe4702653103265f/</link>
      <pubDate>Sat, 02 Jun 2018 08:36:16 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/e682c54bca2c878dbe4702653103265f/</guid>
      <description>题意：给出一个无向图，分别给出n-1条树边（主要边）和m条非树边（附加边），这个无向图可以看做一棵树外加m条附加边，你可以切断一条主要边和一条附加边，求切割后，能够使这个无向图不再连通的切割方案数（即使只切断一条主要边就可以使图不连通，你也需要再切断一条附加边）&#xA;我们先考虑只有一条附加边（x，y）时，这时这张图就是一棵基环树 我们发现如果x,y之间有一条附加边，则这条边和x到y的路径组成了一个环，如果说我们要切割x到y的路径上的一条主要边，我们必须要再切断这条附加边，才能使图不再连通&#xA;那么如果x，y之间有两条或以上附加边，若我们已切割了x到y路径上的一条主要边，那么是无法通过仅再切割一条附加边来使图不再连通&#xA;因而我们每次读入一条附加边，就给x到y的路径上的所有主要边记录上“被覆盖一次”，这样再去遍历所有主要边 对于我们想要切割的一条主要边，有以下3种情况&#xA;若这条边被覆盖0次，则可以任意再切断一条附加边 若这条边被覆盖1次，那么只能再切断唯一的一条附加边 若这条边被覆盖2次及以上，没有可行的方案 现在的问题是如何快速求出每条边被覆盖了多少次，对于这类问题，可以类比序列差分，有树上差分算法&#xA;设差分数组dif初值为0，若x，y有一条附加边，则dif[x]++，dif[y]++，dif[lca(x,y)]-=2 设f（x）为以x为根的子树中所有节点dif之和，则f（x）就是x到其父节点的边被覆盖的次数 没错，求的是子树和，所以说求各种类似前缀和的东西真的很好用，一般可以用这些方式对区间O（1）求解&#xA;为了更快地解决问题，有必要总结各种思想与算法，并分析其适用于什么样的情况，要时常复习自己的博客啊… 比如说这题给我的启示是，树上问题可以类比序列问题，比如说求树上s到t点的路径和，就可以用树上前缀和 最后处理答案的时候注意，若f[x] == 0，则x可能为根节点，要特判，根节点没有父节点！！！ 一般我们记录一个点“上面的一条边”&#xA;特别注意，LCA若是循环从20开始，则数组要开到21以上！不然会越界RE #include #include #include #include #include using namespace std; #define debug(x) cerr &amp;lt;&amp;lt; #x &amp;lt;&amp;lt; &#34;=&#34; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; const int MAXN = 100000 + 10; const int INF = 1&amp;lt;&amp;lt;30; int n,m,tot,last[MAXN],f[MAXN][21],d[MAXN],dif[MAXN],vis[MAXN],ans,sta[MAXN]; struct Edge { int u,v,w,to; Edge(){} Edge(int u, int v, int to) : u(u), v(v), to(to) {} }e[MAXN * 2]; inline void add(int u, int v) { e[++tot] = Edge(u,v,last[u]); last[u] = tot; } void lca_dfs(int now) { for(int i=last[now]; i; i=e[i].</description>
    </item>
    <item>
      <title>给计算机专业的大一新生准备的阅读链接</title>
      <link>https://anwangtanmi.github.io/posts/7f40183b2d853da961dfc4cac036768e/</link>
      <pubDate>Thu, 20 Sep 2012 16:26:42 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/7f40183b2d853da961dfc4cac036768e/</guid>
      <description>本文最直接的目的是要给选修我的《计算学科导论》和《C++程序设计》课的同学推荐一组阅读材料。当然，并不局限于这部分同学需要阅读。&#xA;以下链接都是我读过和关注的，希望能借此将新生带入阅读的行列，也体会网络的力量，自行选择资料开展有效学习的道路。一旦阅读的大门打开，幸福的大学生活真正开始了。&#xA;推荐看的书：&#xA;浪潮之巅 吴军 电子工业出版社 (2011-08出版)——IT学生了解行业的最佳读本。试读…&#xA;暗时间 刘未鹏 电子工业出版社 (2011-08出版)——学习指导类读本，由于作者的IT背景，书中大量事例也是与计算机专业相关。试读…&#xA;做最好的自己 李开复 人民出版社 (2005-09出版)——李开复出的书不少了，还是觉得这一本最经典。李开复也是学计算机的。试读…&#xA;读大学,究竟读什么(上册) 覃彪喜 广东南方日报出版社有限公司 (2012-05出版)——需要有人指点大学如何度过，可以听听覃董的。试读…&#xA;编程大师访谈录 拉默斯 (Susan Lammers)、李琳骁、张菁、 吴咏炜 人民邮电出版社 (2012-01出版)——重点推荐对加里·基尔代尔和比尔·盖茨的访谈。试读…&#xA;拆掉思维里的墙:原来我还可以这样活 古典 吉林出版集团，北方妇女儿童出版社 (2011-09出版)——此墙不拆，难做人。试读…&#xA;推荐看的电影&#xA;社交网络 / 社群网战(台) / Facebook的故事 看看当今IT巨人的大学是怎么玩的。我们可能做不了这么大的事，但可以有这种闯劲。&#xA;三傻大闹宝莱坞 3 Idiots (2009) 好玩的大学生，也告诉我们要突破，要创新&#xA;风雨哈佛路 Homeless to Harvard: The Liz Murray Story (2003) 穷人家的孩子，也有得成功&#xA;当幸福来敲门 要相信奋斗，尤其是咱爹靠不上的孩子 面对巨人 Facing the Giants (2006) 永不放弃，这样的信念让我们勇往直前，实现一个个目标&#xA;精选博文：这一组博文作者是CSDN上“我关注的”博主，这几篇博文要读，还可以顺着这些线索，找到更多值得关注的话题。&#xA;我在南大的七年 作者刘未鹏，业内高人，《暗时间》作者，其不少博文可以作为IT学习的指南。&#xA;给大一师弟师妹的一些建议 在校“高人”的建议，作者： 曹胜欢&#xA;关于《学编程，还有必要上大学吗？ 》 学生物医学出身的IT人，他的学习经历对我们这些“专业”学生何尝不可以借鉴。</description>
    </item>
  </channel>
</rss>
