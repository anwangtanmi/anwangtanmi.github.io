<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>浏览器 on 暗网探秘</title>
    <link>https://anwangtanmi.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/</link>
    <description>Recent content in 浏览器 on 暗网探秘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 09 Jun 2019 16:48:22 +0800</lastBuildDate>
    <atom:link href="https://anwangtanmi.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解决Chrome插件安装时出现的“程序包无效”问题</title>
      <link>https://anwangtanmi.github.io/posts/8dcb5b0193675e09b1316bde847b361a/</link>
      <pubDate>Sun, 09 Jun 2019 16:48:22 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/8dcb5b0193675e09b1316bde847b361a/</guid>
      <description>原文：https://blog.csdn.net/ysq5202121/article/details/50809494</description>
    </item>
    <item>
      <title>洋葱浏览器的安装</title>
      <link>https://anwangtanmi.github.io/posts/a08f7e0b7112624a5c60efcef8d27765/</link>
      <pubDate>Fri, 07 Jun 2019 23:54:47 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/a08f7e0b7112624a5c60efcef8d27765/</guid>
      <description>对于喜欢与众不同的小伙伴可以尝试使用洋葱浏览器进行网络浏览 下载 https://tor-browser.en.softonic.com/ 直接download即可&#xA;安装 双击下载好的安装包，直接下一步即可&#xA;配置 选择configure&#xA;配置本地连接属性&#xA;安装完成就可以使用啦&#xA;推荐一篇超好的文章写的挺全的，我第一次弄就是参考的他的 https://www.cnblogs.com/linlei1234/p/9898763.html</description>
    </item>
    <item>
      <title>真正的匿名上网——Tor浏览器</title>
      <link>https://anwangtanmi.github.io/posts/40a151e4851d15058e94bb72ec65b85c/</link>
      <pubDate>Sun, 20 Mar 2016 13:45:05 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/40a151e4851d15058e94bb72ec65b85c/</guid>
      <description>这几天在网上浏览的时候发现了一个厉害的浏览器——Tor浏览器&#xA;真正意义上的匿名浏览，让你在浏览任何网页的时候保护你的IP地址安全。&#xA;因为某些原因，中国本地的IP是无法通过Tor浏览器上网，因此在介绍Tor浏览器之前，我们必须要先将自己的IP地址改变，可以参考这篇博客shadowscoks科学上网&#xA;在自己的电脑可以科学上网的基础上，我们就可以来实现自己IP的隐藏技术了。&#xA;这里我的测试环境是Ubuntu15.10&#xA;第一步：&#xA;输入：&#xA;sudo add-apt-repository ppa:webupd8team/tor-browser 设置ppa&#xA;sudo apt-get update&#xA;sudo apt-get install tor-browser 通过上面简单的几步就可以将我们的Tor浏览器安装完成&#xA;第二步：&#xA;通过桌面左上角的搜索软件，搜索tor，然后打开进行浏览器配置&#xA;第一个窗口：选择configure&#xA;第二个窗口：选择yes&#xA;第三个窗口：无需选择改变，直接下一步&#xA;第四个窗口：选择yes&#xA;第五个窗口：如图设置&#xA;之后就直接选择connect，进行链接就可以了&#xA;稍微等一会儿就会自动跳入到Tor浏览器&#xA;之后，可以输入网址：ip.cn 来查看自己的ip地址，可以发现并不是自己原来的地址了</description>
    </item>
    <item>
      <title>Chrome开发者工具不完全指南（六、插件篇）</title>
      <link>https://anwangtanmi.github.io/posts/818adb5ae836c8980b1277ed6c6d82f6/</link>
      <pubDate>Tue, 05 Jan 2016 11:41:23 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/818adb5ae836c8980b1277ed6c6d82f6/</guid>
      <description>本篇是Chrome开发者工具的结尾篇，最后为大家介绍几款功能强大的插件。在chrome商店里面有很多插件，没事建议大家去逛逛。不过需要FQ，所以诸位请自备神器。&#xA;一、皮肤插件&#xA;首先是大家期盼已久，翘首以盼的皮肤插件。这款插件叫DevTools Theme: Zero Dark Matrix.在商店中下载之，然后打开这个地址:chrome://flags,找到Enable Developer Tools experments （可以查找experments关键字迅速锁定之）勾选启用复选框。重启浏览器，打开开发者选项，点击小齿轮，可以看到Experments这选项，选择后在弹出面板中勾选 Allow custom UI themes，重启浏览，然后看到:&#xA;高达上的皮肤就是这样出来滴。据说还有许多方式可以更改，不过露珠目前就用的事这种方式。有兴趣的同学可以去试试看。&#xA;二、Performance-Analyser(网页性能分析)&#xA;这款插件是用来分析你的网页加载性能的，包括http请求，执行期的时间，以及每种http请求文件的大小，占比。首先下载之，随意打开一个界面，按下插件图标，可以看到分析页面：&#xA;你可以利用这款插件来分析你的界面资源加载的整体情况，并试着做一些优化和调整。&#xA;三、(FeHelper)WEB前端助手&#xA;这款插件包括了一系列功能，很丰富。是国人开发的，功能包括：json格式化，html格式化，二维码生成，编码规范检测等等不一而足。当你在浏览器中打开一个后台接口的时候，如果该接口返回的是json字符串，那么它会自动将其格式化。下面是它的一些功能列表，不具体一一示范：&#xA;四、POSTMAN&#xA;该插件是模拟发送请求的，后台和前台开发人员都可以用到。它是一个简化版的fiddler，功能虽然没有它强大，但是界面胜之，操作性也胜之，还有规范的API，更新也一直在继续。所以用之有木有:&#xA;五、Visual Event&#xA;网页事件监听，能帮你捕获到目前网页上的各个元素的事件监听状况。打开一个界面，按下扩展按钮:&#xA;把鼠标放到有背景色的元素上去，可以看到它们的时间来源和绑定的函数。对于一些简单的事件检测还是蛮有用的。比较复杂的就没什么卵用了。&#xA;六、二维码扫描&#xA;这个功能对手机开发来说还是不错的。扫一扫就在浏览器中打开了。在FF浏览器中自带的功能，对于Chrome来说怎么可以木有呢？不过这功能太简单，太低档次，太多了（不过很有用）。就不上图了。&#xA;七、WhatFont&#xA;找到网页的字体。开启功能后把鼠标停留在文本上，会弹出该字体名称。所以你可以所以copy你喜欢的字体啦。&#xA;八、Speed Tracer&#xA;这个是一个强大版本的性能分析器，比Profiles还强大。可以跟踪事件，查看css样式，找到js中内存泄露，检测js语法。功能之强大，无出其右！Speed Tracer是一款很强大的网页性能分析工具，通过它你可以找到你的网页运行缓慢的原因。针对它们改善网站。不过因为它的功能强大，所以操作比较复杂。篇幅原因露珠不做介绍。感兴趣的同学可以自己去捉摸捉摸。下面是盗图一张：&#xA;结束语、&#xA;到此为止，露珠的Chrome开发者工具不完全指南系列宣告结束，露珠通过了六篇博文，向诸位比较想尽地介绍了chrome开发者工具的功能使用。从基础的dom查找到性能分析，大体上涵括了前端开发的各个方面。在如今前端开发日益复杂的趋势下，掌握了几件好的工具，是可以能够事半功倍的。而chrome毫无疑问的是这些好工具中的一个。讲到这里露珠想到《庄子》里面的一个故事：有一天孔子的学生子贡经过一块菜畦，看到有一位老者为了浇水而打了一条通向水井的地道，然后抱着水瓮来回于水井和菜畦之间，为的是给菜畦浇水。子贡见了就对老者说这样打水太累，为什么不自己做一个打水的机器呢？种菜的老人说：“有机械之事者必有机心。机心存与胸，大道不载也”。意思是有了偷懒的心，人就变得懒，这不是人的本性，也不是天的本性，所以大道也就不会充实他的心田。其实露珠想说运用工具和偷懒或机心是两回事儿，时代在变迁，人类早就不再是刀耕火种的人类了，如果一直停在旧的时代，跟不到新时代的进步，不学会与时俱进这样只有被历史淘汰。这跟我们现在处的环境是一样的，特别是前端开发，技术更新跟翻书一样快，隔三差五的新框架出现，几年的时间就有一大堆新鲜的东西跳将出来把你们吓一跳，不仅仅开发的时间在增加，学习的成本也在不停增加，所以时间变得尤其宝贵。如果有好的工具可以在少付出的情况下为我们达到同样的目的，何乐而不为呢？毕竟大家的目标都一样，只是殊途同归罢了。当然，庄子是道家人物，借个故事来调侃儒家也是理所当然，断章取义还是不行滴哈。</description>
    </item>
    <item>
      <title>为了保护眼睛，电脑桌面调暗点好</title>
      <link>https://anwangtanmi.github.io/posts/4e71e876b4d651b412bc4f46e9845941/</link>
      <pubDate>Wed, 21 Dec 2011 14:29:22 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/4e71e876b4d651b412bc4f46e9845941/</guid>
      <description> 调暗点，眼睛看起来不会累的亮度的，不是每台电脑的亮度都是一模一样的，主要是看自己的 眼睛舒服 背景色设置成浅绿色，最适合阅读。特别是晚上对着电脑屏幕的时候。经试验，这种浅绿色的颜色代码是 色调(Hue)设为85， 饱和度(Sat)设为95 亮度(Lum)设为205 电脑屏幕不要用白色，因为白色对眼睛的刺激是最大的。整天对着电脑干活的，也应该注意一下。 其实，只要稍微设置一下，就能让你电脑上的窗口从白花花的颜色变成淡淡的绿色。 设置方法如下： &amp;gt;&amp;gt;在桌面点右键，依次选属性(properties)—外观(appearance) &amp;gt;&amp;gt;点右下角的高级(advanced)，然后在项目(items)的下拉菜单里选窗口(windows)&amp;gt;&amp;gt;&amp;gt;&amp;gt;点右侧的下拉菜单颜色(color)，点下方的其它(others) &amp;gt;&amp;gt;把色调(Hue)设为85，饱和度(Sat)设为90-123,亮度(Lum)设为205.(出厂时一般设为160-0-240) &amp;gt;&amp;gt;单击添加到自定义颜色(Add to custom colors)，按确定(OK)……一直确定(OK)下去。 把窗口设成绿色之后，再来把IE的网页背景也变成养眼的绿色吧： 打开IE，点击工具(TOOLS)—Internet选项(INTERNET OPTIONS)—辅助功能(Assessibility)，勾选第一个“不使用网页中指定的颜色”(ignore colors specified on web pages)，然后点“确定” (OK)——确定……退出。 OK啦，现在你就会发现你的屏幕已经变成淡淡的绿色了。这个颜色会比白色柔和许多，刚开始可能你还有些不适应，但确实对我们的眼睛有好处，大家不妨试一下。 还有~~~ 端正姿势保护眼睛，它对于缓解眼睛疲劳起着十分重要的作用。 </description>
    </item>
    <item>
      <title>Windows7 网络自动断开的困境</title>
      <link>https://anwangtanmi.github.io/posts/f250865f3f7bb7794fd5ef62c173a649/</link>
      <pubDate>Sun, 06 Nov 2011 20:00:14 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/f250865f3f7bb7794fd5ef62c173a649/</guid>
      <description>Windows7 网络自动断开的困境&#xA;Windows7如果说给我最大的感受，就是不好用，太不好用了。自从电脑升级到Windows7，我就得了网络恐惧症。&#xA;整夜下载是不行了，笔记本休眠，网络就断。什么电源管理，网卡电源都设置了，还是不行。&#xA;什么狗屁网络和共享中心，不知道怎么删除一个重复项，合并也是不知道Windows说的什么意思。&#xA;开始没装驱动，连屏幕明暗都无法调节了。我气的以为笔记本坏了。后来找联想的驱动，才好了。费了一个晚上的时间。&#xA;显示和隐藏图标里，一个已经卸载的迅雷图标仍然存在，我把注册表都搜遍了，凡是有迅雷和Thunder,xmp.exe字样的&#xA;项全都删除了，还是存在那里。今天又出现无法关机的错误，被我强制关掉电源了。&#xA;迅雷这东西，卸载之后，注册表里全是它的垃圾，能不能做东西地道一些啊。我是有洁癖的。&#xA;今天突然发现显示和隐藏图标里迅雷不见了。&#xA;装好之后反复提醒我要升级到IE8，你当我傻啊，现在IE9都出来了。于是安装了IE9，没办法，除了网银需要，平时&#xA;上网从来不用IE。这东西怎么看怎么别扭。&#xA;为了下载，最后把Ubuntu11装上了。这个是真好用，不需要操心任何事情。一切都帮你做好。&#xA;1）用Windows7自带磁盘管理工具shrink一块磁盘出来，不要格式化，不要做任何动作。&#xA;2）下载Ubuntu11，根据你的CPU选择32/64位的Desktop版。准备一个USB盘，4个G足够了。&#xA;3）按Ubuntu网站的介绍方式把下载的iso灌到USB盘里。&#xA;4）设置bios启动次序为usb优先。&#xA;5）关机，插u盘，开机，选择安装。&#xA;Ubuntu11可以和windows共存，而且从ubuntu里可以访问windows的文件系统。太方便了。以后windows&#xA;坏了也不用担心了，用Ubuntu11就可以恢复里面的文件。</description>
    </item>
    <item>
      <title>宽带互联网接入市场的我们需要警惕垄断</title>
      <link>https://anwangtanmi.github.io/posts/66c42feb09a1f38ddaaeae5d240e806b/</link>
      <pubDate>Fri, 26 Nov 2010 20:24:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/66c42feb09a1f38ddaaeae5d240e806b/</guid>
      <description>最近互联网很热闹，不过在相关部门的干预下，大有偃旗息鼓之势，不过对于我们这些互联网的参与者而言，其实偃旗息鼓也许危害更大，明着不干了，肯定就会暗着干，而且事情到现在也没有说清楚，摆明了要让大家继续不明真相下去。&#xA;说到暗着干的事情，最近我们同事很郁闷，每次打开我们首页都会冒出一个弹窗，公司的领导同事们都责怪我们，以为是我们广告部门做的，结果打听了半天才知道，是我们的办公宽带接入商干的，其实这也不是新闻，不知道有使用电信宽带的朋友发现没有，电信总爱在你打开浏览器看网站的时候，在右下角弹出一个小窗口，我就真的纳闷了，我并没有购买你的广告服务，电信凭什么就可以硬塞给我们呢？&#xA;问题是，现在我们没得选择，公司倒是选择了铁通的宽带，我父母家也在使用长城的宽带，问题是一样的带宽，速度却要明显慢很多。&#xA;前段时间，在3Q大战正酣的时候，一个名为“中国宽带互联网反垄断”的研讨会在北京召开，这个会让很多不明真相的人恍然大悟，为什么我们的宽带接入费用居高不下，为什么那些价格低廉的服务商却无法满足速度的要求？&#xA;据统计，中国互联网接入市场中，60%的宽带接入用户、65%的内容资源、62%的国际出口带宽都集中在中国电信，网间互联总流量中有83%流经中国电信网络；中国联通的宽带接入用户、内容资源、国际出口带宽（33%）大约是中国电信的一半；其他运营商的宽带接入用户、内容资源、国际出口带宽的总和不足10%。&#xA;换句话说，中国电信和中国联通基本上已经完全掌握了宽带接入市场。&#xA;不禁想起了中石化和中石油，敢于在每日盈利上亿的情况下依然叫穷，依然不顾人民反对推动价格上涨，不就是因为在能源领域的绝对垄断吗？而3Q大战也基本基于一样的道理，没有垄断的地位，谁敢作出类似的逼迫用户的行为？&#xA;不过中电信和中联通垄断也就罢了，居然还搞出了批发价格和零售价格倒挂的怪事来，所谓批发价格和零售价格倒挂，指的是卖给大流量的带宽使用者的价格，居然高出卖给小流量的使用者的价格，就像是你买一盒烟20，买一条却要500，这不是咄咄怪事？&#xA;来看中电信和中联通近期搞的宽带接入的清理行为，在这项清理工作中，他们对用户执行了三种价格，针对自己的竞争对手，结算价格一般都高达100万元/G/月以上。针对增值服务商的结算价格则一般只有10万-30万元/G/月，。针对内容服务商的结算价格则更低，只有3-10万元。&#xA;为什么要执行这样的价格政策？事情明摆着，就是把原先在自己竞争对手那里购买带宽的终端客户，用这样的价格优势全部变成自己的终端客户，而最终实现彻底打死小的运营商，自己独大的目的。&#xA;由于中电信和中联通合起来占了我们总的出口带宽的95%，其他运营商只能从他们手里购买，完全没有竞价权利，只要上述的价格政策一实施，就意味着好不容易在宽带接入市场弄起来的市场竞争格局立刻土崩。&#xA;而如果宽带接入市场真的完全落入中电信和中联通的手中（顺带说一句，在宽带接入市场，中联通和中电信在南北分拆之前原本就是一家），那么类似于油价这样的事情恐怕就是常事了，最后伤害的不仅仅是我们数亿网民的利益，更要伤害我们看上去欣欣向荣的互联网市场。&#xA;不能不说，中电信和中联通搞的这个价格倒挂比前段时间炒得火热的3Q大战，技术含量高很多，不露声色，也没做什么艰难的决定，就可以把对手直接杀死，而且用户由于在早期得到了实惠，说不定还会感恩戴德，实在是高。从八月执行以来，铁通的带宽出口已经中断41Gbps，占铁通所有带宽的近20%。仅广东铁通就爆发了37477件用户投诉，38443用户拒绝缴费，并已有28210用户面临退网。&#xA;其实中电信并不担心类似于长城这样的小的运营商，他担心的应该是广电，在这种最基础的运营服务上，只有同为国家队出身，而且手握内容审核权利的广电，才能对中电信造成威胁，因为国家级广播电视网络公司规划的NGB（下一代广播电视网），到2015年建设规模化的覆盖全国的运营网络，单用户实际接入速率将达到100M，将严重威胁到中电信的霸主地位。&#xA;但是不管中电信搞的这种价格倒挂的目的是什么，利用自己垄断地位采用不公平的竞争手段打击弱小对手，从而实现自己更进一步的垄断，都是明摆着的事情，而国家一直对国家队的市场占有率不断提升采取的纵容政策，在不少领域都开始出现问题。&#xA;宽带互联网接入市场，关系到我们整个互联网的发展和人们的日常生活，国家应该早日进行强有力的监管，而不是放任这种垄断格局进一步深化，否则，什么三网融合，什么物联网，都将成为水中月镜中花，而且垄断市场带来的服务水平低下，创新能力低下等问题，都将严重阻挠我们市场的正常发展。&#xA;破除宽带互联网接入市场的垄断，已经迫在眉睫！</description>
    </item>
    <item>
      <title>[转]暗时间</title>
      <link>https://anwangtanmi.github.io/posts/e7bb52f16ebac144868c143333580d0e/</link>
      <pubDate>Tue, 05 Oct 2010 08:54:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/e7bb52f16ebac144868c143333580d0e/</guid>
      <description>如果你有一台计算机，你装了一个系统之后就整天把它搁置在那里，你觉得这台计算机被实际使用了吗？没有。因为CPU整天运行的就是空闲进程。运行空闲进程也是一天，运行大数据量计算的程序也是一天，对于CPU来说同样的一天，价值却是完全不一样的。&#xA;大脑也是如此。&#xA;善于利用思维时间的人，可以无形中比别人多出很多时间，从而实际意义上能比别人多活很多年。我们经常听说“心理年龄”这个词，思考得多的人，往往心 理年龄更大。有人用10年才能领悟一个道理，因为他们是被动领悟——只有在现实撞到他脸上的时候才感到疼，疼完了之后还是不记得时时提醒自己，结果很快时 过境迁抛之脑后，等到第二次遇到同一个坑的时候早忘了曾经跌过跟头了，像这样的效率，除非天天摔坑里，否则遗忘的效率总是大过吃亏长的记性。善于利用思维 时间的人则能够在重要的事情上时时主动提醒自己，将临时的记忆变成硬编码的行为习惯。&#xA;每个人的手表都走得一样快，但每个人的生命却不是。衡量一个人生活了多少年，应该用思维时间来计算。举一个极端的例子，如果一个人从生下来开始就呆在一个为他特殊建造的无菌保护室里，没有社会交往，没有知识获取，度过了18年，你会不会认为他成年了？&#xA;认为时间对每个人是均等的是一个错觉，认为别人有一天，我也有一天，其实根本不是这样。如果你正在学习一门专业，你使用自己所投入的天数来衡量，很 容易会产生一种错觉，认为投入了不少时间，然而其实，“投入时间”这个说法本身就是荒唐的，实际投入的是时间和效率的乘积。你可以“投入”很多时间在一件 事情上面，却发现毫无进展，因为你没有整天把你要做的事情，要学习的东西常驻在你的大脑中，时刻给予它最高的优先级。你走路的时候吃饭的时候，做梦的时候 心心念念想的就是这件事情，你的CPU总是分配给它，这个时候你的思维时间就被利用到了极致，你投入的时间就真正等于了实际流逝的时间，因为你的CPU是 满载的。&#xA;如果你有做总结的习惯，你在度过一段时间之后总结自己在某某领域投入了多少时间，建议千万不要粗略地去计算有多少天下班后拿起书来翻看过，因为这样 你也许会发现书倒是常翻，但领悟却不见得多深，表面上花的时间不少，收益却不见得那么大。因为看书并记住书中的东西只是记忆，并没有涉及推理，只有靠推理 才能深入理解一个事物，看到别人看不到的地方，这部分推理的过程就是你的思维时间，也是人一生中占据一个显著比例的“暗时间”，你走路、买菜、洗脸洗手、坐公车、逛街、出游、吃饭、睡觉，所有这些时间都可以成为“暗时间”，你可以充分利用这些时间进行思考，反刍和消化平时看和读的东西，让你的认识能够脱离照本宣科的层面。这段时间看起来微不足道，但日积月累将会产生庞大的效应。&#xA;能够充分利用暗时间的人将无形中多出一大块生命，你也许会发现这样的人似乎玩得不比你少，看得不比你多，但不知怎么的就是比你走得更远。比如我就经常发现一些国外的牛人们为什么不仅学习牛逼，连“业余”玩儿的东东也都搞得特牛逼，一点都不业余（上次在《How We Decide》上看到斯坦福的一个牛人，理论物理学博士，同时是世界扑克大赛的前六名保持者，迄今累计奖金拿了六百多万刀），你会奇怪，这些家伙到底哪来的时间，居然可以在不止一个领域做到卓越？&#xA;程序员们都知道，任务切换需要耗费许多额外的花销，通俗地来讲，首先需要保存当前上下文以便下次能够顺利切换回来，然后要加载目标任务的上下文。如果一个系统不停地在多个任务之间来回倒腾，就会耗费大量的时间在上下文切换上，无形中浪费很多的时间。&#xA;相比之下，如果只做一件任务，就不会有此损失。这就是为什么专注的人比不专注的人时间利用效率高得多的原因。任务切换的暗时间看似非常不明显，甚至很多人认为“多任务”是件很好的事情（有时候的确是），但日积月累起来就会发现，消耗在切换上的时间越来越多。&#xA;另外，大脑开始一件任务的时候必须要有一定时间来“热身”，这个时间因人而异，并且可以通过练习来改变。举个例子，你看了一会书之后，忽然感到一阵 无聊，忍不住打开浏览器，十分钟后你想起来还要继续看书，但要回复到当时理想的状态，却需要一段时间来努力去集中精力，把记忆中相关的知识全都激活起来， 从而才能进入“状态”，因为你上了十分钟网之后这些记忆已经被抑制了。如果这个“热身”状态需要一刻钟，那么看似十分钟的上网闲逛其实就花费了二十五分 钟。&#xA;如果阅读的例子还不够生动，对于程序员来说其实有更好的例子：你写程序写得正high，忽然被叫去开了一通会，写到一半的代码搁在那儿。等你开完会 回来你需要多久能够重新进入状态？又或者，你正在调试程序，你已经花了二十分钟的时间把与这个bug可能相关的代码前前后后都理解了一遍，心中构建了一个 大致的地图，就在这时，呃，你又被叫去开了个会(:D)，开完会回来，可想而知，得花上一些时间来回想一下刚刚弄清的东西了。&#xA;迅速进入状态的能力是可以锻炼的，根据我个人的经验，至少可以缩短到3-5分钟。但要想完全进入状态，却是很难在这么短的时间实现的。所谓完全进入 状态，举个例子：你看了3个小时的书，或者调试了半个小时的程序之后，往往满脑子都是相关的东西，所有这些知识都处在活跃状态，换言之你大脑中所有相关的 记忆神经网络都被激活了，要达到这样一种忘记时间流逝的“沉浸”状态（心理学上叫做“流体验”），不是三两分钟的事情。而一旦这种状态被破坏，无形间效率就会大打折扣。这也是为什么我总是倾向于创造大块的时间来阅读重要的东西，因为这样有利于“沉浸”进去，使得新知识可以和大脑中与其相关的各种既有的知识充分融合，关联起来，后者对于深刻的记忆非常有帮助。&#xA;要充分利用暗时间，不仅要能够迅速进入状态，另一个很重要的习惯就是能够保持状态多久（思维体力）。《The Psychology of Invention in the Mathematical Field》上有一段关于庞加莱的思考习惯的介绍，很有代表性。庞加莱经常在去海边休假或者在路上走的时候在脑海中思索数学问题，很多时候解答就在这些时候忽然闪现。虽然我和庞加莱是没法比的，但是常常也在路上想出答案，这真是一种愉悦的体验。&#xA;能够迅速进入专注状态，以及能够长期保持专注状态，是高效学习的两个最重要习惯。&#xA;很多人都有这样的体验（包括我自己），工作了之后，要处理的事情一下多出了很多，不像在校园，环境简单，生活单纯，能够心无旁骛地做一件事情而不被 打扰。工作之后的状况就是，首先需要处理的事情变多，导致时不时需要在多个任务之间切换；另一方面，即便能够把任务的优先级分配得比较合理，也难免在做一 件事情的时候心中忽然想起另一件事还没做的焦虑来，因为没做完的事情会在大脑中留下一个“隐藏的进程”，时不时地发个消息提醒你一下，中断你正在做的事 情。&#xA;因此这里就涉及到最后一个高效的习惯：抗干扰。只有具备超强的抗干扰能力，才能有效地利用起前面提到的种种暗时间。抗干扰能力也是可以练习出来的， 上本科那会经常坐车，所以我就常常拿着本大部头在车上看，坐着看或者站着看都可，事实证明在有干扰的环境中看书是非常锻炼专注能力的一个办法:D 另外，经常利用各种碎片时间阅读和思考，对迅速集中注意力和保持注意力都非常有帮助。记得很久以前TopLanguage上大伙曾经有次饶有兴趣地讨论“马桶时间”的利用，包括在卫生间放个小书柜。（估计很多同学心有戚戚焉吧:D）&#xA;http://mindhacks.cn/2009/12/20/dark-time/</description>
    </item>
    <item>
      <title>Tor on Ubuntu Lucid Lynx</title>
      <link>https://anwangtanmi.github.io/posts/79b53a49cb7923afe721bc8d676909ad/</link>
      <pubDate>Wed, 04 Aug 2010 14:17:56 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/79b53a49cb7923afe721bc8d676909ad/</guid>
      <description>Since Lucid Lynx is still in beta, tor isn’t packaged up at torproject.org yet but there is a PPA! https://launchpad.net/~sevenmachines/+archive/tor&#xA;$ sudo add-apt-repository ppa:sevenmachines/tor&#xA;$ sudo apt-get update&#xA;$ sudo apt-get install tor vidalia privoxy firefox-torbutton&#xA;To start it up with a vidalia:&#xA;Applications &amp;gt; Internet &amp;gt; Vidalia&#xA;Click on settings and add privoxy to the proxy “/usr/sbin/privoxy”&#xA;Stop tor in Vidalia and make sure privoxy is down.&#xA;$ sudo /etc/init.</description>
    </item>
    <item>
      <title>你浪费过多少“暗时间”</title>
      <link>https://anwangtanmi.github.io/posts/6bc6aabb02886f6dbc344e84bee69963/</link>
      <pubDate>Tue, 18 May 2010 22:35:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/6bc6aabb02886f6dbc344e84bee69963/</guid>
      <description>如果你有一台计算机，你装了一个系统之后就整天把它搁置在那里，你觉得这台计算机被实际使用了吗？没有。因为CPU整天运行的就是空闲进程。运行空闲进程也是一天，运行大数据量计算的程序也是一天，对于CPU来说同样的一天，价值却是完全不一样的。&#xA;大脑也是如此。&#xA;善于利用思维时间的人，可以无形中比别人多出很多时间，从而实际意义上能比别人多活很多年。我们经常听说“心理年龄”这个词，思考得多的人，往往心理年龄更大。有人用10年才能领悟一个道理，因为他们是被动领悟——只有在现实撞到他脸上的时候才感到疼，疼完了之后还是不记得时时提醒自己，结果很快时过境迁抛之脑后，等到第二次遇到同一个坑的时候早忘了曾经跌过跟头了，像这样的效率，除非天天摔坑里，否则遗忘的效率总是大过吃亏长的记性。善于利用思维时间的人则能够在重要的事情上时时主动提醒自己，将临时的记忆变成硬编码的行为习惯。&#xA;每个人的手表都走得一样快，但每个人的生命却不是。衡量一个人生活了多少年，应该用思维时间来计算。举一个极端的例子，如果一个人从生下来开始就呆在一个为他特殊建造的无菌保护室里，没有社会交往，没有知识获取，度过了18年，你会不会认为他成年了？&#xA;认为时间对每个人是均等的是一个错觉，认为别人有一天，我也有一天，其实根本不是这样。如果你正在学习一门专业，你使用自己所投入的天数来衡量，很容易会产生一种错觉，认为投入了不少时间，然而其实，“投入时间”这个说法本身就是荒唐的，实际投入的是时间和效率的乘积。你可以“投入”很多时间在一件事情上面，却发现毫无进展，因为你没有整天把你要做的事情，要学习的东西常驻在你的大脑中，时刻给予它最高的优先级。你走路的时候吃饭的时候，做梦的时候心心念念想的就是这件事情，你的CPU总是分配给它，这个时候你的思维时间就被利用到了极致，你投入的时间就真正等于了实际流逝的时间，因为你的CPU是满载的。&#xA;如果你有做总结的习惯，你在度过一段时间之后总结自己在某某领域投入了多少时间，建议千万不要粗略地去计算有多少天下班后拿起书来翻看过，因为这样你也许会发现书倒是常翻，但领悟却不见得多深，表面上花的时间不少，收益却不见得那么大。因为看书并记住书中的东西只是记忆，并没有涉及推理，只有靠推理才能深入理解一个事物，看到别人看不到的地方，这部分推理的过程就是你的思维时间，也是人一生中占据一个显著比例的“暗时间”，你走路、买菜、洗脸洗手、坐公车、逛街、出游、吃饭、睡觉，所有这些时间都可以成为“暗时间”，你可以充分利用这些时间进行思考，反刍和消化平时看和读的东西，让你的认识能够脱离照本宣科的层面。这段时间看起来微不足道，但日积月累将会产生庞大的效应。&#xA;能够充分利用暗时间的人将无形中多出一大块生命，你也许会发现这样的人似乎玩得不比你少，看得不比你多，但不知怎么的就是比你走得更远。比如我就经常发现一些国外的牛人们为什么不仅学习牛逼，连“业余”玩儿的东东也都搞得特牛逼，一点都不业余（上次在《How We Decide》上看到斯坦福的一个牛人，理论物理学博士，同时是世界扑克大赛的前六名保持者，迄今累计奖金拿了六百多万刀），你会奇怪，这些家伙到底哪来的时间，居然可以在不止一个领域做到卓越？&#xA;程序员们都知道，任务切换需要耗费许多额外的花销，通俗地来讲，首先需要保存当前上下文以便下次能够顺利切换回来，然后要加载目标任务的上下文。如果一个系统不停地在多个任务之间来回倒腾，就会耗费大量的时间在上下文切换上，无形中浪费很多的时间。&#xA;相比之下，如果只做一件任务，就不会有此损失。这就是为什么专注的人比不专注的人时间利用效率高得多的原因。任务切换的暗时间看似非常不明显，甚至很多人认为“多任务”是件很好的事情（有时候的确是），但日积月累起来就会发现，消耗在切换上的时间越来越多。&#xA;另外，大脑开始一件任务的时候必须要有一定时间来“热身”，这个时间因人而异，并且可以通过练习来改变。举个例子，你看了一会书之后，忽然感到一阵无聊，忍不住打开浏览器，十分钟后你想起来还要继续看书，但要回复到当时理想的状态，却需要一段时间来努力去集中精力，把记忆中相关的知识全都激活起来，从而才能进入“状态”，因为你上了十分钟网之后这些记忆已经被抑制了。如果这个“热身”状态需要一刻钟，那么看似十分钟的上网闲逛其实就花费了二十五分钟。&#xA;如果阅读的例子还不够生动，对于程序员来说其实有更好的例子：你写程序写得正high，忽然被叫去开了一通会，写到一半的代码搁在那儿。等你开完会回来你需要多久能够重新进入状态？又或者，你正在调试程序，你已经花了二十分钟的时间把与这个bug可能相关的代码前前后后都理解了一遍，心中构建了一个大致的地图，就在这时，呃，你又被叫去开了个会(:D)，开完会回来，可想而知，得花上一些时间来回想一下刚刚弄清的东西了。&#xA;迅速进入状态的能力是可以锻炼的，根据我个人的经验，至少可以缩短到3-5分钟。但要想完全进入状态，却是很难在这么短的时间实现的。所谓完全进入状态，举个例子：你看了3个小时的书，或者调试了半个小时的程序之后，往往满脑子都是相关的东西，所有这些知识都处在活跃状态，换言之你大脑中所有相关的记忆神经网络都被激活了，要达到这样一种忘记时间流逝的“沉浸”状态（心理学上叫做“流体验”），不是三两分钟的事情。而一旦这种状态被破坏，无形间效率就会大打折扣。这也是为什么我总是倾向于创造大块的时间来阅读重要的东西，因为这样有利于“沉浸”进去，使得新知识可以和大脑中与其相关的各种既有的知识充分融合，关联起来，后者对于深刻的记忆非常有帮助。&#xA;要充分利用暗时间，不仅要能够迅速进入状态，另一个很重要的习惯就是能够保持状态多久（思维体力）。《The Psychology of Invention in the Mathematical Field》上有一段关于庞加莱的思考习惯的介绍，很有代表性。庞加莱经常在去海边休假或者在路上走的时候在脑海中思索数学问题，很多时候解答就在这些时候忽然闪现。虽然我和庞加莱是没法比的，但是常常也在路上想出答案，这真是一种愉悦的体验。&#xA;能够迅速进入专注状态，以及能够长期保持专注状态，是高效学习的两个最重要习惯。&#xA;很多人都有这样的体验（包括我自己），工作了之后，要处理的事情一下多出了很多，不像在校园，环境简单，生活单纯，能够心无旁骛地做一件事情而不被打扰。工作之后的状况就是，首先需要处理的事情变多，导致时不时需要在多个任务之间切换；另一方面，即便能够把任务的优先级分配得比较合理，也难免在做一件事情的时候心中忽然想起另一件事还没做的焦虑来，因为没做完的事情会在大脑中留下一个“隐藏的进程”，时不时地发个消息提醒你一下，中断你正在做的事情。&#xA;因此这里就涉及到最后一个高效的习惯：抗干扰。只有具备超强的抗干扰能力，才能有效地利用起前面提到的种种暗时间。抗干扰能力也是可以练习出来的，上本科那会经常坐车，所以我就常常拿着本大部头在车上看，坐着看或者站着看都可，事实证明在有干扰的环境中看书是非常锻炼专注能力的一个办法:D 另外，经常利用各种碎片时间阅读和思考，对迅速集中注意力和保持注意力都非常有帮助。记得很久以前TopLanguage上大伙曾经有次饶有兴趣地讨论“马桶时间”的利用，包括在卫生间放个小书柜。</description>
    </item>
    <item>
      <title>学会利用暗时间—必须掌握的学习方法</title>
      <link>https://anwangtanmi.github.io/posts/255df1d7fd39a48803ef4078a5bdf338/</link>
      <pubDate>Thu, 01 Apr 2010 09:29:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/255df1d7fd39a48803ef4078a5bdf338/</guid>
      <description>如果你有一台计算机，你装了一个系统之后就整天把它搁置在那里，你觉得这台计算机被实际使用了吗？没有。因为CPU整天运行的就是空闲进程。运行空闲进程也是一天，运行大数据量计算的程序也是一天，对于CPU来说同样的一天，价值却是完全不一样的。&#xA;大脑也是如此。&#xA;善于利用思维时间的人，可以无形中比别人多出很多时间，从而实际意义上能比别人多活很多年。我们经常听说“心理年龄”这个词，思考得多的人，往往心理年龄更大。有人用10年才能领悟一个道理，因为他们是被动领悟——只有在现实撞到他脸上的时候才感到疼，疼完了之后还是不记得时时提醒自己，结果很快时过境迁抛之脑后，等到第二次遇到同一个坑的时候早忘了曾经跌过跟头了，像这样的效率，除非天天摔坑里，否则遗忘的效率总是大过吃亏长的记性。善于利用思维时间的人则能够在重要的事情上时时主动提醒自己，将临时的记忆变成硬编码的行为习惯。&#xA;每个人的手表都走得一样快，但每个人的生命却不是。衡量一个人生活了多少年，应该用思维时间来计算。举一个极端的例子，如果一个人从生下来开始就呆在一个为他特殊建造的无菌保护室里，没有社会交往，没有知识获取，度过了18年，你会不会认为他成年了？&#xA;认为时间对每个人是均等的是一个错觉，认为别人有一天，我也有一天，其实根本不是这样。如果你正在学习一门专业，你使用自己所投入的天数来衡量，很容易会产生一种错觉，认为投入了不少时间，然而其实，“投入时间”这个说法本身就是荒唐的，实际投入的是时间和效率的乘积。你可以“投入”很多时间在一件事情上面，却发现毫无进展，因为你没有整天把你要做的事情，要学习的东西常驻在你的大脑中，时刻给予它最高的优先级。你走路的时候吃饭的时候，做梦的时候心心念念想的就是这件事情，你的CPU总是分配给它，这个时候你的思维时间就被利用到了极致，你投入的时间就真正等于了实际流逝的时间，因为你的CPU是满载的。&#xA;如果你有做总结的习惯，你在度过一段时间之后总结自己在某某领域投入了多少时间，建议千万不要粗略地去计算有多少天下班后拿起书来翻看过，因为这样你也许会发现书倒是常翻，但领悟却不见得多深，表面上花的时间不少，收益却不见得那么大。因为看书并记住书中的东西只是记忆，并没有涉及推理，只有靠推理才能深入理解一个事物，看到别人看不到的地方，这部分推理的过程就是你的思维时间，也是人一生中占据一个显著比例的“暗时间”，你走路、买菜、洗脸洗手、坐公车、逛街、出游、吃饭、睡觉，所有这些时间都可以成为“暗时间”，你可以充分利用这些时间进行思考，反刍和消化平时看和读的东西，让你的认识能够脱离照本宣科的层面。这段时间看起来微不足道，但日积月累将会产生庞大的效应。&#xA;能够充分利用暗时间的人将无形中多出一大块生命，你也许会发现这样的人似乎玩得不比你少，看得不比你多，但不知怎么的就是比你走得更远。比如我就经常发现一些国外的牛人们为什么不仅学习牛逼，连“业余”玩儿的东东也都搞得特牛逼，一点都不业余（上次在《How We Decide》上看到斯坦福的一个牛人，理论物理学博士，同时是世界扑克大赛的前六名保持者，迄今累计奖金拿了六百多万刀），你会奇怪，这些家伙到底哪来的时间，居然可以在不止一个领域做到卓越？&#xA;程序员们都知道，任务切换需要耗费许多额外的花销，通俗地来讲，首先需要保存当前上下文以便下次能够顺利切换回来，然后要加载目标任务的上下文。如果一个系统不停地在多个任务之间来回倒腾，就会耗费大量的时间在上下文切换上，无形中浪费很多的时间。&#xA;相比之下，如果只做一件任务，就不会有此损失。这就是为什么专注的人比不专注的人时间利用效率高得多的原因。任务切换的暗时间看似非常不明显，甚至很多人认为“多任务”是件很好的事情（有时候的确是），但日积月累起来就会发现，消耗在切换上的时间越来越多。&#xA;另外，大脑开始一件任务的时候必须要有一定时间来“热身”，这个时间因人而异，并且可以通过练习来改变。举个例子，你看了一会书之后，忽然感到一阵无聊，忍不住打开浏览器，十分钟后你想起来还要继续看书，但要回复到当时理想的状态，却需要一段时间来努力去集中精力，把记忆中相关的知识全都激活起来，从而才能进入“状态”，因为你上了十分钟网之后这些记忆已经被抑制了。如果这个“热身”状态需要一刻钟，那么看似十分钟的上网闲逛其实就花费了二十五分钟。&#xA;如果阅读的例子还不够生动，对于程序员来说其实有更好的例子：你写程序写得正high，忽然被叫去开了一通会，写到一半的代码搁在那儿。等你开完会回来你需要多久能够重新进入状态？又或者，你正在调试程序，你已经花了二十分钟的时间把与这个bug可能相关的代码前前后后都理解了一遍，心中构建了一个大致的地图，就在这时，呃，你又被叫去开了个会(:D)，开完会回来，可想而知，得花上一些时间来回想一下刚刚弄清的东西了。&#xA;迅速进入状态的能力是可以锻炼的，根据我个人的经验，至少可以缩短到3-5分钟。但要想完全进入状态，却是很难在这么短的时间实现的。所谓完全进入状态，举个例子：你看了3个小时的书，或者调试了半个小时的程序之后，往往满脑子都是相关的东西，所有这些知识都处在活跃状态，换言之你大脑中所有相关的记忆神经网络都被激活了，要达到这样一种忘记时间流逝的“沉浸”状态（心理学上叫做“流体验”），不是三两分钟的事情。而一旦这种状态被破坏，无形间效率就会大打折扣。这也是为什么我总是倾向于创造大块的时间来阅读重要的东西，因为这样有利于“沉浸”进去，使得新知识可以和大脑中与其相关的各种既有的知识充分融合，关联起来，后者对于深刻的记忆非常有帮助。&#xA;要充分利用暗时间，不仅要能够迅速进入状态，另一个很重要的习惯就是能够保持状态多久（思维体力）。《The Psychology of Invention in the Mathematical Field》上有一段关于庞加莱的思考习惯的介绍，很有代表性。庞加莱经常在去海边休假或者在路上走的时候在脑海中思索数学问题，很多时候解答就在这些时候忽然闪现。虽然我和庞加莱是没法比的，但是常常也在路上想出答案，这真是一种愉悦的体验。&#xA;能够迅速进入专注状态，以及能够长期保持专注状态，是高效学习的两个最重要习惯。&#xA;很多人都有这样的体验（包括我自己），工作了之后，要处理的事情一下多出了很多，不像在校园，环境简单，生活单纯，能够心无旁骛地做一件事情而不被打扰。工作之后的状况就是，首先需要处理的事情变多，导致时不时需要在多个任务之间切换；另一方面，即便能够把任务的优先级分配得比较合理，也难免在做一件事情的时候心中忽然想起另一件事还没做的焦虑来，因为没做完的事情会在大脑中留下一个“隐藏的进程”，时不时地发个消息提醒你一下，中断你正在做的事情。&#xA;因此这里就涉及到最后一个高效的习惯：抗干扰。只有具备超强的抗干扰能力，才能有效地利用起前面提到的种种暗时间。抗干扰能力也是可以练习出来的，上本科那会经常坐车，所以我就常常拿着本大部头在车上看，坐着看或者站着看都可，事实证明在有干扰的环境中看书是非常锻炼专注能力的一个办法:D 另外，经常利用各种碎片时间阅读和思考，对迅速集中注意力和保持注意力都非常有帮助。记得很久以前TopLanguage上大伙曾经有次饶有兴趣地讨论“马桶时间”的利用，包括在卫生间放个小书柜。（估计很多同学心有戚戚焉吧）</description>
    </item>
    <item>
      <title>Install flash plugin to Chrome Browser on Ubuntu 9.10</title>
      <link>https://anwangtanmi.github.io/posts/9212e74232ad64eac671aa3d9af59371/</link>
      <pubDate>Sat, 30 Jan 2010 15:34:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/9212e74232ad64eac671aa3d9af59371/</guid>
      <description>http://www.howtoforge.com/how-to-enable-adobes-flash-player-in-google-chrome-ubuntu-9.04-p2&#xA;Open a terminal (Applications &amp;gt; Accessories &amp;gt; Terminal):&#xA;If the Flash plugin is already installed for Firefox, we have to find out where it is located:&#xA;sudo updatedb&#xA;sudo locate libflashplayer.so&#xA;If it is installed, output should be similar to this one…&#xA;falko@falko-desktop:~$ sudo locate libflashplayer.so&#xA;/opt/Adobe AIR/Versions/1.0/Resources/libflashplayer.so&#xA;/usr/lib/flashplugin-installer/libflashplayer.so&#xA;falko@falko-desktop:~$&#xA;… which means the Flash plugin is located in /usr/lib/flashplugin-installer/libflashplayer.so. If there’s no output, this means that the Flash plugin isn’t installed – you can then install it as follows:</description>
    </item>
    <item>
      <title>如何利用“暗时间”</title>
      <link>https://anwangtanmi.github.io/posts/15e0f0499047dd646d87f4e618c124ff/</link>
      <pubDate>Thu, 28 Jan 2010 23:02:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/15e0f0499047dd646d87f4e618c124ff/</guid>
      <description>在我没有看到这篇文章之前，有几个困惑：&#xA;如何用一个词来表示什么叫空闲时间？ 时间对于每个人都公平吗？ 为什么有的人可以同事把很多事做得非常优秀？ 我已经知道专注的力量，那在很多事情之间进行切换，又是怎样的一种状态？ 如何避免诱惑，训练集中注意力，提高抗干扰能力？ 来自：刘未鹏 | Mind Hacks（这家伙，惜字如金，常常几个月才写篇博文，却精妙绝伦）&#xA;原文：暗时间&#xA;如果你有一台计算机，你装了一个系统之后就整天把它搁置在那里，你觉得这台计算机被实际使用了吗？没有。因为CPU整天运行的就是空闲进程。运行空闲进程也是一天，运行大数据量计算的程序也是一天，对于CPU来说同样的一天，价值却是完全不一样的。&#xA;大脑也是如此。&#xA;善于利用思维时间的人，可以无形中比别人多出很多时间，从而实际意义上能比别人多活很多年。我们经常听说“心理年龄”这个词，思考得多的人，往往心 理年龄更大。有人用10年才能领悟一个道理，因为他们是被动领悟——只有在现实撞到他脸上的时候才感到疼，疼完了之后还是不记得时时提醒自己，结果很快时 过境迁抛之脑后，等到第二次遇到同一个坑的时候早忘了曾经跌过跟头了，像这样的效率，除非天天摔坑里，否则遗忘的效率总是大过吃亏长的记性。善于利用思维 时间的人则能够在重要的事情上时时主动提醒自己，将临时的记忆变成硬编码的行为习惯。&#xA;每个人的手表都走得一样快，但每个人的生命却不是。衡量一个人生活了多少年，应该用思维时间来计算。举一个极端的例子，如果一个人从生下来开始就呆在一个为他特殊建造的无菌保护室里，没有社会交往，没有知识获取，度过了18年，你会不会认为他成年了？&#xA;认为时间对每个人是均等的是一个错觉，认为别人有一天，我也有一天，其实根本不是这样。如果你正在学习一门专业，你使用自己所投入的天数来衡量，很 容易会产生一种错觉，认为投入了不少时间，然而其实，“投入时间”这个说法本身就是荒唐的，实际投入的是时间和效率的乘积。你可以“投入”很多时间在一件 事情上面，却发现毫无进展，因为你没有整天把你要做的事情，要学习的东西常驻在你的大脑中，时刻给予它最高的优先级。你走路的时候吃饭的时候，做梦的时候 心心念念想的就是这件事情，你的CPU总是分配给它，这个时候你的思维时间就被利用到了极致，你投入的时间就真正等于了实际流逝的时间，因为你的CPU是 满载的。&#xA;如果你有做总结的习惯，你在度过一段时间之后总结自己在某某领域投入了多少时间，建议千万不要粗略地去计算有多少天下班后拿起书来翻看过，因为这样 你也许会发现书倒是常翻，但领悟却不见得多深，表面上花的时间不少，收益却不见得那么大。因为看书并记住书中的东西只是记忆，并没有涉及推理，只有靠推理 才能深入理解一个事物，看到别人看不到的地方，这部分推理的过程就是你的思维时间，也是人一生中占据一个显著比例的“暗时间”，你走路、买菜、洗脸洗手、坐公车、逛街、出游、吃饭、睡觉，所有这些时间都可以成为“暗时间”，你可以充分利用这些时间进行思考，反刍和消化平时看和读的东西，让你的认识能够脱离照本宣科的层面。这段时间看起来微不足道，但日积月累将会产生庞大的效应。&#xA;能够充分利用暗时间的人将无形中多出一大块生命，你也许会发现这样的人似乎玩得不比你少，看得不比你多，但不知怎么的就是比你走得更远。比如我就经常发现一些国外的牛人们为什么不仅学习牛逼，连“业余”玩儿的东东也都搞得特牛逼，一点都不业余（上次在《How We Decide》上看到斯坦福的一个牛人，粒子物理教授，同时是世界扑克大赛的前六名保持者，迄今累计奖金拿了六百多万刀），你会奇怪，这些家伙到底哪来的时间，居然可以在不止一个领域做到卓越？&#xA;程序员们都知道，任务切换需要耗费许多额外的花销，通俗地来讲，首先需要保存当前上下文以便下次能够顺利切换回来，然后要加载目标任务的上下文。如果一个系统不停地在多个任务之间来回倒腾，就会耗费大量的时间在上下文切换上，无形中浪费很多的时间。&#xA;相比之下，如果只做一件任务，就不会有此损失。这就是为什么专注的人比不专注的人时间利用效率高得多的原因。任务切换的暗时间看似非常不明显，甚至很多人认为“多任务”是件很好的事情（有时候的确是），但日积月累起来就会发现，消耗在切换上的时间越来越多。&#xA;另外，大脑开始一件任务的时候必须要有一定时间来“热身”，这个时间因人而异，并且可以通过练习来改变。举个例子，你看了一会书之后，忽然感到一阵 无聊，忍不住打开浏览器，十分钟后你想起来还要继续看书，但要回复到当时理想的状态，却需要一段时间来努力去集中精力，把记忆中相关的知识全都激活起来， 从而才能进入“状态”，因为你上了十分钟网之后这些记忆已经被抑制了。如果这个“热身”状态需要一刻钟，那么看似十分钟的上网闲逛其实就花费了二十五分 钟。&#xA;如果阅读的例子还不够生动，对于程序员来说其实有更好的例子：你写程序写得正high，忽然被叫去开了一通会，写到一半的代码搁在那儿。等你开完会 回来你需要多久能够重新进入状态？又或者，你正在调试程序，你已经花了二十分钟的时间把与这个bug可能相关的代码前前后后都理解了一遍，心中构建了一个 大致的地图，就在这时，呃，你又被叫去开了个会(:D)，开完会回来，可想而知，得花上一些时间来回想一下刚刚弄清的东西了。&#xA;迅速进入状态的能力是可以锻炼的，根据我个人的经验，至少可以缩短到3-5分钟。但要想完全进入状态，却是很难在这么短的时间实现的。所谓完全进入 状态，举个例子：你看了3个小时的书，或者调试了半个小时的程序之后，往往满脑子都是相关的东西，所有这些知识都处在活跃状态，换言之你大脑中所有相关的 记忆神经网络都被激活了，要达到这样一种忘记时间流逝的“沉浸”状态（心理学上叫做“流体验”），不是三两分钟的事情。而一旦这种状态被破坏，无形间效率就会大打折扣。这也是为什么我总是倾向于创造大块的时间来阅读重要的东西，因为这样有利于“沉浸”进去，使得新知识可以和大脑中与其相关的各种既有的知识充分融合，关联起来，后者对于深刻的记忆非常有帮助。&#xA;要充分利用暗时间，不仅要能够迅速进入状态，另一个很重要的习惯就是能够保持状态多久（思维体力）。《The Psychology of Invention in the Mathematical Field》上有一段关于庞加莱的思考习惯的介绍，很有代表性。庞加莱经常在去海边休假或者在路上走的时候在脑海中思索数学问题，很多时候解答就在这些时候忽然闪现。虽然我和庞加莱是没法比的，但是常常也在路上想出答案，这真是一种愉悦的体验。&#xA;能够迅速进入专注状态，以及能够长期保持专注状态，是高效学习的两个最重要习惯。&#xA;很多人都有这样的体验（包括我自己），工作了之后，要处理的事情一下多出了很多，不像在校园，环境简单，生活单纯，能够心无旁骛地做一件事情而不被 打扰。工作之后的状况就是，首先需要处理的事情变多，导致时不时需要在多个任务之间切换；另一方面，即便能够把任务的优先级分配得比较合理，也难免在做一 件事情的时候心中忽然想起另一件事还没做的焦虑来，因为没做完的事情会在大脑中留下一个“隐藏的进程”，时不时地发个消息提醒你一下，中断你正在做的事 情。&#xA;因此这里就涉及到最后一个高效的习惯：抗干扰。只有具备超强的抗干扰能力，才能有效地利用起前面提到的种种暗时间。抗干扰能力也是可以练习出来的， 上本科那会经常坐车，所以我就常常拿着本大部头在车上看，坐着看或者站着看都可，事实证明在有干扰的环境中看书是非常锻炼专注能力的一个办法:D 另外，经常利用各种碎片时间阅读和思考，对迅速集中注意力和保持注意力都非常有帮助。记得很久以前TopLanguage上大伙曾经有次饶有兴趣地讨论“马桶时间”的利用，包括在卫生间放个小书柜。（估计很多同学心有戚戚焉吧:D）&#xA;原文地址：http://www.zreading.cn/archives/1548.html</description>
    </item>
    <item>
      <title>Flex Deep Link(深链接) BrowserManager</title>
      <link>https://anwangtanmi.github.io/posts/b40b11e82cefbbb58cdba4d3acb015f2/</link>
      <pubDate>Fri, 11 Sep 2009 11:41:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/b40b11e82cefbbb58cdba4d3acb015f2/</guid>
      <description>最近做游戏的时候，发现退出登陆时URL上会自动加上一个“#”字符，很奇怪，Google+Baidu无数次都没有找到答案。今天无意间看到几个群友在说通过“BrowserManager”获取URL，于是仔细查看了API，又发现了“HistoryManager”，这个问题终于明白了。&#xA;我们通常看的Web页面 可以通过浏览器的“前进”“后退”来查看刚才看过的页面，同样，嵌入的页面中的flash也可以实现这样的功能。方法是通过HistoryManageer类和BrowserManager类两种方法来实现。HistoryManageer类主要是用在Flex2，Flex3后很少用了。待会我将分别介绍这两种方法。&#xA;回到刚才说URL上自动加“#”号的问题：原因是Application 默认historyManagementEnabled属性是ture，也就是说HistoryManageer类功能自动开启了，Application 里面通过程序控制addChild或removeChild任何组件所导致的变化，将会记录在flash的history中，导致重写url，加上“#”字符。故有了这个奇怪的“#”号。在Flex3中，HistoryManager功能在Flex项目中默认打开的还有Accordion 和 TabNavigator组件。对于没有默认打开该功能的组件，如果要实现该功能，则需要另外注册。下面引用两片文章加以说明：&#xA;对于一个网站来说，其是有若干个网页组成的。而各个网页之间的链接叫做超链接。链接成为网页和网页之间的桥梁。那么，对于一个Flash整站来说，有没有一个办法来实现Flash各页面（更恰当的说是各功能模块）之间的链接呢。比如，我想在浏览器中输入一个链接便可以链到Flash整站中的一页—一个功能模块，而不是每次都要通过Flash整站的第一个页面的功能导航进入。把Flash的各个功能块页面化，那么我们该怎么实现呢。到底能不能实现呢？&#xA;答案是肯定的，通过Flex Deep Link 便能实现上述功能。&#xA;目录 [隐藏] 1 第一，Deep Link 简介。 2 第二，HistoryManager。 3 方法： 4 属性： 5 如何分析URl 6 获得链接信息 Flex Deep Link(深链接)-第一，Deep Link 简介。 Deep Link其实也是依赖Flash和浏览器的交互来实现的，通过获取链接地址中#后面的参数来实现页面标记，当你在Flex Bulid3发布一个项目时，其会自动你发布的目录生成一个名为History的文件夹，里面有History.js,HistoryFrame.html,history.css这三个文件，可见Deep Link也是通过和浏览器交互来实现的.如果浏览器不支持JavaScript或者禁用JavaScript，那么Deep LinK肯定是不能用的。&#xA;对于Deep Link应用，最重要的就是学会应用BrowserManager和HistoryManager这两个类。我们由简单到困难，先讲一讲HistoryManager这个类的应用。&#xA;Flex Deep Link(深链接)- 第二，HistoryManager。 HistoryManager功能在Flex项目中是默认打开的，比如在使用Accordion 和 TabNavigator组件时，在不同区域切换时，Flex会自动记录下各个状态，我们可以通过点击浏览器的“前进”和“后退”按钮来前进和倒退，在你切换这些组件的区域时，Flex会自动你在网页链接的后面加写参数，以便记录当前页面的状态。&#xA;默认情况下HistoryManager的功能是打开的，你可以通过设置各个组件或Application的historyManagementEnabled属性为false（默认为TRUE）来关闭此功能。&#xA;这些都没什么好讲的。关键是怎么在一些普通组建上使用HistoryManager功能，默认的navigator container组建都是支持该功能的。要使一些普通组建也支持此功能，必须：&#xA;1.实现mx.managers.IHistoryManagerClient接口。&#xA;2.用HistoryManager’的register()方法为组建注册。&#xA;3.当组件状态改变时保存组件的状态。&#xA;4.通过实施IHistoryManagerClient的saveState() 和 loadState()方法来保存和读取组件状态。&#xA;拿CheckBox为例：&#xA;xmlns:mx=”http://www.adobe.com/2006/mxml”&#xA;label=”Check me” implements=”mx.managers.IHistoryManagerClient” //关键步骤1，实现接口&#xA;creationComplete=”mx.managers.HistoryManager.register(this);”//关键步骤2，注册组件&#xA;change=”boxChanged(event)”//关键步骤3，当组件发生变化时保存状态&#xA;&amp;gt;&#xA;if (newState != selected) {</description>
    </item>
    <item>
      <title>弹出层效果，背景变暗</title>
      <link>https://anwangtanmi.github.io/posts/7ab6eb4d2bbe8c54459a86b75f4c2da2/</link>
      <pubDate>Fri, 23 May 2008 11:48:00 +0800</pubDate>
      <guid>https://anwangtanmi.github.io/posts/7ab6eb4d2bbe8c54459a86b75f4c2da2/</guid>
      <description>我把js做成一个文件保存为msg.js文件：&#xA;代码如下：&#xA;//&#xA;JavaScript Document&#xA;var&#xA;isIe&#xA;=&#xA;(document.all)&#xA;?&#xA;true&#xA;:&#xA;false&#xA;; //&#xA;设置select的可见状态 function&#xA;setSelectState(state) …&#xA;{ var objl=document.getElementsByTagName(‘select‘); for(var i=0;i&amp;lt;objl.length;i++) …{ objl[i].style.visibility=state; } }&#xA;function&#xA;mousePosition(ev) …&#xA;{ if(ev.pageX || ev.pageY) …{ return …{x:ev.pageX, y:ev.pageY}; } return …{ x:ev.clientX + document.body.scrollLeft – document.body.clientLeft,y:ev.clientY + document.body.scrollTop – document.body.clientTop }; }&#xA;//&#xA;弹出方法 function&#xA;showMessageBox(wTitle,content,pos,wWidth) …&#xA;{ closeWindow(); var bWidth=parseInt(document.documentElement.scrollWidth); var bHeight=parseInt(document.documentElement.scrollHeight); if(isIe)…{ setSelectState(‘hidden‘);} var back=document.createElement(“div“); back.id=“back“; var styleStr=“top:0px;left:0px;position:absolute;background:#003973;width:“+bWidth+“px;height:“+bHeight+“px;“; styleStr+=(isIe)?</description>
    </item>
  </channel>
</rss>
